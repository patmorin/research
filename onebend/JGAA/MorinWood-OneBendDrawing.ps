%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: MorinWood-OneBendDrawing.dvi
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: CMMI10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t a4 -o MorinWood-OneBendDrawing.ps
%+ MorinWood-OneBendDrawing.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.04.27:1203
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600
(MorinWood-OneBendDrawing.dvi) @start
%DVIPSBitmapFont: Fa cmcsc10 10 47
/Fa 47 128 df<B512C0A23807F8006C5AB3B3487EB512C0A2122B7CAA19>16
D<133C137EA213FE1201EA03FC13F0EA07E0EA0FC0EA1F80EA1E005A5A5A12C00F0F6DB9
2E>19 D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E
5A5A5A12600A1977881B>44 D<121C127FEAFF80A5EA7F00121C090977881B>46
D<150EA3151FA24B7EA34B7EA3EDDFE0A202017F158FA29138030FF81507A202067F1503
020E7FEC0C01A2021C7FEC1800A24A80167FA24A6D7EA202E0804A131FA2494880160FA2
49B67EA249810106C71203A249811601A2498182A2496F7EA20170820160153F13E06D82
1203D80FFCED7FF8B56C010FB512E0A33B3C7CBB44>65 D<B712F816FF17C00001903980
001FF06C90C7EA07FC707E707E701380177F18C0173F18E0A618C0A2177F1880EFFF004C
5A4C5AEE0FF8EE3FE091B6128094C7FC91C7EA3FE0EE07F8EE01FE707EEF7F80EF3FC018
E0171F18F0170F18F8A718F0171F18E0173FEF7FC0EFFF804C1300EE07FE486DEB1FFCB8
12F017C04CC7FC35397CB840>I<DB7FC01330912607FFF81370023F13FE913AFFC01F80
F0903A03FE0003E1D907F8EB00F3D91FE0147B4948143F4948141F49C8120F4848150748
481503A24848150148481500A2485A1870123F5B1830127FA349160012FFAB127F7F1830
A2123FA27F001F177018606C7E18E06C6C16C06C6C150118806C6C15036C6CED07006D6C
5C6D6C141E6D6C5CD907F85CD903FEEB01E0903A00FFC00FC0023FB5C7FC020713FC9138
007FE0343D7ABA41>I<B712F816FF17C00001903980003FF06C90C7EA07FCEE01FEEE00
7F717E717E717E717E841703717EA284170084A21980187FA319C0AB1980A4F0FF00A360
1701601703604D5A4D5A171F4D5A4D5ADC01FEC7FCEE07FC486DEB3FF0B85A94C8FC16F8
3A397CB845>I<B912C0A3C601C0C7FC6D48141FEF07E017031701A21700A21860A31870
18301618A31800A31638A21678ED03F891B5FCA3EC8003ED00781638A21618A21806A318
0E93C7120CA4181CA31838A2187818F817011703170F496CEC7FF0B9FCA337397DB83E>
I<B812FEA3000190388000076C90C8FC173F838383A383A318801701A21660A294C7FCA4
16E0A21501150791B5FCA3EC000715011500A21660A693C8FCAD4813C0B612E0A331397C
B83B>I<DB7FC01330912607FFF81370023F13FE913AFFC01F80F0903A03FE0003E1D907
F8EB00F3D91FE0147B4948143F4948141F49C8120F4848150748481503A2484815014848
1500A2485A1870123F5B1830127FA34993C7FC12FFAA047FB512C0127F7F9339003FF800
EF0FF0123FA27F121F7F120FA26C7E6C7EA26C7E6C6C151F6D7E6D6C143FD91FF0147BD9
07F814F1D903FEEB01E0903B00FFE00FC070023FB5EA0030020701FC90C7FC9138007FE0
3A3D7ABA47>I<B6D8C07FB512E0A3C601C0C7387FE0006D486E5AB3A491B7FCA30280C7
123FB3A6496C4A7EB6D8C07FB512E0A33B397CB844>I<011FB512F0A39039000FFE00EC
03FCB3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B0070130F6C495A6C5C6C49C7FC38
07C0FE3801FFF838003FC0243B7CB82F>74 D<B691383FFFE0A30001018091380FFE006C
90C8EA07F018C060050EC7FC5F5F5F5F4C5A4C5A040FC8FC161C5E5E5E4B5A4B5A4BC9FC
5D5DED7F804B7E4A7FEC03BF9138071FF0020E7FEC1C0F4A6C7E4A6C7E14E091388001FF
91C77F83167F707E707EA2707E707E831603707E8482717E717E84A284486DEC7FFEB601
03B512F0A33C397CB846>I<B612E0A3000101C0C8FC6C90C9FCB3AD1706A5170E170CA3
171CA3173C177CA217FC1603EE0FF8486D137FB8FCA32F397CB839>I<B5933801FFFE6E
5DA2000119002600DFC0ED06FEA2D9CFE0150CA3D9C7F01518A2D9C3F81530A3D9C1FC15
60A2D9C0FE15C0A3027FEC0180A26E6CEB0300A36E6C1306A26E6C5BA26E6C5BA36E6C5B
A26E6C5BA36E6C5BA292387F0180A3DB3F83C7FCA2ED1FC6A3ED0FECA2ED07F8A3486C6D
5A487ED80FFC6D48497EB500C092B512FEA26F5A47397BB852>I<B500C049B512E0A280
C66C6C9039000FFC00EF03F0D96FF86E5AD967FC6E5AA2EB63FEEB61FF8113606E7E6E7E
A26E7E6E7E8114076E7E81806E7F6F7E82153F6F7E82150F6F7E6F7EA26F7E6F138017C0
167FEE3FE0EE1FF0A2EE0FF8EE07FC17FE1603EE01FFA282177F173FA2171F170F13F048
6C1507D807FE1503B500F01401A217003B397CB844>I<B712F816FF17E0C69039C0003F
F86D48EB07FCEE01FE707EEF7F80EF3FC0A2EF1FE0A218F0A718E0A2EF3FC0A2EF7F80EF
FF004C5AEE07F8EE3FF091B612C04CC7FC0280C9FCB3A5497EB612C0A334397DB83E>80
D<B7FC16F016FE000190398001FF806C90C7EA3FE0EE0FF0707E707E707EA2838284A695
C7FC5E5F5F1603EE07F04C5AEE3F80DB01FEC8FC91B512F816E091380003FCED00FEEE7F
80707E707E707EA2160783A583A61930A28316031970486D6D6C1360B66D14E094387F81
C094383FC380CA380FFF00EF01FC3C3B7CB842>82 D<D907F81330D93FFF137090B512E0
3A03F807F0F03907E000794848133F4848130F90C71207003E1403007E1401A2007C1400
12FC1670A36C1530A37E6D14006C7E7F13F86CB47E6C13FCECFFC06C14F06C14FC000114
FF6C1580013F14C0010714E0EB003F020313F0EC007FED1FF8150F1507ED03FCA200C014
01A21500A37EA216F87E15016C15F06C14036C15E06CEC07C001C0130FD8F9F0EB1F80D8
F0FFEB7E0039E03FFFFC010F13F048C61380263D7ABA33>I<003FB812FCA3D9C001EB80
0390C790C7FC007C173E0078171E0070170EA300601706A400E01707481703A4C81500B3
B0020313C0010FB612F0A338397CB841>I<B500FE91380FFFF8A3000301C0020113806C
90C9EA7E006C173C6E1538017F1630A26E1570013F166080011F5EA26E1401010F5E8001
074BC7FCA26E5C010315068001015DA26D6C5CA281027F5CA26E6C5BA281021F5C81020F
495AA215F8020749C8FC15FC02031306A2EDFE0E0201130C15FF6E5BA216B8ED7FB016F0
6F5AA36F5AA26F5AA36FC9FCA23D3B7DB844>86 D<B500FC90B500FE90380FFFF8A30007
0180010301C0010013C06C90C76C90C8EA3F006C48191E6D6E161C6C1A18717E6E183801
7F1930846E1870013F70146017DF6E18E0011F705CEE018F6E1701010F705CEE03076E17
0301077091C7FCEE06036E5F0103701306EE0C016E170E010170130C4C7E6D6C5F043814
800430137FDA7F805E047014C00460133FDA3FC05E04E014E04C131FDA1FE05E03E115F0
4C130FDA0FF1EDF18003F315F993C71207DA07FB03FBC8FC03FF15FF4B8002035EA24B14
0102015E4B1400A202005E4B1578A20370157003601530553B7DB85C>I<1407A24A7EA3
4A7EA3EC37E0A2EC77F01463A2ECC1F8A201017F1480A2903803007EA301067FA2010E80
010C131FA2496D7EA2013FB57EA29038300007496D7EA3496D7EA200018149130012036D
801207D81FE0903801FF80D8FFF8010F13F8A22D2C7DAB33>97 D<B612F015FE3A07F800
3F806C48EB0FC0ED07E0ED03F016F8150116FCA516F8A2ED03F01507ED0FE0ED3F809138
01FF0090B512F815FF9039F0001FC0ED07E0ED03F0ED01F816FC150016FEA616FC1501A2
ED03F8ED07F0ED0FE0486CEB3FC0B7120015F8272B7CAA30>I<91383FC006903901FFF8
0E90390FE03E1E90381F0007017EEB03BE01F8EB01FE484813004848147E0007153E485A
001F151E5B003F150E90C8FC5A1606A212FE1600AA007F1506A37E6D140E001F150C7F00
0F151C6C6C1418000315386C6C14706C6C14E0017EEB01C0011FEB078090390FE03E0090
3801FFF89038003FC0272D7BAB31>I<B612F015FE3907F8007F6C48EB0FC0ED03E06F7E
6F7E167C167E82A2EE1F80A217C0160FA317E0AA17C0A3EE1F80A217005E163E5E16FC4B
5A4B5AED0FC0486CEB7F80B600FEC7FC15F02B2B7CAA34>I<B712E0A23907F8000F6C48
1303ED00F01670A21630A41618A215C01600A31401A2140790B5FCA2EBF0071401A21400
A21606A21500A2160CA4161CA2163C167C16F8486C1307B7FCA2272B7CAA2E>I<91383F
E003903901FFF807903907E01E0F90391F00078F017EEB01DF496DB4FC48488048488048
4880485A001F815B003F8190C8FC5A82A212FE93C7FCA892383FFFF8A2007F02001380EE
3F00A27E7F121F7F120F6C7E6C7E6C6C5C6C7E017E5C011FEB01CF903907E00F87903901
FFFE039026003FF0C7FC2D2D7BAB35>103 D<B539C07FFFE0A23B07F80003FC006C486D
5AB190B6FCA29038F00001B2486C497EB539C07FFFE0A22B2B7CAA33>I<B512C0A23807
F8006C5AB3B3487EB512C0A2122B7CAA19>I<90B512C0A2903801FE006D5AB3AB121012
7C12FEA3495A12FC387003F06C485A381E0FC06CB4C7FCEA01FC1A2C7CAA23>I<B500C0
EBFFF8A2D807F8C7EA7FC06C481500167C167816E04B5A4B5A4BC7FC150E5D5D15F0EC01
C04A5A4AC8FC5C4A7E4A7E4A7EEBF1E79038F387F09038F703F89038FE01FC13FC496C7E
49137F6F7EA26F7E6F7E1507826F7E6F7EA26F7E82EE7F80486CECFFC0B5D8C00313FCA2
2E2B7CAA35>I<B512E0A2D807F8C8FC6C5AB3A61660A416C0A31501A21503A21507ED1F
80486C13FFB7FCA2232B7CAA2B>I<D8FFF0ED3FFC6D157F0007178000031700017C15DF
A26DEC019FA36DEC031FA26D6C1306A36D6C130CA26D6C1318A26D6C1330A36D6C1360A2
027C13C0A391383E0180A291381F0300A3EC0F86A2EC07CCA3EC03F8A2486C6C5AA2D81F
E0ED3F803CFFFC00E007FFFCA2362B7CAA3E>I<D8FFF0903807FFE07F0007020013006C
6C143C7F017F14187F806D7E130F806D7E6D7EA26D7E6D7E147E147FEC3F80141F15C0EC
0FE0EC07F0140315F8EC01FC140015FE157FED3F98151F16D8ED0FF81507A215031501A2
486C13001678D81FE01438EAFFFC16182B2B7CAA33>I<EC7FC0903803FFF890380FC07E
90393F001F80017CEB07C04848EB03F048486D7E4913004848147C000F157E484880A248
C8EA1F80A24816C0A2007E150FA200FE16E0AA007FED1FC0A36C16806D143F001F1600A2
6C6C147E6C6C5CA26C6C495A6C6C495AD8007CEB07C0013FEB1F8090260FC07EC7FC9038
03FFF89038007FC02B2D7BAB35>I<B612E015FC3907F800FE6C48EB1F80ED0FC0ED07E0
16F01503A216F8A516F0A2150716E0ED0FC0ED1F80EDFE0090B55A15E001F0C8FCB1487E
B512C0A2252B7CAA2E>I<B67E15F03907F800FE6C48133FED0FC06F7EA26F7E82A65E4B
5AA24B5A033FC7FC15FE90B512F05D9038F001F8EC007E816F7EA26F7EA582A4171816F0
15071738486C903803F830B5D8C00113709238007FE0C9EA1F802D2C7CAA32>114
D<017F13603901FFE0E0380780F9380E001F48130748130312780070130100F01300A315
607EA26C14007E127F13C0EA3FFEEBFFE06C13F8000713FE6C7FC61480010F13C01300EC
0FE01407EC03F01401A212C01400A37E15E06C1301A26CEB03C06CEB0780B4EB0F0038F3
E01E38E0FFF838C01FE01C2D7BAB26>I<007FB712C0A23A7E003FC00F007890381F8003
007015011600126000E016E0A2481660A5C71500B3A8EC7FE0011FB57EA22B2B7DAA31>
I<B539C007FFE0A2D807F8C713006C48143CA21618B3A916386C6C1430A2000015706D5C
017C5C6D13016D495A90260F800FC7FC903803E03C903800FFF8EC3FC02B2C7CAA33>I<
B56CEB3FFEA2D80FFCC7EA0FF06C48EC07E00003ED03C01780000116006D5C00001506A2
017E5CA2017F141C6D141880011F5CA26D6C5BA28001075CA26D6C485AA2ECF803010191
C7FCA2903800FC06A2ECFE0EEC7E0C147F6E5AA2EC1FB0A215F06E5AA26E5AA36E5AA22F
2C7EAA33>I<B5903B7FFF800FFF80A2D80FF8903B07FC0003FC006C486D486D5A725A00
0302015DA26C6C8061A26C6C496C495A167EA2017ED9077F49C7FCED063FA26D010EEB80
06ED0C1FA26D6C486C6C5AA36D6C486C6C5AA36D6C486C6C5AA21870903B03F0C001F860
A202F815E0903B01F98000FCC0A202FD14FD6DB4C7EA7F80A3027E6EC8FCA3023C141EA3
0218140C412C7EAA45>I<B56CEB1FFEA2D80FFCC7EA0FF00003ED07C01780000116006C
6C1406017F140E160C6D6C5B6D6C133816306D6C5B6D6C13E05E6D6C485A903801FC0393
C7FC903800FE06EC7F0E150CEC3F9CEC1FF85D140F6E5AAF4A7E49B57EA22F2B7EAA33>
121 D<003FB6FCA29038E0007F90C712FE003E495A123C0038495A48495AA24A5A00605C
141F4A5AA2C748C7FC14FEA2495A495AA2495A5C130F495AA2495A49C8FCED018013FE48
5AA2485A4913031207485AED0700485A48485B5D48C75A00FE49B4FCB7FCA2212B7BAA2A
>I<003C131E007F137F481480EB80FFA3EB007F6C1400003C131E190976B72E>127
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr5 5 2
/Fb 2 51 df<1360EA01E0120F12FF12F11201B3A3387FFF80A2111C7B9B1C>49
D<EA03FCEA0FFF383C0FC0387003E0387801F0EAFC0014F8A214781278C712F814F0A2EB
01E0EB03C0EB0780EB0F00131C5B13E03801C018EA0380EA0600481338383FFFF05AB5FC
A2151C7D9B1C>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi5 5 1
/Fc 1 106 df<137013F8A213F013E01300A6EA0F80EA1FC0EA31E01261A2EAC3C01203
EA0780A3EA0F001308EA1E18A213301370EA0FE0EA07800D1D7D9C16>105
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmex10 10 6
/Fd 6 89 df<160F161F163E167C16F8ED01F0ED03E0ED07C0150FED1F801600153E157E
5D4A5A5D14034A5A5D140F4A5AA24AC7FC143E147E5CA2495AA2495AA2495AA2130F5CA2
495AA2133F91C8FCA25B137E13FEA25B1201A25B1203A35B1207A35B120FA35BA2121FA4
5B123FA690C9FC5AAA12FEB3AC127FAA7E7FA6121F7FA4120FA27FA312077FA312037FA3
12017FA212007FA2137E137F7FA280131FA26D7EA2801307A26D7EA26D7EA26D7EA2147E
143E143F6E7EA26E7E1407816E7E1401816E7E157E153E811680ED0FC01507ED03E0ED01
F0ED00F8167C163E161F160F28C66E823D>18 D<12F07E127C7E7E6C7E6C7E6C7E7F6C7E
1200137C137E7F6D7E130F806D7E1303806D7EA26D7E147C147E80A26E7EA26E7EA26E7E
A2811403A26E7EA2811400A281157E157FA2811680A2151F16C0A3150F16E0A3150716F0
A31503A216F8A4150116FCA6150016FEAA167FB3AC16FEAA16FC1501A616F81503A416F0
A21507A316E0150FA316C0151FA31680153FA216005DA2157E15FE5DA214015DA24A5AA2
14075DA24A5AA24A5AA24AC7FCA2147E147C14FC495AA2495A5C1307495A5C131F49C8FC
137E137C5B1201485A5B485A485A48C9FC123E5A5A5A28C67E823D>I<12F8B3B3B3B3B3
B3B3B3B3B3ADB612C0A51AC66C8230>22 D<EC07C0B3B3B3B3B3B3B3B3B3B3ADB6FCA51A
C67F8230>I<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C050113806C6CEF007F
1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C1860013F19706E18306D7E6D
6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E6F7E
A26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4ACCFC143E14
7E147C5C4948181801031930495A4A18704948186049CC12E0491801017EF003C0017C18
0749180F4848F01F800003197F49EF01FF4848050713004848173F48CA000FB5FC48BA5A
A25ABB5AA24D537B7F58>80 D<BF12E08AA38A6C90CCFC0900806C6D19076C6D07007F6C
6D1A1F1D076C6DF201FF6C6D747E6C6DF33F801E0F6C6D1B076D6CF303C06D6D1A01F600
E06D7F6D6D1B706D1D30816D6D1B186D6D1B007F816E7E6E7FA26E7F6E7F6E7FA26E7F6E
7F6E7FA26F7E6F7F6F7FA26F7F6F7F81836F7F6F7F167F83707F707F8284707F707FA270
7F82715A60173F715A604D5A4DCDFC17FEA24C5A4C5A4C5A4C5A4C5A5F163F4CCEFC16FE
4B5A4B5A4B5AA24B5A4B5A4B5A4BCFFC15FEA24A5A4A5A4A481B184A481B304A5A4B1B70
023F1C604ACF12E002FE1B014948F303C049481B074948F30F801E1F49481B7F4948F3FF
0049481A0349CE120F01FEF37FFEF403FF48481A7F4848077FB55A48BEFC48655AA24865
5ABFFC666D747B7F78>88 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy7 7 2
/Fe 2 49 df<B712FEA327037A8F34>0 D<13E0EA01F0EA03F8A3EA07F0A313E0A2120F
13C0A3EA1F80A21300A25A123EA35AA3127812F8A25A12100D1E7D9F13>48
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx10 10 21
/Ff 21 122 df<141C143C14F8EB01F0EB03E01307EB0FC0EB1F8014005B137E13FE5B12
015B1203A2485AA2120F5B121FA25B123FA4485AA512FFB1127FA56C7EA4121F7FA2120F
7F1207A26C7EA212017F12007F137E7F7F1480EB0FC0EB07E01303EB01F0EB00F8143C14
1C165377BD25>40 D<12E07E127C7E7E7F6C7E6C7E12037F6C7E7F12007F137E137FA2EB
3F80A214C0131F14E0A2130F14F0A4EB07F8A514FCB114F8A5EB0FF0A414E0131FA214C0
133F1480A2EB7F00A2137E13FE5B12015B485A5B1207485A485A90C7FC123E5A12F05A16
537BBD25>I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D0D798C1B>
46 D<141E143E14FE1307133FB5FCA313CFEA000FB3B3A6007FB61280A4213779B630>
49 D<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F800F1380263F000313C0
5AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FCEDFFF0A216E05C16C0
4A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F849481378495A495A495A01
3EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425377BB630>I<EB03FF
011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13E0EA0FF001FC14F012
1F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF090380FFFC092C7FC15
F090380007FE913801FF806E13C016E0ED7FF016F816FC153FA216FEEA1FC0487E487E48
7EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260FFC0713806CB6120000
0114FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA2151F153F157F15FFA25C5C
5C5CA2141E5C147C5C5C495A495A1307495A5C131E5B137C5B5B485A485A1207485A90C7
FC121E5A127C5AB81280A4C70001EBC000AA0103B61280A429377DB630>I<001C15C0D8
1F80130701F8137F90B61280A216005D5D15F05D15804AC7FC14F090C9FCA8EB07FE9038
3FFFE090B512F89038FC07FC9038E003FFD98001138090C713C0120EC813E0157F16F0A2
16F8A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713E0007C15C06C5B6C4913
80D9C0071300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7FC25387BB630>I<EC
0FF8ECFFFE0103EBFF8090390FF80FC090393FE003E090397FC001F09038FF000F48EC1F
F84848133F485A120F5B121FA2003FEC1FF0ED0FE04990C7FC127FA21408EC7FF039FFF1
FFFC01F313FFD9F78013809039FF007FC049EB3FE04914F0ED1FF85B16FCA34914FEA512
7FA5123F16FCA26C7E16F8000F143F6C6C14F0ED7FE06C6C14C03A01FF81FF806C90B512
00013F13FC010F13F00101138027387CB630>I<123C123EEA3FE090B71280A41700485D
5E5E5EA25E007CC7EA0FC000784A5A4BC7FC00F8147E48147C15FC4A5A4A5AC7485A5D14
0F4A5A143F92C8FC5C147E14FE1301A2495AA31307A2130F5CA2131FA5133FA96D5A6D5A
6D5A293A7BB830>I<DB3FFCEB01C00203B5EAC003021FECF00791B6EAFC0F01039039FC
00FF3F4901C0EB1FFFD91FFEC77E49481403D97FF080494880485B48177F4849153F4890
C9FC181F485A180F123F5B1807127FA24993C7FC12FFAD127F7FF003C0123FA27F001F17
07A26C6C1780180F6C6D16006C6D5D6C173E6C6D157ED97FF85D6D6C4A5A6DB44A5A0107
01C0EB0FE06D01FCEBFF80010090B548C7FC021F14F8020314E09126003FFEC8FC3A3B7B
B945>67 D<B7FCA426007FF8C9FCB3ACEF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE
167FB8FCA431397DB839>76 D<003FB91280A4D9F800EBF003D87FC09238007FC049161F
007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FCB3AE010FB7FCA43B
387DB742>84 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F
7EA26C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3F
F85B485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF8
0F39003FE0032A257DA42E>97 D<903803FF80011F13F0017F13FC3901FF83FE3A03FE00
7F804848133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301
E0C8FCA4127FA36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC0
6DB51200010F13FC010113E025257DA42C>101 D<13FFB5FCA412077EAFED7FC0913803
FFF8020F13FE91381F03FFDA3C01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F
13FFA4303A7DB935>104 D<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>108
D<01FED97FE0EB0FFC00FF902601FFFC90383FFF80020701FF90B512E0DA1F81903983F0
3FF0DA3C00903887801F000749DACF007F00034914DE6D48D97FFC6D7E4A5CA24A5CA291
C75BB3A3B5D8FC1FB50083B512F0A44C257DA451>I<903801FFC0010F13F8017F13FFD9
FF807F3A03FE003FE048486D7E48486D7E48486D7EA2003F81491303007F81A300FF1680
A9007F1600A3003F5D6D1307001F5DA26C6C495A6C6C495A6C6C495A6C6C6CB45A6C6CB5
C7FC011F13FC010113C029257DA430>111 D<9038FE03F000FFEB0FFEEC3FFF91387C7F
809138F8FFC000075B6C6C5A5CA29138807F80ED3F00150C92C7FC91C8FCB3A2B512FEA4
22257EA427>114 D<B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C15
786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A
6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FCA25C141E003F133E
387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFFC9FCEA1FFCEA07F0
2D357EA432>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi7 7 18
/Fg 18 121 df<EB0FE0137F3801F000EA03C0485A48C7FC121E123E5AA2387FFF80B5FC
00F8C7FCA61278A37E6C13C0EA0F033807FF00EA01FC131A7C981C>15
D<010FB5FC013F148049140048B6FC2603F07EC7FC3807C01FEA0F80497E5A123EA2003C
5B127CA30078133E12F8143C0078137C14785C6C485A495A381E0F80D80FFEC8FCEA03F8
211A7D9826>27 D<1238127C12FE12FFA2127F123B1203A31206A3120C12181238127012
2008127A8614>59 D<EC0180140314071500A25C140E141E141CA2143C143814781470A2
14F05CA213015C13035CA2130791C7FC5B130EA2131E131C133C1338A21378137013F05B
A212015B12035BA2120790C8FCA25A120E121E121CA2123C123812781270A212F05AA219
3B7CAB22>61 D<013FB512F816FF903A01FC001FC04AEB07E0EE01F0010315F816005CA2
130716015CA2010FEC03F0A24AEB07E0EE0FC0011FEC1F80EE3E0091388001FC91B512E0
93C7FCD93F80C8FC91C9FCA35B137EA313FE5BA312015BA21203B512C0A22D287DA72A>
80 D<4AB4FC021F13E091387E01F8903901F8007ED907E0131FD90F80EB0F8049C7EA07
C0137E49EC03E0485A4915F0484814011207485A4915F8121F90C8FC5A17F0007E1503A4
007CED07E012FC17C0160F1780161F007C1600163E007E157E003E017C5BD901FE5B3A1F
038701F09039070387C03A0F86018F80D807C6019FC7FCD803F613FC3900FF03F090393F
FFC006EB07FDD90001130E6F5A163C6F5AEDFFF85E6E5B5E6F5A033EC7FC2D347DA834>
I<903B3FFFE00FFFC0A2010190390001FC006D4814F017C0027F495A4CC7FC6E130E6F5A
021F5B6F5A5E91380FE1C0EDE380DA07F7C8FC15FE6E5A5D6E7EA2811403EC077F140E4A
7E02187FEC301F02607F14C049486C7EEB030001066D7E5B01386D7E5B01F06D7E485AD8
0FF0497ED8FFFC90381FFFE0A232287DA736>88 D<143C147E14E6EB01C3EB0383130714
02EB0F06130E131EA2EB3E0C133CEB7C18A2EB783013F8146014E03801F0C0EBF180EBF3
0013F7EA03E613EC13F85B5B5BA31207120F121B123300E313040043130E0001131C1438
3800E0E0EBF7C0EB7F00182A7FA81C>96 D<EB1F80EB7FC0EBF0E73803C03FEA07804848
7EA2121E003E133E123C127CA2485BA4485B1530A3903801F060A2EA7803010E13C0393C
1CF980381FF07F3907C01E001C1B7C9924>I<EA01F0123FA2EA03E0A21207A25BA2120F
A25BA2121F139FEB3FC0EBE0E0383FC0F0EB0078A2123E007E137CA2127CA212FC14F85A
A338F001F0A214E0130314C0EB078038700F00EA781E6C5AEA1FF0EA07C016297CA71D>
I<EB0FE0EB3FF8EBF81C3801E00E3803803E0007137EEA0F00001E137C123E003C130012
7CA25AA45AA31404140C0078131814306C13E0381E07C0380FFF00EA03F8171B7C991E>
I<15F8141FA2EC01F0A21403A215E0A21407A215C0A2140FEB1F8F90387FCF80EBF0EF38
03C03FEA0780390F001F00A2001E5B123E003C133E127C147E5A147CA214FC5AECF830A3
903801F060A2EA7803010E13C0393C1CF980381FF07F3907C01E001D297CA723>I<EB0F
C0EB7FF0EBF0383803C01CEA0780EA0F005A121E003E1338481370EB07E0387FFF8038FF
FC0000F8C7FCA45AA214040078130C141800381330003C13E0381E07C0380FFF00EA03F8
161B7C991F>I<130E131F5BA2133E131C90C7FCA7EA03E0487EEA0C78EA187C1230A212
605B12C0A2EA01F0A3485AA2485AA2EBC180EA0F81A2381F0300A213066C5A131CEA07F0
6C5A11287DA617>105 D<1407EC0F80141FA21500140E91C7FCA7EB03E0EB07F8EB0C3C
1318EB303E136013C0A248485AA2C7FCA25CA4495AA4495AA4495AA4495AA21238D87C1F
C7FC12FC133E485AEA70F8EA7FE0EA1F80193380A61B>I<133EEA07FEA2EA007CA213FC
A25BA21201A25BA21203EC07809038E01FC0EC38600007EB61E014C3EBC187EBC307D80F
C613C09038CC038001B8C7FC13E0487E13FEEB3F80EB0FC0486C7E1303003E1460A2127E
ECC0C0127CECC18012FC903801E30038F800FE0070137C1B297CA723>I<3907801FC039
0FE07FF03918F0E0F83930F1807CEBFB00D860FE133C5B5B00C1147C5B1201A248485BA3
4A5AEA07C01660EC03E0A23A0F8007C0C0A2EDC180913803C300D81F0013C7EC01FE000E
EB00F8231B7D9929>110 D<90387C03C03901FF0FF03907079C30390E03B078000CEBF0
F8001813E1123015F0396007C0E015001200A2495AA449C7FC15301238007C1460EAFC3E
15C0EAF87E39F06F03803970C70700383F83FE381F01F81D1B7D9926>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmtt8 8 17
/Fh 17 120 df<121FEA3F80EA7FC013E0A4123F121F1207A2EA0FC0121FEA7F80EAFF00
5A5A12700B12748823>44 D<123E127FEAFF80A5EA7F00123E0909738823>46
D<EB07F0EB1FFCEB7FFE48B5FC4814803907FC1FC0380FE0079038C0FFE0EA1F83485AEA
3E0FD87E1F13F0007C138FEB3F0738783E0338F87C01A212F0EB7800A5EB7C0112F8A239
783E03E0387C3F0790381F8FC0007E13FFD83E0F1380D83F071300381F83FE390FC0F9E0
9038E007F03807FC0F6CB5FC6C14C06C6C138090381FFE00EB07F81C297DA823>64
D<3803FF80000F13E04813F8487F80EB80FFEC3F80381F001FC7FC140F14FF137F0003B5
FC120F5A387FF00F130012FCA25A141F7E6C133F387F81FF90B512FC6C14FE7E000713C7
3901FE01FC1F1D7D9C23>97 D<EB3FF0EBFFFC000313FF5A5A381FE07FEA3F80387F003E
007E90C7FCA25AA25AA57EA2007E1307007FEB0F80141FEA3FC0391FF07F006CB5FC6C5B
6C5BC613F0EB3FC0191D7B9C23>99 D<ECFF8015C0A41407A7EB7F873801FFE74813F700
0F13FF5A13E0383F803F387F001F007E130FA2481307A25AA56C130FA2127E141F007F13
3F383F807FEBE0FF6CB512FE7E000313F76C13C738007F031F297EA823>I<EB3FC0EBFF
F800037F4813FF481480381FF07F393F801FC0EB000F007E130715E05AB6FCA415C000F8
C8FC7EA2007EEB01C0007FEB03E0383F800713E0391FF81FC06CB5FC6C14800001EBFE00
6C6C5AEB1FE01B1D7D9C23>I<133813FEA5133890C7FCA6EA7FFC487EA3127FEA003EB3
387FFFFEB6FCA36C13FE182A7AA923>105 D<EA7FFEB5FCA37EEA001FB3AD007FB512C0
B612E0A36C14C01B297CA823>108 D<397E1F01F039FF7FC7FC9038FFEFFE14FF6C8039
0FE1FE1FEBC1FC01C07FEB80F8A2EB00F0AE3A7FE3FE3FE026FFF3FF13F0A3267FE3FE13
E0241D819C23>I<38FF81FCEBC7FF01DF138090B512C0A23907FE0FE0EBF807EBF00313
E0A313C0AD39FFFE1FFF5CA380201D7F9C23>I<133F3801FFE0487F487F487F381FC0FE
383F807F383E001F007E1480007C130F00FC14C0481307A66C130FA2007C1480007E131F
6CEB3F006D5A381FE1FE6CB45A6C5B6C5B6C5BD8003FC7FC1A1D7C9C23>I<397FF00FE0
39FFF87FF8ECFFFC13FB6CB5FCC613F8ECC078EC800091C7FC5BA25BA35BAA387FFFFCB5
7EA36C5B1E1D7E9C23>114 D<3801FF9C000F13FE5A127FA2EAFF0000FC137E48133EA2
6C131C6C1300EA7FF0383FFF80000F13E06C13F838007FFCEB01FEEB007F0070133F00F8
131F7E143F7E38FF80FFEBFFFE14FC14F814F000701380181D7B9C23>I<137013F8A700
7FB51280B612C0A36C1480D800F8C7FCACEC01C0EC03E0A3EBFC07140F9038FE1FC0EB7F
FF158090383FFE00EB0FFCEB07F01B257EA423>I<39FFF03FFCA5390F8007C000071480
A2EBC00F00031400A26D5A0001131EA2EBF03E0000133CA2EBF87CEB7878A2EB7CF8EB3C
F0A2133F6D5AA36D5A6D5A1E1D7E9C23>118 D<397FF00FFE39FFF81FFFA3397FF00FFE
001FC712F86C14F0A57F390783E1E0EB87F1A3EB8FF90003EB79C013CFA2EBDF7BA2EBDE
3B00011480EBFE3FA2EBFC1FA23900F80F00201D7F9C23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmsy8 8 2
/Fi 2 104 df<141F14FFEB03F0EB0FC0EB1F8014005B133EB3A2137E137C13FC485A48
5AEA7FC048C7FCEA7FC0EA03F06C7E6C7E137C137E133EB3A2133F7F1480EB0FC0EB03F0
EB00FF141F18437BB123>102 D<12FCB47EEA0FE0EA01F0EA00FC137C137E133EB3A37F
1480130FEB07E0EB01FEEB007FEB01FEEB07E0EB0F80131F1400133EB3A3137E137C13FC
EA01F0EA0FE0EAFF8000FCC7FC18437BB123>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr8 8 30
/Fj 30 122 df<123C127EB4FCA21380A2127F123D1201A312031300A25A1206120E5A5A
5A126009157A8714>44 D<123C127E12FFA4127E123C08087A8714>46
D<123C127E12FFA4127E123C1200AD123C127E12FFA4127E123C081D7A9C14>58
D<DA1FF013C09138FFFE01903903F00F8390390F8001E3013FC71277017C143F4848141F
4848140F48481407A248481403121F491401123F90C8FC481500A300FE1600AB127F17C0
A27E7F001F15016D1580120F6C6C1403EE07006C6C14066C6C140ED8007C5C013F147890
390F8001E0903903F00FC0902600FFFEC7FCEC1FF02A2F7CAD33>67
D<B712FEA23903F800010001EC003E828282A282A3178016011518A293C7FCA315381578
15F890B5FCA2EBF800157815381518A21760A392C712C0A4160117801603A21607160F16
3F0003913801FF00B8FCA22B2D7EAC30>69 D<D8FFF8903803FFFC7F00019138003FC06D
EC0F006D1406EBBF80A2EB9FC0EB8FE0138780EB83F8138180EB80FE147E147FEC3F80EC
1FC0140F15E0EC07F0140315F8EC01FC140015FE157FED3F86151F16C6ED0FE6150716F6
ED03FE1501A21500167E163EA2486C141ED80FF0140EB5FC16062E2D7DAC35>78
D<EC3FF0903801FFFE903907E01F8090391F8007E090393E0001F001FCEB00FC4848147E
4848804848EC1F8049140F000F16C04848EC07E0A248C8EA03F0A24816F8A2007E1501A2
00FE16FCAA007FED03F8A36C16F06D1407001F16E0A26C6CEC0FC06D141F000716806C6C
EC3F006C6C147E6C6C5C017E495A90391F8007E0903907E01F80902601FFFEC7FC903800
3FF02E2F7CAD37>I<B612C015FC3903F8007F0001EC0FC06F7E6F7E6F7E82150082A55E
15015E4B5A4B5A4B5A037FC7FC90B512FC15F09038F800FC153E6F7E150F826F7EA582A5
170316F815031707486C903801FC0EB539F000FE1CEE3FF8C9EA07E0302E7DAC34>82
D<90383F80303901FFF0703807C07C390F000EF0001E13074813034813011400127000F0
1470A315307EA26C1400127E127FEA3FE013FE381FFFE06C13FC6C13FF00011480D8003F
13E013039038003FF0EC07F81401140015FC157C12C0153CA37EA215787E6C14706C14F0
6CEB01E039F78003C039E3F00F0038E07FFE38C00FF01E2F7CAD27>I<B539F003FFFCA2
D803FCC7EA3FC06C48EC0F001606B3AB160E0000150C7F161C017C1418017E14386D5C6D
146090390F8001E0903907E00380902601F80FC7FC9038007FFCEC0FF02E2E7DAC35>85
D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F3801
FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C391F
83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EA07C012FFA2120F1207AC14FE9038
C7FF809038CF03E09038DC01F09038F8007C49137E49133E497F1680A2150F16C0A9ED1F
80A216005D6D133E6D5B01B05B9038BC01F090380E07E0390607FF80260001FCC7FC222F
7EAD27>I<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB0F00
007E90C7FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E007003801F0
3E38007FF8EB1FC01A207E9E1F>I<15F8141FA214011400ACEB0FE0EB7FF83801F81E38
03E0073807C003380F8001EA1F00481300123E127EA25AA9127C127EA2003E13017EEB80
03000F13073903E00EFC3A01F03CFFC038007FF090391FC0F800222F7EAD27>I<EB1F80
EBFFF03803E0783807C03E380F801E381F001FEC0F80123E007E130715C0127C12FCA3B6
FCA200FCC8FCA5127EA2003E14C0123F6C1301390F80038001C013003803E00F3801F03C
38007FF8EB1FC01A207E9E1F>I<EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C
1400AAB512E0A23803E000B3A6487E387FFF80A2182F7FAE16>I<EA07C012FFA2120F12
07AC14FE9038C3FF809038C703E09038DE01F013F8496C7EA25BA25BB2486C487E3AFFFE
1FFFC0A2222E7EAD27>104 D<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012
FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14>I<EA07C012FFA2120F1207B3B3A3EA
0FE0EAFFFEA20F2E7EAD14>108 D<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F
3C0FCE01F8E01F803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137CB2
486C01FEEB0FE03CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703
E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB
1FE0EB7FF83801F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8
A300FC14FCA9007C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E00
38007FF8EB1FE01E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F03907F8
00FC49137E49133E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D90
38FC01F09038CE07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>
I<380781F838FF87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E
7E9D1C>114 D<3801FE183807FFB8381E01F8EA3C00481378481338A21418A27E7EB413
00EA7FF06CB4FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C131EA27EA2
6C133CA26C137838FF01F038E3FFC000C0130017207E9E1C>I<1360A413E0A312011203
A21207121FB512F0A23803E000AF1418A714383801F03014703800F860EB3FE0EB0F8015
2A7FA81B>I<D807C013F800FF131FA2000F130100071300B21401A314033803E007EC0E
FC3A01F81CFFC038007FF890391FE0F800221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E
000007147C15380003143015706C6C1360A26C6C5BA390387C0180A26D48C7FCA2EB3F07
EB1F06A2EB0F8CA214DCEB07D8A2EB03F0A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07
FFA23B0FE003F001F801C09038E000F00007010114E0812603E00314C0A2913807F80127
01F006781380A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA216
8C90391F600798A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>I<3AFFFC01
FFC0A23A0FE0007E000007147C1538000314306D137000011460A26C6C5BA2EBFC01017C
5BEB7E03013E90C7FCA2EB1F06A2148EEB0F8CA2EB07D8A2EB03F0A36D5AA26D5AA2495A
A2130391C8FC1278EAFC06A25B131CEA7838EA7070EA3FE0EA0F80222B7F9C25>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmsy6 6 1
/Fk 1 4 df<136013701360A20040132000E0137038F861F0387E67E0381FFF803807FE
00EA00F0EA07FE381FFF80387E67E038F861F038E060700040132000001300A213701360
14157B9620>3 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr7 7 6
/Fl 6 62 df<140EB3A2B812E0A3C7000EC8FCB3A22B2B7DA333>43
D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C00
30137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC3800
01E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01
F03807FFC0C690C7FC19277DA521>I<1438A2147814F81301A2130313071306130C131C
131813301370136013C012011380EA03005A120E120C121C5A12305A12E0B612E0A2C7EA
F800A7497E90383FFFE0A21B277EA621>I<B812E0A3CBFCABB812E0A32B117D9633>61
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm msbm10 10 1
/Fm 1 91 df<0007B712FC5AA23B0E1FF003C038903A3F0007807801FC4A5AD80FF0495B
49EB0E01D81F80011E5BED3C0390C738380780001E027890C7FCED700FEDF00E001C9038
01E01E4B5A02031338C7EB80780207137091380F00F091380E01E0021E5BEC1C03023C5B
EC3807027890C8FC4A5AECE01E0101131CECC03C0103133890380780784A5A495BEB0E01
011E49EB0180D93C0314039038380780017890C7FCD9700F1407EBF00E3801E01E4948EC
0F0000031338D980785C00071370D900F05C48495CD81E0115F7261C03C0EB01E7003C49
495AD83807EC0F8E007890C7EA3F0E4848EB01FEB812FEA331397DB83E>90
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmti10 10 49
/Fn 49 122 df<EA01E0EA07F0120F13F8121FA3120FEA07B0EA0030A21370136013E013
C0120113801203EA0700120E5A5A5A5A5A0D196EB919>39 D<150C151C153815F0EC01E0
EC03C0EC0780EC0F00141E5C147C5C5C495A1303495A5C130F49C7FCA2133EA25BA25BA2
485AA212035B12075BA2120F5BA2121FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD
1278A57EA3121C121EA2120E7EA26C7E6C7EA212001E5274BD22>I<140C140E80EC0380
A2EC01C015E0A2140015F0A21578A4157C153CAB157CA715FCA215F8A21401A215F0A214
03A215E0A21407A215C0140F1580A2141F1500A2143EA25CA25CA2495AA2495A5C130749
5A91C7FC5B133E133C5B5B485A12035B48C8FC120E5A12785A12C01E527FBD22>I<EA03
C0EA07F0120F121F13F8A313F0EA07B0EA003013701360A213E013C01201EA038013005A
120E5A5A5A5A5A0D197A8819>44 D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F
80127F12FFA31300127E123C0909778819>I<EC03F8EC1FFEEC7C1F9138F80780D901E0
13C0903903C003E0EB0780010F1301D91F0013F0A2133E137E017C130313FCA2485AA200
0314075BA2120716E049130F120FA34848EB1FC0A44848EB3F80A448C7EA7F00A3157E00
7E14FEA25D00FE13015DA248495AA25D007C13075D4A5AA24AC7FC6C133E5C6C5B380F83
E03807FF80C648C8FC243A77B72A>48 D<15181538157815F0140114031407EC0FE0141F
147FEB03FF90383FEFC0148FEB1C1F13001580A2143FA21500A25CA2147EA214FEA25CA2
1301A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C7FC497EB61280
A31D3877B72A>I<EC03F8EC0FFE91383C0F809138F007C0903901E003E0D903C013F090
38078001020013F8130E131E90391C6000FCEB3870EC30011370A213F013E0EC70030001
016013F813C014E0ECC00701C114F0903881800F018314E09039C7001FC001FEEB3F80D8
0078140090C7127E5D4A5A4A5AEC07C0EC1F80023EC7FC14FCEB01F0EB07C0495A011EC8
FC137C4914C0484813015B485A4848130348C71380000E1407001E140F48EC1F00D83FF8
5B397FFFC07E39783FFFFCEA700FD8F0075BD8E0015B6D13C0021FC7FC263A79B72A>I<
EC03FCEC1FFF91387E07C09138F003E0903903C001F0D9078013F849C7FC131E011C14FC
133CEB38C0EB78E0EB7060150101F014F813E0A2ECE003D971C013F090387F8007D91E00
13E090C7EA0FC0ED1F80ED3F00157E5D49B45A4913E092C7FC9038000FC0EC03F014016E
7E81A381A5007E130100FE5CA31403485C00E05C14074A5A5D4A5A007049C7FC0078137E
6C13F8381E07F03807FF80D801FCC8FC263A78B72A>I<EC01FCEC0FFF023F138091387E
07C0903901F803E0EB03F0903907E001F0EB0FC0EB1F80013F14F814005B137E13FEA248
5AA2150312035BA2ED07F012075B150FA216E00003141FA2153FED7FC0120115FF6C6C5A
90397803BF8090383C0F3FD91FFC1300903807F07F90C7FC157E15FE5D14015D4A5AA200
3E495A007F495A5D4AC7FC00FE5B48137E007013F8387803F0387C0FE0383FFF806C48C8
FCEA03F8253A78B72A>57 D<EE01C01603A21607160FA2161F83163FA2167F16FF16EF15
0116CFED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580EC
0700A2140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B
130E5BA25B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65
D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC
4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B00
0317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816
707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6C
EB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B>67
D<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF03F804B141F
19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2130119E04A151F
A2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A60011F15034D5A4A5D
4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A007F90B548C8
FCB712F016803C397CB83F>I<0107B8FCA3903A000FF000034BEB007F183E141F181E5D
A2143FA25D181C147FA29238000380A24A130718004A91C7FC5E13015E4A133E167E49B5
12FEA25EECF8000107147C163C4A1338A2010F147818E04A13701701011F16C016004A14
031880013F150718004A5CA2017F151E173E91C8123C177C4915FC4C5A4914070001ED7F
F0B8FCA25F38397BB838>I<0107B712FEA3903A000FF000074B1300187C021F153CA25D
A2143FA25D1838147FA292C8FCEE03804A130718004A91C7FCA201015CA24A131E163E01
0314FE91B5FC5EA2903807F800167C4A1378A2130FA24A1370A2011F14F0A24A90C8FCA2
133FA25CA2137FA291CAFCA25BA25B487EB6FCA337397BB836>I<DB03FE130E92393FFF
801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB
03FC49481407494815F049481403495A5C49C813E05B485A5B000317C0485AA2485A1880
485A94C7FCA2485AA3127F5BA312FF90CBFC0307B512E0A392390007FC00705A16075FA3
6C150F5FA36C6C141FA2001F5E6D143F6C7E167F6C6C4A5A6C6CEB03EFD801FEEB07C73A
007FC03F0790273FFFFC03C7FC010F01F0C8FC01001380373D74BA40>I<0103B512F8A3
90390007F8005DA2140FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301
A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497E
B6FCA25C25397CB820>73 D<0207B512F0A391390007FC006F5AA215075EA3150F5EA315
1F5EA3153F5EA3157F93C7FCA35D5DA314015DA314035DA31407A25DA2140FA2003F5C5A
141F485CA24A5A12FC00E049C8FC14FE00705B495A6C485A381E0FC06CB4C9FCEA01F82C
3B78B82C>I<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147FA292
C8FCA25CA25CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C1738
4A1478A2013F157017F04A14E01601017F140317C091C71207160F49EC1F80163F4914FF
000102071300B8FCA25E2E397BB834>76 D<902607FFF8923807FFF0614F13E0D9000FEF
F0004F5AA2021F167FF1EFC0141DDA1CFCEC01CF023C16DF9538039F800238ED071FA202
78ED0E3F97C7FC0270151CA202F04B5AF0707E14E0037E14E0010117FE4D485A02C0EC03
80A20103ED0701610280140EA20107ED1C0305385B14006F137049160705E05B010EEC01
C0A2011E913803800F61011CEC0700A2013C020E131F4C5C1338ED1FB80178163F04F091
C8FC01705CA201F04A5B187E00015DD807F816FEB500C09039007FFFFC151E150E4C397A
B84A>I<902603FFF891B512E0A281D90007923807F8006F6E5A61020F5E81DA0E7F5DA2
021E6D1307033F92C7FC141C82DA3C1F5C70130EEC380FA202786D131E0307141C147082
DAF003143C70133814E0150101016E1378030014705C8201036E13F0604A1480163F0107
15C1041F5B91C7FC17E149EC0FE360010E15F31607011E15FF95C8FC011C80A2013C805F
1338160013785F01F8157CEA03FC267FFFE0143CB51538A243397CB83E>I<0107B612F8
17FF1880903B000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF
03FC92C7FCA24A15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A5AEE0FF0
91B612C04CC7FCD907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CAFC
A25BA25B1201B512FCA337397BB838>80 D<92383FC00E913901FFF01C020713FC91391F
C07E3C91393F001F7C027CEB0FF84A130749481303495A4948EB01F0A2495AA2011F15E0
91C7FCA34915C0A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E001008002
3F7F14079138007FFC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B
5AA2007F4A5A4B5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026
C003FCC8FC2F3D7ABA2F>83 D<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900
011403121E001C5C003C17801403123800785C00701607140700F01700485CA2140FC792
C7FC5DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA213
07A25CA2130FA25CEB3FF0007FB512F8B6FCA2333971B83B>I<B5D8F80FB590381FFFF0
6102F018E0D807FEC7D87FE0903803FE00D803F8DA3F806D5AF100F0A24F5A6219036219
07047F92C7FC190E16FF4B5DA2DB03BF5C7F0001DA073F5CA2030E5D83DB1C1F495A1803
03385D4EC8FC157003F0140E15E0DA01C05CA2DA03805CA2DA07005CA2020E5D17C14A5D
EFC3805C027802C7C9FC14704A14CE13FE6C6C4814DCA24A14F8A291C75B160F495D5F5B
5F5B4992CAFCA249140E4C3B6FB853>87 D<14F8EB07FE90381F871C90383E03FE137CEB
F801120148486C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2
140F5D48ECC1C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E39
1F0F079E3907FE03FC3901F000F0222677A42A>97 D<133FEA1FFFA3C67E137EA313FE5B
A312015BA312035BA31207EBE0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0
D81FC013F0A21380A2123F1300A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80
A215005C147E5C387801F8007C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B
77B926>I<147F903803FFC090380FC1E090381F0070017E13784913383901F801F83803
F003120713E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578
007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677
A426>I<ED01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA21680A2153FA2
02F81300EB07FE90381F877F90383E03FF017C5BEBF80112013803F00048485B120FEBC0
01121F5DEA3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380
143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0
253B77B92A>I<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A12
0F4913F8001F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55A
A21530007C14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FF
E0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313
F8EDF0F0160014075DA4140F5DA4141F5D010FB512C05B16809039003F800092C7FCA45C
147EA414FE5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3E
A2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C82BA19>I<EC07C0EC3FF09138FC38
E0903901F01FF0EB03E0903807C00FEB0F80011F1307D93F0013E05B017E130F13FE4914
C01201151F1203491480A2153F1207491400A25DA249137EA215FEA25D00031301140314
076C6C485A0000131FEB787BEB3FF390380FC3F0EB00031407A25DA2140F5D121C007E13
1F5D00FE49C7FC147E5C387801F8387C07E0381FFF80D803FEC8FC24367CA426>I<EB03
F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E
9038FFE01F02C01380EC800F1400485A16C05B49EB1F8012035BA2153F000715005BA25D
000F147E5B15FE5D121FD98001131C15F8163C003F01031338010013F0A216704814E000
7E15F016E0EDE1C000FE903801E38048903800FF000038143C263B7BB92A>I<EB01C0EB
07E014F0130F14E01307EB038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270
A25BEAF07E12E013FEC65AA212015B1203A25B12075BA2000F13E013C013C1001F13C013
81A2EB83801303EB0700A2130E6C5AEA07F8EA01E0143879B619>I<EB03F0EA01FFA3EA
00075CA3130F5CA3131F5CA3133F91C8FCA35B017EEB0F80ED3FE015F09039FE01C1F090
38FC0387EC0707140E0001011C13E0EBF83891383003800270C7FC00035BEBF1C0EBF380
01FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E147F80001F809039801F81C0A21583
003F013F138001001303A21507481500007E133EEC1E0E151E00FE6D5A48EB07F80038EB
01E0243B7BB926>107 D<EB0FC0EA07FFA3EA001F1480A2133FA21400A25BA2137EA213
FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA2
5AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121FEA0F80123B79
B915>I<D801E001FEEB07F03C07F803FF801FFC3C0E3C0F07C0783E3C1E3E3C03E1E01F
261C1F78D9F3C013803C383FF001F7800F02E01400007801C013FE007018C002805B4A48
48EB1F80EAF07FD8E07E5CA200000207143F01FE1700495CA2030F5C0001177E495C18FE
031F5C120349DA8001131C18F8033F153C00070403133849020013F0A24B1570000F17E0
49017E15F019E003FEECE1C0001FEE01E34949903800FF000007C70038143C3E2679A444
>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E0261C1F787F39383FF00114
E0007813C000708114804A485AEAF07FEAE07EA20000140701FE5C5BA2150F00015D5B15
1F5E12034990383F8380160316070007027F130049137EA2160E000F147C49141E161C5E
001FEC3C7849EB1FE00007C7EA0780292679A42F>I<147F903803FFC090380FC1F09038
1F00F8017E137C5B4848137E4848133E0007143F5B120F485AA2485A157F127F90C7FCA2
15FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0140F007C14C0007EEB1F80003EEB3F
00147E6C13F8380F83F03803FFC0C648C7FC202677A42A>I<9039078007C090391FE03F
F090393CF0787C903938F8E03E9038787FC00170497EECFF00D9F0FE148013E05CEA01E1
13C15CA2D80003143FA25CA20107147FA24A1400A2010F5C5E5C4B5A131F5EEC80035E01
3F495A6E485A5E6E48C7FC017F133EEC70FC90387E3FF0EC0F8001FEC9FCA25BA21201A2
5BA21203A25B1207B512C0A3293580A42A>I<3903C003F0390FF01FFC391E783C0F381C
7C703A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA2
120012015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>
114 D<14FE903807FF8090380F83C090383E00E04913F00178137001F813F00001130313
F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F14
1F140F123E127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FE
C7FC1C267AA422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2
B6FC3800FC00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB
0078147014F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13
F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F
131F00F0130000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC
0EA20201131E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78
E090393FF03FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA
0E1F121C123C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E1201
5B151E0003141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC0001130E38
00F83CEB7FF8EB0FC0212679A426>I<01F01507D803FC903903801F80D8071E903907C0
3FC0D80E1F130F121C123C0038021F131F49EC800F00701607A249133FD8F07E168000E0
ED000313FEC64849130718000001147E5B03FE5B0003160E495BA2171E00070101141C01
E05B173C1738A217781770020314F05F0003010713016D486C485A000190391E7C078028
00FC3C3E0FC7FC90393FF81FFE90390FE003F0322679A437>I<903907E007C090391FF8
1FF89039787C383C9038F03E703A01E01EE0FE3803C01F018013C0D8070014FC48148000
0E1570023F1300001E91C7FC121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314
F016E0001C5B007E1401010714C000FEEC0380010F1307010EEB0F0039781CF81E903838
7C3C393FF03FF03907C00FC027267CA427>I<13F0D803FCEB01C0D8071EEB03E0D80E1F
1307121C123C0038140F4914C01270A249131FD8F07E148012E013FEC648133F16001201
5B5D0003147E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE0
38007FF7EB1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB
03E06C485A383C1F80D80FFEC8FCEA03F0233679A428>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmsy10 10 20
/Fo 20 107 df<007FB81280B912C0A26C17803204799641>0 D<121C127FEAFF80A5EA
7F00121C0909799917>I<0060150600F8150F6C151F007E153F6C157E6C6C14FC6C6CEB
01F86C6CEB03F06C6CEB07E06C6CEB0FC06C6CEB1F80017EEB3F006D137E6D6C5A90380F
C1F8903807E3F0903803F7E06DB45A6D5B6EC7FCA24A7E497F903803F7E0903807E3F090
380FC1F890381F80FC90383F007E017E7F49EB1F804848EB0FC04848EB07E04848EB03F0
4848EB01F84848EB00FC48C8127E007E153F48151F48150F00601506282874A841>I<EF
0180EF07C0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7F
C04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3F
F0EA7FC048CBFC5AEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF
80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE
03FE933800FF80EF3FC0170FEF038094C7FCAE007FB81280B912C0A26C1780324479B441
>20 D<126012F812FEEA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800
FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8
EE03FE933800FF80EF3FC0171FEF7F80933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07
FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CA
FCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007FB81280B912C0A26C1780324479B4
41>I<EF0180EF03C0A31707A21880170FA2EF1F00A2173E177E5F4C5A4C5AEE0FE0EE3F
C004FFC7FCED07FEED7FF8913807FFE00107B51280007FB500FCC8FCB612C0A26C14FCD8
0007EBFF80D9000713E09138007FF8ED07FEED00FFEE3FC0EE0FE0EE03F0707E707E177E
173E83A2EF0F80A2170718C0A21703A3EF018094C7FCAE007FB81280B912C0A26C178032
4479B441>I<D93F801508D9FFF0151C000313FC487F486D7E4880273FC07FF0143C9026
000FF81438007CD903FE147800786D6C14F80070903A007FC003F000F091383FF80F4802
0FB512E06F14C0030114806F1400EE3FFC0040ED07F0CCFCA2D93F801508D9FFF0151C00
0313FC487F486D7E4880273FC07FF0143C9026000FF81438007CD903FE147800786D6C14
F80070903A007FC003F000F091383FF80F48020FB512E06F14C0030114806F1400EE3FFC
0040ED07F036267BA741>25 D<EF0180EF03C0A31707A21880170FA2EF1F00A2173E177E
5F4C5A4C5AEE0FE0EE3FC004FFC7FCED07FEED7FF8913807FFE00107B51280007FB500FC
C8FCB612C0A26C14FCD80007EBFF80D9000713E09138007FF8ED07FEED00FFEE3FC0EE0F
E0EE03F0707E707E177E173E83A2EF0F80A2170718C0A21703A3EF0180323279AC41>30
D<181EA4181F84A285180785727EA2727E727E85197E85F11F80F10FC0F107F0007FBA12
FCBCFCA26C19FCCCEA07F0F10FC0F11F80F13F00197E61614E5A4E5AA24E5A61180F96C7
FCA260181EA4482C7BAA53>33 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F80
01FEC8FCEA01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA2
16FE00F0C9FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF0
6DB512FE010314FF1300021F13FE283279AD37>50 D<EE0180EE03C01607A2EE0F80A2EE
1F00A2163EA25EA25EA24B5AA24B5AA24B5A150F5E4BC7FCA2153EA25DA25DA24A5AA24A
5AA24A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA213
3EA25B13FC5B485AA2485AA2485AA2485AA248CAFCA2123EA25AA25AA25A12602A4E75BB
00>54 D<0370EBFF80912601E00713E0912603C01F13F891260F007F7F021E9038F03FFE
913A7803C00FFF9139F0078003494848486C1380902603C01E7F902607803EEC7FC04948
5A011E49143F013E17E0494848141FEBF8035D2601F007150F00035CEBE00F00075CD9C0
1EC8FC000F131C49C9FC121FA248CA13C0A348171F1980127EA2183F00FE1800A2183E18
7E187C18FC6017016C5F4D5A6017076C6C4B5A4DC7FC171E6D5D6C6C5D5F6D4A5A6C6CEC
03806C6C020FC8FC01FF143E6C01C013F86C9038F807E06C90B512806C6C49C9FC011F13
F0010313803B3D7BBA42>79 D<0060161800F0163CB3B26C167CA2007C16F8A26CED01F0
003F15036C6CEC07E06C6CEC0FC0D807F0EC3F80D803FE903801FF003A00FFC00FFC6DB5
5A011F14E0010391C7FC9038007FF82E347CB137>91 D<126012F0B3B3B3B3A5B512F014
F8A26C13F0155272BD25>98 D<14301478B3B3B3B3A5387FFFF8B5FCA26C13F015527FBD
25>I<387FFFF0B512F8A214F000F0C7FCB3B3B3B3A51260155272BD25>I<387FFFF0B512
F8A27EC71278B3B3B3B3A5143015527FBD25>I<EC01F8140FEC3F80ECFC00495A495A49
5AA2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03F8EA00FE13
7F6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537ABD2A>I<12
FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D7EEB007EEC1FF0
EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC137E485AEA07F0
EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A91260045377BD17>106
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmmi10 10 42
/Fp 42 122 df<EC3FF0EB01FF010F13E090383FC00049C7FC13FCEA03F8485A5B120F48
5AA2485AA2387FFFFE80A290C8FC5A5AA5127EA4123E123F7E6C6C13606D13E03903E003
C03901F01F0038007FFCEB0FE01C257DA322>15 D<013FB612E090B712F05A120717E027
0F807006C7FC391E00600E48140C003813E04813C048141CEAC0011200148001035BA213
071400A25B1578011E137CA3133E133C137C157E13FC5B1201157F1203497FA3D801C013
1C2C257EA32F>25 D<027FB512C00103B612E0130F5B017F15C09026FF81FEC7FC3901FC
007E48487F485A497F484880485AA248C7FCA2127EA2153F00FE92C7FC5AA25D157E5A5D
A24A5AA24A5A007C495A5D003C495A003E013FC8FC6C137C380F81F83803FFE0C66CC9FC
2B257DA32F>27 D<1503A35DA21506A2150EA2150CA2151CA21518A21538A21530A21570
A2EC07FE91383FFFC0903901FCE3F0903907E0E0F890391F80C03ED93E007FEB7C01D801
F8EC0F80D803F0018013C0D807E014071403D80FC015E0D81F801300A248485AA2007E13
06A2020E130F12FE48010C14C0A2021CEB1F80A20218EB3F00A20238137E007C5D143000
7E4A5A003E90387003F06CEC07C09138600F80D80F80013FC7FC3903E0E0FC3901F8E7F0
39007FFF80D90FFCC8FCEB01C0A25CA21303A291C9FCA25BA21306A2130EA2130CA22B4B
7CB931>30 D<121C127FEAFF80A5EA7F00121C0909798817>58 D<121C127FEAFF80A213
C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<EF
0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0ED
FF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA
0FF8EA3FE0EA7F8000FECBFCA2EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03
FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3F
E0EE0FF8EE03FE933800FF80EF3FC0170FEF0380323279AD41>I<150C151E153EA2153C
157CA2157815F8A215F01401A215E01403A215C01407A21580140FA215005CA2141E143E
A2143C147CA2147814F8A25C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2
133C137CA2137813F8A25B1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2
123C127CA2127812F8A25A12601F537BBD2A>I<126012FCB4FCEA7FC0EA1FF0EA07FCEA
01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1F
F0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007F80EF1FC0A2EF7F80933801
FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7F
C04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA3FF0EA7FC048CBFC12FC12703232
79AD41>I<0103B77E4916F018FC903B0007F80003FE4BEB00FFF07F80020FED3FC0181F
4B15E0A2141FA25DA2143F19C04B143F1980027F157F190092C812FE4D5A4A4A5AEF0FF0
4AEC1FC005FFC7FC49B612FC5F02FCC7B4FCEF3FC00103ED0FE0717E5C717E1307844A14
01A2130F17035CA2131F4D5A5C4D5A133F4D5A4A4A5A4D5A017F4BC7FC4C5A91C7EA07FC
49EC3FF0B812C094C8FC16F83B397DB83F>66 D<0103B812F05BA290260007F8C7123F4B
1407F003E0020F150118005DA2141FA25D19C0143FA24B1330A2027F1470190092C71260
17E05C16014A495A160F49B6FCA25F9138FC000F01031407A24A6DC8FCA201075C18034A
130660010F160693C7FC4A150E180C011F161C18184A1538A2013F5E18F04A4A5AA2017F
15074D5A91C8123F49913803FF80B9FCA295C7FC3C397DB83D>69
D<DCFF8013E0030F13F0037F9038FC01C0913A01FF803E03913A07FC000F07DA0FE0EB03
8FDA3FC0903801DF804AC812FFEB01FED903F8157F4948ED3F00495A495A494881017F16
1E49C9FC5B12014848161C5B1207485A1818121F4993C7FCA2485AA3127F5BA312FF90CC
FC93387FFFFE93B5FCA29338007FC0715A177F95C7FCA27E5F5F7F123F16016C7E5F6C6C
14036D14071207D803FCEC1EF86C6C143C26007F80EBF07890393FF007E0010FB5EA8030
010349C9FC9038003FE03B3D7DBA41>71 D<0103B5D8F803B512F8495DA290260007F8C7
3807F8004B5DA2020F150F615DA2021F151F615DA2023F153F615DA2027F157F96C7FC92
C8FCA24A5D605CA249B7FC60A202FCC7120101031503605CA201071507605CA2010F150F
605CA2011F151F605CA2013F153F605CA2017F157F95C8FC91C8FC496C4A7EB690B6FCA3
45397DB845>I<0103B500F8903807FFFC5BA290260007F8C813804BEDFC0019F0020F4B
5AF003804B4AC7FC180E021F1538604B5CEF0380023F4AC8FC170E4B133C1770027F5C4C
5ADB0007C9FC160E4A5B167E4A13FE4B7E01015B92380E7F80ECFC1CED383F010301E07F
ECFDC04A486C7EECFF00D907FC6D7E5C4A130783130F707E5C1601011F81A24A6D7EA201
3F6F7EA24A143F84137F717E91C8123F496C81B60107B512C0A26146397DB847>75
D<0103B6FC5B5E90260007FCC8FC5D5D140FA25DA2141FA25DA2143FA25DA2147FA292C9
FCA25CA25CA21301A25CA21303A25CA2130718404A15C0A2010F150118804A1403A2011F
16005F4A1406170E013F151E171C4A143C177C017F5D160391C7120F49EC7FF0B8FCA25F
32397DB839>I<902603FFF891381FFFF8496D5CA2D90007030113006FEC007C02061678
DA0EFF157081020C6D1460A2DA1C3F15E0705CEC181F82023815016F6C5C143015070270
6D1303030392C7FC02607FA2DAE0015C701306ECC0008201016E130EEF800C5C163F0103
EDC01C041F131891C713E0160F49EDF03818300106140717F8010E02031370EFFC60130C
EE01FE011C16E004005B011815FF177F1338600130153FA20170151F95C8FC01F081EA07
FCB512E01706A245397DB843>78 D<0103B7FC4916E018F8903B0007F80007FC4BEB00FE
187F020FED3F80F01FC05DA2021F16E0A25DA2143FF03FC05DA2027FED7F80A292C81300
18FE4A4A5A604AEC07F04D5A0101ED3FC04CB4C7FC91B612FC17E0D903FCCAFCA25CA213
07A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CBFC497EB6FCA33B397DB835>
80 D<4BB4FC031F13F09238FE01FC913903F0007EDA07C0EB1F80DA1F80EB0FC0023EC7
EA07E002FCEC03F0495A4948EC01F8495A4948EC00FC495A013F16FE49C9FC13FE187F48
5A12035B12075B120F4916FF121FA2485AA34848ED01FEA448C9EA03FCA3EF07F8A218F0
170F18E0171F18C0EF3F807EEF7F0017FEDA07C05B6C90391FF001F8903980383803001F
496C485A9139E00C0FE0260FC0C0EB1F80D807E1D90E3FC7FC0280137ED803F1EB07F8D8
01F95C3A007FC00FC0903A3FE07F0003903807FFFE0100018F5BDA000F1306170E171E70
5A177CEEC1F816FF5FA25F5F6F5B6F48C7FCED00F8384B7CBA42>I<0103B612F849EDFF
8018E0903B0007F8001FF84BEB03FCEF00FE020F157FA24BEC3F80A2021F16C0A25DA214
3FF07F805DA2027FEDFF006092C7485A4D5A4A4A5A4D5A4AEC1F80057FC7FC0101EC07F8
91B612E094C8FC9139FC000FC00103EC03F0707E4A6D7E831307177E5C177F010F5D5F5C
A2011F1401A25CA2133F16034A4A1360A2017F17E019C091C71401496C01011480B61503
933900FE0700EF7E0ECAEA1FFCEF07F03B3B7DB83F>I<92391FE00380DBFFFC13000203
6D5A91390FE01F8F91393F0007DF027EEB01FE02F81300495A4948147E177C4948143C49
5AA2011F153891C8FCA3491530A28094C7FC80806D7E14FEECFFE06D13FE6DEBFFC06D14
F06D806D80021F7F02037FEC003F03037F1500167F163F161FA3120C160FA2001C151F94
C7FCA3003C153EA25E003E5D127E007F4A5A6D495A6DEB0FC0D8F9F0495AD8F0FE01FEC8
FC39E03FFFF8010F13E0D8C00190C9FC313D7CBA33>I<267FFFFC91383FFFC0B55DA200
0390C83807FC006C48ED03E06060000094C7FC5F17065FA25F6D5DA26D5D17E05F4C5AA2
4CC8FC6E1306A2013F5C161C16185EA25E6E5BA2011F495A150393C9FC1506A25D6E5AA2
010F5B157015605DA2ECE18002E3CAFC14F3EB07F614FE5C5CA25C5CA26D5AA25C91CBFC
3A3B7CB830>86 D<49B500F890387FFFF095B5FC1AE0D90003018090380FFC004BC713E0
0201ED07804EC7FC6E6C140E606F5C705B606F6C485A4D5A031F91C8FCEEE0065F6F6C5A
5F03075B705A16F96FB45A94C9FC6F5AA36F7EA34B7FED037F9238063FC0150E4B6C7E15
38ED700F03E07F15C04A486C7EEC0300020613034A805C4A6D7E14704A1300494880495A
49C86C7E130E011E153F017E4B7ED803FF4B7E007F01E0011FEBFFC0B5FC6144397EB845
>88 D<B500FC91383FFFE0A3000390C83807FC006CEE03E06C5F4D5A95C7FC6D6C140E5F
5F6D6C14305F5F6D6C495A4CC8FC010F5C6E130E160C01075C6E5B5E6D6C5B15014B5AD9
01FE90C9FC15065D6D6C5A5D15706E5A5D5D6ECAFC5CA3147E14FEA35C1301A35C1303A3
5C1307A2130F000FB512F0A25D3B397DB830>I<91B712FCA25B9239E00007F84AC7EA0F
F0D903F8EC1FE04AEC3FC04AEC7F804A150049485C91C7485A4C5A010E4A5A4C5A010C4A
5A011C4A5A01185D167F4CC7FC90C7485A4B5A4B5A4B5A5E151F4B5A4B5A4BC8FC4A5A4A
5A4A5A5D140F4A5A4A5A4A48130C4AC7FC495A4A141C01031518495A4948143849481430
49481470495A49C812F0495D000115014848140348484A5A4848140F4848141F4848EC7F
804848EB07FF90B7FCB8FC94C7FC36397BB839>I<147E903803FF8090390FC1C3809039
1F00EFC0017E137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F14
7E90C7FCA215FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F13
30003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA4
2C>97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF90
38E707C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA214015A
127EA2140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E5C
383C01F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<EC3FC0903801FFF0903807
E03C90380F800E90383F0007017E131F49137F484813FF485A485A120F4913FE001F1438
48481300A2127F90C8FCA35A5AA45AA315031507007E1406150E003E143C003F14706C14
E0390F8007C03907C03F003801FFF838003FC020267DA424>I<163FED1FFFA3ED007F16
7EA216FEA216FCA21501A216F8A21503A216F0A21507A2027E13E0903803FF8790380FC1
CF90381F00EF017EEB7FC049133F485A4848131F000715805B000F143F485A1600485A5D
127F90C7127EA215FE5A485CA21401A248ECF80CA21403161CEDF0181407007C1538007E
010F1330003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0028
3B7DB92B>I<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A485A
1207485A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A
5AA7007E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF838
003FC020267DA427>I<16F8ED03FEED0F8792381F0F80ED3E3F167F157CA215FC170016
1C4A48C7FCA414035DA414075DA20107B512F0A39026000FE0C7FC5DA4141F5DA4143F92
C8FCA45C147EA514FE5CA413015CA4495AA45C1307A25C121E123F387F8F80A200FF90C9
FC131E12FEEA7C3CEA7878EA1FF0EA07C0294C7CBA29>I<14E0EB03F8A21307A314F0EB
01C090C7FCAB13F8EA03FEEA070F000E1380121C121812381230EA701F1260133F00E013
0012C05BEA007EA213FE5B1201A25B12035BA20007131813E01438000F133013C01470EB
806014E014C01381EB838038078700EA03FEEA00F815397EB71D>105
D<150FED3F80A2157FA31600151C92C7FCABEC0F80EC3FE0ECF0F0903801C0F849487E14
005B130E130C131CEB1801133801305BA2EB0003A25DA21407A25DA2140FA25DA2141FA2
5DA2143FA292C7FCA25CA2147EA214FEA25CA21301001E5B123F387F83F0A238FF87E049
5A00FE5BD87C1FC8FCEA707EEA3FF8EA0FC0214981B722>I<EB03F0EA01FFA3EA00075C
A3130F5CA3131F5CA3133F91C8FCA35B017EEB07C0ED1FF0ED783801FEEBE0F89039FC01
C1FCEC0383EC07070001130ED9F81C13F891383803F091387001E0000349C7FCEBF1C0EB
F38001F7C8FCEA07FEA2EBFFE0EBE7F8380FE0FEEBC07F6E7E141F001F80D9800F1330A2
1670003F011F136001001380A216E04815C0007E1481020F1380158300FE903807870048
EB03FE0038EB00F8263B7CB92B>I<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781
F00F03E03D1C3E1E00F83C01F026383F38D9FC707F00304914E04A90387DC000007049EB
7F8000604991C7FCA200E090C700FE1301485A017E5CA200000201140301FE5F495CA203
031407000160495C180F03075D1203494A011F13601980030F023F13E00007F000C0495C
1901031F023E1380000F1803494A150061033F150E001FEF1E1C4991C7EA0FF80007C700
0EEC03E043267EA449>109 D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F8
26383F387F00305B4A137C00705B00605BA200E090C712FC485A137EA20000140101FE5C
5BA2150300015D5B15075E120349010F133016C0031F13700007ED80605B17E0EE00C000
0F15014915801603EE0700001FEC0F0E49EB07FC0007C7EA01F02C267EA432>I<02FC13
C0903803FF0190380F838390383F01C790397E00EF8049137F485A4848133F000715005B
485A001F5C157E485AA2007F14FE90C75AA3481301485CA31403485CA314075D140F127C
141F007E495A003E137F381F01EF380F839F3903FF1F80EA00FC1300143F92C7FCA35C14
7EA314FE5C130190387FFFF0A322357DA425>113 D<3903E001F83907F807FE390E3C1E
07391C3E381F3A183F703F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E0
7F90C7FCEAC07EA2120013FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9
FC21267EA425>I<14FF010313C090380F80F090383E00380178131C153C4913FC000113
0113E0A33903F000F06D13007F3801FFE014FC14FF6C14806D13C0011F13E01303903800
3FF014071403001E1301127FA24814E0A348EB03C012F800E0EB07800070EB0F006C133E
001E13F83807FFE0000190C7FC1E267CA427>I<01F8EB03C0D803FEEB07E0D8070F130F
000E018013F0121C12180038140700301403D8701F130112601500D8E03F14E000C090C7
FC5BEA007E16C013FE5B1501000115805B150316001203495B1506150E150C151C151815
385D00015C6D485A6C6C485AD97E0FC7FCEB1FFEEB07F024267EA428>118
D<01F816F0D803FE9138E001F8D8070F903801F003000ED9800314FC121C121800380207
13010030EDE000D8701F167C1260030F143CD8E03F163800C001005B5BD8007E131F1830
01FE5C5B033F1470000117604991C7FCA218E000034A14C049137E17011880170318005F
03FE1306170E000101015C01F801BF5B3B00FC039F8070903A7E0F0FC0E0903A1FFC03FF
C0902703F0007FC7FC36267EA43B>I<903907E001F090391FF807FC9039783E0E0F9039
E01F1C1FD801C09038383F803A03800FF07F0100EBE0FF5A000E4A1300000C157E021F13
3C001C4AC7FC1218A2C7123FA292C8FCA25CA2147EA214FEA24A130CA20101141C001E15
18003F5BD87F81143801835C00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0F
C7FC391FF00FFC3907C003F029267EA42F>I<13F8D803FE1470D8070F14F8000EEB8001
121C121800381403003015F0EA701F1260013F130700E0010013E012C05BD8007E130F16
C013FE5B151F000115805BA2153F000315005BA25D157EA315FE5D1401000113033800F8
0790387C1FF8EB3FF9EB0FE1EB00035DA2000E1307D83F805B007F495AA24A5A92C7FCEB
003E007C5B00705B6C485A381E07C06CB4C8FCEA01FC25367EA429>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmr10 10 75
/Fq 75 124 df<1506150FA24B7EA24B7EA24B7EA2EDDFF0A29138018FF8A291380307FC
A291380603FEA291380E01FF140CDA1C007F141802386D7E143002706D7E146002E06D7E
5C01016E7E5C01036E7E91C7FC496E7E1306010E6E7E130C011C6E7F131801386F7E1330
01706F7E136001E06F7E5B170F484882170748C97F17030006831701488383481880001F
B9FC4818C0A24818E0A2BA12F0A23C3C7CBB45>1 D<EC03FF021F13E09138FE01FC9039
01F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7EA2484815
7F0007178049153F000F17C049151F001F17E0A24848ED0FF0A3007F17F8A2491507D981
80130600FF17FCA291B512FEA79138800006A3D87F80C813F8A26D150FA2003F17F0A26C
6CED1FE0A36C6CED3FC000071780A26C6CED7F006C6C15FEA26C6C4A5A017F4A5A6D6C49
5A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D
7BBA41>I<EC0FFE91387FFFC0903903FC07F890390FE000FED93F80EB3F8049C76C7E01
FE6E7E48486E7E00038248486E7E48486E7EA248486E7E003F1780A34848ED7FC0AA003F
17806D15FFA2001F1700A36C6C4A5AA200075E6D140300035E00015EA26C6C4A5AA2017C
5DA26D4A5A011E92C7FC00C017606D141E006017C06D141CA326700380EB38010038EE03
80D83FFFEC3FFFA46C1700A2333B7CBA3C>10 D<EC0FF8EC7FFE903901F80780903907E0
01C090391F8000E090383F0007017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FC
A33901F8000F1503B3AA486C497E267FFFE0B512C0A32A3B7FBA2E>12
D<DA0FF0EB1FF0DA7FFEEBFFFC903B01F80F83F00F903C07E001CFC00380903C1F8000FF
0001C090273F0007FE130F017E4948497EA2495CA248485C03076E5A03030203C7FC95C8
FCA9F007E0BAFCA33C01F80003F0001F1807B3AA486C496C497E267FFFE0B500C1B51280
A3413B7FBA45>14 D<133C137EA213FE1201EA03FC13F0EA07E0EA0FC0EA1F80EA1E005A
5A5A12C00F0F6FB92A>19 D<121C127FEAFF80A213C0A3127F121C1200A412011380A212
0313005A1206120E5A5A5A12600A1979B917>39 D<146014E0EB01C0EB0380EB0700130E
131E5B5BA25B485AA2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67E
A3121EA2121F7EA27F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00
E01460135278BD20>I<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C13
3C133E131EA2131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2
133E133C137C1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15
301578B3A6007FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<B512FCA516057F941C>I<121C127FEAFF80A5EA7F00121C09097988
17>I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487FA2
48C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C15006D
5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A7D
B72A>48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A31C38
79B72A>I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E1230
00706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D140F
4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B4913034848140048
5A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A>I<EB07F8EB3FFF4913C03901
F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A25D
4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80A2
16C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C49
5A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>I<1538A2
157815F8A2140114031407A2140F141F141B14331473146314C313011483EB0303130713
06130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12E0B7
12F8A3C73803F800AB4A7E0103B512F8A325397EB82A>I<0006140CD80780133C9038F0
03F890B5FC5D5D158092C7FC14FC38067FE090C9FCABEB07F8EB3FFE9038780F803907E0
07E090388003F0496C7E12066E7EC87EA28181A21680A4123E127F487EA490C71300485C
12E000605C12700030495A00385C6C1303001E495A6C6C485A3907E03F800001B5C7FC38
007FFCEB1FE0213A7CB72A>I<EC3FC0903801FFF0010713FC90380FE03E90383F800790
387E001F49EB3F804848137F485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F
90C9FCEB01FC903807FF8039FF1E07E090383801F0496C7E01607F01E0137E497FA24914
8016C0151FA290C713E0A57EA56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B
6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A7DB72A>I<12301238123E003F
B612E0A316C05A168016000070C712060060140E5D151800E01438485C5D5DC712014A5A
92C7FC5C140E140C141C5CA25CA214F0495AA21303A25C1307A2130FA3495AA3133FA513
7FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF017F13C09038FC07F03901E001F84848
6C7E4848137C90C77E48141E000E141F001E80A3121FA27F5D01E0131E6C6C133E01FC13
3C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C5BEB3FFF6D13C081017F13F801F07F39
03E07FFE3907801FFF48486C1380481303003E6D13C0003CEB007F007C143F0078EC0FE0
00F814075A1503A21501A36C15C012781503007C15806CEC07006C5C6C6C131ED807E013
7C3903F803F0C6B55A013F1380D907FCC7FC233A7DB72A>I<EB03F8EB1FFF017F13C090
38FC07E03903F803F048486C7E48486C7E49137E121F48487FA2007F158090C7FCA248EC
1FC0A616E0A56C143FA27F123F001F147FA26C6C13FF3907E001DF0003149F3801F00339
00FC0F1FD93FFC13C0EB07F090C7FC153F1680A316005D000F147E487E486C5BA24A5A4A
5A49485A6C48485A001C495A260F807FC7FC3807FFFC000113F038003FC0233A7DB72A>
I<121C127FEAFF80A5EA7F00121CC7FCB2121C127FEAFF80A5EA7F00121C092479A317>
I<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F836167B9F41>61
D<EB3FE03801FFFE3907C03F80390E000FC0003CEB07F000301303007014F8007C130100
FE14FC7EA4127E003CEB03F8C7FCEC07F0A2EC0FE0EC1F80EC3F00147E147C5C495A5C49
5A5CA249C7FCA31306AA90C8FCA8130EEB3F80497EA56D5A010EC7FC1E3B7CBA27>63
D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C1FA2021C7FEC18
0FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249C77F167FA20106
810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E0707E1201486C81D8
0FFC02071380B56C90B512FEA3373C7DBB3E>65 D<B712E016FC16FF0001903980007FC0
6C90C7EA1FE0707E707E707EA2707EA283A75F16035F4C5A4C5A4C5A4C5AEEFF8091B500
FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83707EA21880177F18C0A7188017FFA24C
13005F16034C5AEE1FF8486DEB7FF0B812C094C7FC16F832397DB83B>I<913A01FF8001
80020FEBE003027F13F8903A01FF807E07903A03FC000F0FD90FF0EB039F4948EB01DFD9
3F80EB00FF49C8127F01FE153F12014848151F4848150FA248481507A2485A1703123F5B
007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F160318006C7E5F6C7E17066C
6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB03C0D903FCEB0F80902701FF
803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>I<B712C016F816FE00019039
8001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177FA2EF3F8018C0171F18E0170F18F0
A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0EF3F80A2EF7F0017FE4C5A4C5AEE
0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F>I<B812FCA30001903880000F6C
90C71201EE007E173E171E170EA31706A317078316C0A394C7FCA31501A21503150F91B5
FCA3EC000F15031501A21500A21860A318E093C712C0A41701A3EF0380A21707A2170F17
3F177F486D903807FF00B9FCA333397DB839>I<B812F8A30001903880001F6C90C71201
EE00FC177C173C171CA2170CA4170E1706A2ED0180A21700A41503A21507151F91B5FCA3
EC001F15071503A21501A692C8FCAD4813C0B612C0A32F397DB836>I<B648B512FEA300
01902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB648B512FEA337
397DB83E>72 D<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>I<B612E0
A3000101C0C8FC6C90C9FCB3AD1718A517381730A31770A317F0A216011603160FEE1FE0
486D13FFB8FCA32D397DB834>76 D<B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8
A2D9CFE01533A3D9C7F01563A3D9C3F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F14
06A36E6C130CA36E6C1318A26E6C1330A36E6C1360A26E6C13C0A3913901FC0180A39139
00FE0300A2ED7F06A3ED3F8CA2ED1FD8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500
C00203B512F8A2ED018045397DB84C>I<B5913807FFFE8080C69238007FE06EEC1F80D9
DFF0EC0F001706EBCFF8EBC7FCA2EBC3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E
8114036E7E168080ED7FC016E0153FED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2
EE7FC6EE3FE6A2EE1FF6EE0FFEA216071603A216011600A2177E486C153E487ED80FFC15
1EB500C0140EA2170637397DB83E>I<EC03FF021F13E09138FE01FC903901F8007ED907
E0EB1F8049486D7ED93F80EB07F049C76C7E01FE6E7E48486E7E49157E0003167F4848ED
3F80A24848ED1FC0A2001F17E049150F003F17F0A3007F17F8491507A300FF17FCAC007F
17F86D150FA3003F17F0A26C6CED1FE0A36C6CED3FC0000717806D157F000317006C6C15
FEA26C6C4A5A017F4A5A6D6C495A6D6C495AD907E0EB1F80D903F8017FC7FC903900FE01
FC91381FFFE0020390C8FC363D7BBA41>I<B712C016F816FE000190398001FF806C90C7
EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0F
E0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839>I<EC03FF02
1F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049C76C7E01FE
6E7E48486E7EA24848157F0007178049153F000F17C049151F001F17E0A24848ED0FF0A3
007F17F8A2491507A200FF17FCAC007F17F8A26D150FA2003F17F0A26C6CED1FE0A36C6C
ED3FC00007027C14804AB4FC3C03F80383807F003B01FC0701C0FEEC0E002600FE0CEBE1
FC017FEC63F8D93F8CEB77F0D91FCCEB3FE0D907EE14806DB449C7FC0100D981FC130CEC
1FFF0203131C91C7001E131C161F183CEF807CEFC0F8EE0FFFA318F08218E07013C07013
809338007E00364B7BBA41>I<B612FEEDFFE016F8000190388007FE6C90C76C7EEE3FC0
707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91B512E05E
9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F1803486D01
071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>I<D90FF813C090
383FFE0190B512813903F807E33907E000F74848137F4848133F48C7121F003E140F007E
1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C13F8ECFF806C14
E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3FF0151F150FED07
F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F6DEB1F80D8FBF0
EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>I<003FB812E0A3
D9C003EB001F273E0001FE130348EE01F00078160000701770A300601730A400E0173848
1718A4C71600B3B0913807FF80011FB612E0A335397DB83C>I<B6903807FFFEA3000101
809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F17186D6C14385F
6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381FFFF8020713E091
38007F80373B7DB83E>I<B500FC91387FFF80A30003018091380FFC006C90C8EA07E071
5A6C705A6E1403017F93C7FCA280013F1506A26E140E011F150C80010F5DA28001075DA2
6E147001031560A26D6C5CA2806D4A5AA2ED8003027F91C8FCA291383FC006A215E0021F
5BA2EDF01C020F1318A26E6C5AA215FC02035BA2EDFEE002015BA26E6C5AA36FC9FCA315
3EA2151CA3393B7EB83E>I<B5D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C
48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F
4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C
6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D913B7F818001FE
06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A30207
5E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B7EB855>I<EAFFF8
A4EAF000B3B3B3B3A3EAFFF8A40D5378BD17>91 D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8
A40D537FBD17>93 D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E
7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90
C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FF
F00FE03A007F8007C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038
F1E03E9039F3801F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2
167E167FAA167E16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F
00903881E07E903800FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E039
01F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A212
7E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E0
39007C07C090381FFF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8
EB1FFF90387E078F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC
5AA2127E12FEAA127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801
CFFF39007C078F90381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC039
01F803E03903F001F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FE
A3B7FCA248C8FCA5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F0
13386C6C137090387E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090
380FC1E0EB1F8790383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FC
B3AB487E387FFFF8A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F70
7C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C
6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C
14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401
007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF00107
90C7FC26387EA52A>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F80
9039F3800FC0EBF70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E
>I<EA0380EA0FE0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0
A312387EB717>I<EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA31307
1301B3B3A2123C127E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F81549
84B719>I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A
4A5A4AC7FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E
7E811400157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012
FFA3120F1203B3B3AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB
7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC
49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445
>I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7E
A25BA35BB3A3486C497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03
E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC
03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB
3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01F
E000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB03F04914F8
49130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614
C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>
I<D903F813C090381FFE0190387E07819038FC01C33903F000E300071477484813374913
3F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C
13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA4
2C>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E0
9038FC0080491300A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF
381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00
037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4
131E38F3C07C38E1FFF038C03F801A277DA521>I<1318A51338A31378A313F812011203
1207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFE
EB01F81A347FB220>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3
151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029
267EA42E>I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A2
6C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA29038
03F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3
260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6C
EC8006156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102
C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7
FC4A7FA20100141E4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001
EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8
FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C13
7E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B53880
3FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D
5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA214
7CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5A
EA1FF0EA0FC027357EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0F
E012300070EB1FC0EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290
387F000613FEA2485A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03
FC90B5FCA21F247EA325>I<B81280A2290280962A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmbx12 14.4 20
/Fr 20 118 df<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EAF800C7
FCB3B3B3A6007FB712FEA52F4E76CD43>49 D<EC3FFE0103B512E0010F14FC013F14FF90
B712C048D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48488001F016
80486C6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914E05EA218C0
5E1880A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48
C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495AD91F801407
49C8FC013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD43>I<9138
0FFFC091B512FC0107ECFF80011F15E090263FF8077F9026FF800113FC4848C76C7ED803
F86E7E491680D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90C75AD801FC16
80C9FC4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E016FCEEFF80DA
000713E0030113F89238007FFE707E7013807013C018E07013F0A218F8A27013FCA218FE
A2EA03E0EA0FF8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C6C4816E001F0
4A13C06C484A1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D011F15800103
02FCC7FCD9001F1380374F7ACD43>I<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A
527CD132>73 D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313
C0070F13E01BF0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0
614F13C04F13004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A55052
7CD15C>80 D<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F73
7F737F85737F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13F0
95B512C092B8C9FC19F819E019F89226F0000313FE9439007FFF80727F727F727F727F72
7F8684A28684A787A71D1C75133EA38575137E73157C7513FC731401B86C6D9038F803F8
07039038FE07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82
D<003FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E08449197F4919
3F90C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A5
53517BD05E>84 D<913801FFF8021FEBFF8091B612F0010315FC010F9038C00FFE903A1F
FE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F138091C7FC486F1300
705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C07E6E140F6CEE1F80
6C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390B55A01001580023F
49C7FC020113E033387CB63C>99 D<4DB47E0407B5FCA5EE001F1707B3A4913801FFE002
1F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5FC49487F484914
3F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA26C7F5F6C6D5C7E
6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF6D90B5128F0101
ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F13FC49B6FC0107
15C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E48178048497F18
C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6127FA27F7EA218
E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F806D6CECFF00D91F
FEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F034387CB63D>I<
ED3FFC0203B5FC020F14C0023F14E09139FFF81FF0499038C03FF849EB807F49903800FF
FC495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A526007FF8C8FCB3B3
A7007FB512FEA52E547CD329>I<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314
F0030F8092391FE07FFC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FF
C7FC5CA25CA45CB3ACB6D8F807B612C0A542537BD24B>104 D<137F497E000313E0487F
A2487FA76C5BA26C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B
547BD325>I<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0011F6D7E030F6E01
7F8092271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126FF03E080C602F06D
D90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC8102FFC75C4A5EA24A
5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570>109 D<D93FF0EB1FFCB591B5
12C0030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3
C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>I<913801FF
E0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D6C7E49486D
7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F1880A400FF18
C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D495B6C6D495B
6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8FC020113E0
3A387CB643>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF89139E1F83F
FC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE0FF04A90C7
FCA55CB3AAB612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7FC120348EB
003FD80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F091C7FC13FC
EBFFC06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15C013000207
14E0EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D141F17C07F
6DEC3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807148048C601
F8C7FC2C387CB635>I<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A
000F90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC0
3E6DEBF0FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF8913801FFC0B502
07B5FCA50003ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6C
D907C3EBFFC0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377B
B54B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fs cmr6 6 2
/Fs 2 52 df<EA01FC3807FF80381C0FC0383003E0386001F0EB00F812F86C13FCA2147C
1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00131E13385B5B3801C00CEA
0380380600185A5A383FFFF85AB512F0A216217CA01E>50 D<13FF000313C0380F03E038
1C00F014F8003E13FC147CA2001E13FC120CC712F8A2EB01F0EB03E0EB0FC03801FF00A2
380003E0EB00F01478147C143E143F1230127812FCA2143E48137E0060137C003813F838
1E03F0380FFFC00001130018227DA01E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ft cmsy9 9 1
/Ft 1 80 df<913901C003FC913907801FFF91260F007F13C0DA3C01B512E091267803C1
13F09139E00F007F902603C01EEB1FF8494848130F494848EB07FC011E13F84948481303
90267C03E014FE01F815014848485A140FD803E04913000007131F01C090C8FC000F133C
EB8038001F90C9FCA248CA12FCA3481601127E18F8A212FEEF03F0A218E0170718C0170F
6C1780EF1F00A2173E6C6C5D17786D5D4C5A6C6C4A5A6D4A5A6C6C4AC7FC6D143C6CB45C
6C90388001E06C9038F01FC06C90B5C8FC6C6C13F86D13E0D907FEC9FC37377CB43D>79
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fu cmmi9 9 3
/Fu 3 111 df<1530157815F8A215F01401A215E01403A215C01407A21580140FA21500
5CA2143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A2495AA291C7FC5BA213
1E133EA2133C137CA2137813F8A25B1201A25B1203A2485AA25B120FA290C8FC5AA2121E
123EA2123C127CA2127812F8A25A12601D4B7CB726>61 D<147F903803FFC090380FC0F0
90383F0038137C4913F83801F0013803E0031207EA0FC090388001F0001F90C7FC123F90
C8FCA25A127EA45AA3127C150C151C15386C147015E06CEB03C0390F800F003807C07E38
01FFF038007F801E227EA021>99 D<D801E013FE3A07F803FF803A0E3E0F07E0001C9038
3C03F039181F7001003813E026303FC07F12700060138014001503D8E07F5CEA407E1200
150701FE5C5B150F5E120149131FEE8080EE81C00003023F13804914011603037F130000
07147E495CED3E0E5E000FEC1E3849EB0FF0D80380EB03C02A227EA02E>110
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fv cmr9 9 31
/Fv 31 122 df<EC07FC91387FFFC0903901FC07F0903907E000FC4948137E013FC7EA1F
80017E6E7E496E7E48486E7E00038249140148486E7E000F8249157E001F167FA24848ED
3F80A2007F17C0A30106EC0C1F00FF17E0A20107B512FCA60106C7120CA36CC913C0A26D
153FA2003F1780A26D157F001F1700A26C6C15FE00075E6D14016C6C4A5A00015E6C6C4A
5A017E4A5A6D4A5A6D6C49C7FCD907E013FC903901FC07F09039007FFFC0DA07FCC8FC33
377CB43C>2 D<14C01301EB0380EB0F00130E5B133C5B5BA2485A485AA212075B120F90
C7FC5AA2121E123EA3123C127CA55AB0127CA5123C123EA3121E121FA27E7F12077F1203
A26C7E6C7EA213787F131C7F130FEB0380EB01C01300124A79B71E>40
D<12C07E1270123C121C7E120F6C7E6C7EA26C7E6C7EA27F1378137C133C133EA2131E13
1FA37F1480A5EB07C0B0EB0F80A514005BA3131E133EA2133C137C137813F85BA2485A48
5AA2485A48C7FC120E5A123C12705A5A124A7CB71E>I<123C127EB4FCA21380A2127F12
3D1201A412031300A25A1206120E120C121C5A5A126009177A8715>44
D<B512F0A514057F921A>I<123C127E12FFA4127E123C08087A8715>I<007FB712FEA390
398007F001D87C00EC003E0078161E0070160EA20060160600E01607A3481603A6C71500
B3AB4A7E011FB512FCA330337DB237>84 D<B500FE90381FFFF8A3000190C813006C4815
3C1718B3AF1738017F1530A217706D6C1460011F15E06E495A010F14036D6C495A6D6C49
C7FCD901FC131E6DB413FC91383FFFF0020F13C0020190C8FC35357EB23A>I<B5D8F007
B539800FFFF0A3000390C7273FF000011300D801FC6E48EB007C1A386D140F0000193083
6D020715706D1860A26E496C14E0013F60A26ED919FC1301011F60A26ED930FE1303010F
95C7FCA26ED9607F5B01071706A26E9039C03F800E0103170CA2913BFC01801FC01C0101
1718A2913BFE03000FE03801001730A2DAFF06EB07F0027F5EA2038CEB03F8023F5EA203
D8EB01FC021FEDFD80A203F0EB00FF020F93C8FCA24B800207157EA24B143E0203153CA2
4B141C020115184C357FB24F>87 D<EB7F803803FFF0380F80FC381C003E003F133F6D6C
7E6E7EA26E7EEA1F00C7FCA4EB01FF131FEBFF873803FC07EA0FF0EA1FC0EA3F80127F13
004815C05AA3140FA26C131F6C133B3A3F8071F180391FC1E1FF2607FFC013003900FE00
3C22237DA126>97 D<EA03F012FFA312071203AEEC3F80ECFFE09038F3C0F89038F7007E
01FE7F49EB1F8049EB0FC05BED07E016F0A2150316F8AA16F0150716E0A2ED0FC07F6DEB
1F8001ECEB3F0001CF137C90388381F8903801FFE0C76CC7FC25357EB32B>I<EB07F8EB
3FFF9038FC07C03901F000E03903E003F03807C007120FEA1F80123F90380003E04890C7
FCA2127E12FEAA127FA26C14187F001F14386D1330000F14706C6C13E03903F001C03900
FC0F8090383FFE00EB07F01D237EA122>I<153FEC0FFFA3EC007F81AEEB07F0EB3FFCEB
FC0F3901F003BF3907E001FF48487E48487F8148C7FCA25A127E12FEAA127E127FA27E6C
6C5BA26C6C5B6C6C4813803A03F007BFFC3900F81E3FEB3FFCD90FE0130026357DB32B>
I<EB0FE0EB7FFCEBF83F3903F00F80D807E013C0390FC007E0381F800315F0EA3F001401
4814F8127EA212FEA2B6FCA248C8FCA5127E127FA26C1418A26C6C1338000F14306D1370
6C6C13E03901F003C03900FC0F00EB3FFEEB07F01D237EA122>I<EB01FCEB07FF90381F
078090383E0FC0EB7C1F13FCEA01F8A20003EB070049C7FCACB512F0A3D803F0C7FCB3A7
487E387FFFE0A31A357FB417>I<151F90391FC07F809039FFF8E3C03901F07FC73907E0
3F033A0FC01F83809039800F8000001F80EB00074880A66C5CEB800F000F5CEBC01F6C6C
48C7FCEBF07C380EFFF8380C1FC0001CC9FCA3121EA2121F380FFFFEECFFC06C14F06C14
FC4880381F0001003EEB007F4880ED1F8048140FA56C141F007C15006C143E6C5C390FC0
01F83903F007E0C6B51280D91FFCC7FC22337EA126>I<EA03F012FFA312071203AEEC1F
C0EC7FF09038F1E0FC9038F3807C9038F7007E13FE497FA25BA25BB3486CEB7F80B538C7
FFFCA326347EB32B>I<EA0780EA0FC0EA1FE0A4EA0FC0EA0780C7FCAAEA07E012FFA312
0F1207B3A6EA0FF0B5FCA310337EB215>I<EA07E012FFA3120F1207B3B3A7EA0FF0B5FC
A310347EB315>108 D<2703F01FE013FF00FF90267FF80313C0903BF1E07C0F03E0903B
F3803E1C01F02807F7003F387FD803FE1470496D486C7EA2495CA2495CB3486C496C487E
B53BC7FFFE3FFFF0A33C217EA041>I<3903F01FC000FFEB7FF09038F1E0FC9038F3807C
3907F7007EEA03FE497FA25BA25BB3486CEB7F80B538C7FFFCA326217EA02B>I<EB07F0
EB3FFE9038FC1F803901F007C03903C001E000078048486C7E48C7127CA248147E003E14
3E007E143FA300FE1580A8007E1500A36C147EA26C147C6D13FC6C6C485A00075C3903F0
07E03900FC1F80D93FFEC7FCEB07F021237EA126>I<3903F03F8000FFEBFFE09038F3C0
F89038F7007ED807FE7F6C48EB1F804914C049130F16E0ED07F0A3ED03F8A9150716F0A2
16E0150F16C06D131F6DEB3F80160001FF13FC9038F381F89038F1FFE0D9F07FC7FC91C8
FCAA487EB512C0A325307EA02B>I<903807F00390383FFC07EBFC0F3901F8038F3807E0
01000F14DF48486CB4FC497F123F90C77E5AA25A5AA9127FA36C6C5B121F6D5B000F5B39
07E003BF3903F0073F3800F81EEB3FF8EB0FE090C7FCAAED7F8091380FFFFCA326307DA0
29>I<3803E07C38FFE1FF9038E38F809038E71FC0EA07EEEA03ECA29038FC0F8049C7FC
A35BB2487EB512E0A31A217FA01E>I<EBFF06000713CE381F00FE003C133E48131E140E
5A1406A27EA200FE90C7FC6C7EEA7FFC383FFFC014F0000F7F6C7FC67FEB0FFF1300EC3F
8000C0131F140F6C1307A37E15006C5B6C130E6C5B38F7807838E1FFE038C07F8019237E
A11E>I<1330A51370A313F0A21201A212031207381FFFFEB5FCA23803F000AF1403A814
073801F806A23800FC0EEB7E1CEB1FF8EB07E0182F7FAD1E>I<D803F0133F00FFEB0FFF
A30007EB007F000380B35DA35D12016D4813800000903803BFFC90387E073FEB1FFED907
F8130026227EA02B>I<B5EBFFF0A3D80FF0EB3F800007EC1F000003140E150C6D131C00
011418A26C6C5BA26D1370017E1360137F6D5BA290381F8180A214C3010F90C7FCA2EB07
E6A214FE6D5AA26D5AA36D5AA2146024217E9F29>I<B53A1FFF81FFF0A33C07F801FC00
3F8001F049EB1E0000030100141C816C6C017C1318A26D017E1338000002FE1330A29026
7E01FF5B159F168090263F030F5BA216C0903A1F8607C180A202C613E390260FCC0390C7
FCA2D907FC13F6ECF80116FE6D486C5AA36D481378A36D48133034217F9F37>I<3A7FFF
807FF8A33A07F8001FC00003EC0F800001EC070015066C6C5BA26D131C017E1318A26D5B
A2EC8070011F1360ECC0E0010F5BA2903807E180A214F3010390C7FC14FBEB01FEA26D5A
A31478A21430A25CA214E05CA2495A1278D8FC03C8FCA21306130EEA701CEA7838EA1FF0
EA0FC025307F9F29>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fw cmbx9 9 7
/Fw 7 117 df<ED1F80A24B7EA24B7EA34B7EA24A7FA34A7FA24A7F15CFA2020F7F1587
021F801503023F80EC3E01A2027E80EC7C0002FC804A137FA20101814A133F0103814A13
1FA249B67EA24981A290271F8000077F91C77EA24982013E80017E82017C80A201FC8249
157FB500F0013FB512F0A43C347DB343>65 D<EB7FFE0003B512E04814F8390FF00FFC39
1FF803FF806E138016C0157F6C5A6C5AEA0180C8FCEC7FFF010FB5FC90B6FC0003EBF07F
000F1300EA1FF8485A485A485A5BA315FF7F007F5B6D4813E03A3FF80FBFFF000FB5121F
0003EBFC0F39007FE00728217EA02B>97 D<EA01FC12FFA4120F1207ADEC07FC91387FFF
8001FDB512E09039FFF00FF89138C007FC91380003FE496D7E496D1380A217C0167FA217
E0A917C0A216FF1780A26D4913006D495A9138C007FC9039F3F01FF801E1B512E0D9C07F
13809026800FF8C7FC2B347EB331>I<903807FF80013F13F090B512FC3903FE01FE4848
487EEA0FF8EA1FF0EA3FE0A2007F6D5A496C5A153000FF91C7FCA9127F7FA2003FEC0780
7F6C6C130F000FEC1F00D807FE133E3903FF80FCC6EBFFF8013F13E0010790C7FC21217D
A027>I<3901F81F8000FFEB7FF0ECFFF89038F9E3FC9038FBC7FE380FFF876C1307A213
FEEC03FCEC01F8EC0060491300B1B512F0A41F217EA024>114 D<9038FFE1C0000713FF
5A383F803F387E000F14075A14037EA26C6CC7FC13FCEBFFE06C13FC806CEBFF80000F14
C06C14E0C6FC010F13F0EB007F140F00F0130714037EA26C14E06C13076CEB0FC09038C0
1F8090B5120000F913FC38E03FE01C217DA023>I<133CA5137CA313FCA21201A2120312
07001FB51280B6FCA3D807FCC7FCB0EC03C0A79038FE078012033901FF0F006C13FEEB3F
FCEB0FF01A2F7EAE22>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fx cmr12 12 22
/Fx 22 119 df<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A3120113
80120313005A1206120E5A5A5A12600B1D78891B>44 D<121EEA7F80A2EAFFC0A4EA7F80
A2EA1E000A0A78891B>46 D<14FF010713E090381F81F890383E007C01FC133F4848EB1F
8049130F4848EB07C04848EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC48
15FEA54815FFB3A46C15FEA56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0
000315C06D130F6C6CEB1F806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC
28447CC131>48 D<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48486C7E000E
C7EA7F8048EC3FC0ED1FE04815F00030140F007015F800601407126CB415FC7F7F1503A4
6C4813076CC7FCC8FC16F8A2150F16F0151F16E0A2ED3FC0ED7F8016005D5D4A5A4A5A4A
5A5D4A5A4A5A4AC7FC147C5C5C495A495A495A49C7120C131E5B013814185B5B485A4848
143848C81230000E1570001FB612F0A25A5AB712E0A326427BC131>50
D<ED0380A21507150FA2151F153FA2157F15FFA25CEC03BF153F14071406140C141C1418
14301470146014C013011480EB03005B13065B131C13185B1370136013E0485A5B120390
C7FC1206120E120C5A123812305A12E0B812C0A3C8383F8000ADEDFFE0027FEBFFC0A32A
437DC231>52 D<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030151C0070
5D0060153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E04A5AA24A
5A140792C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A6130FAA6D5A
EB01C02A457BC231>55 D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FFA203707F
ED607FA203E07FEDC03FA2020180ED801FA2DA03007F160FA20206801607A24A6D7EA34A
6D7EA34A6D7EA20270810260147FA202E08191B7FCA249820280C7121FA249C87F170FA2
0106821707A2496F7EA3496F7EA3496F7EA201788313F8486C83D80FFF03037FB500E002
7FEBFFC0A342477DC649>65 D<B8FC17F017FC00019039C00007FF6C499038007FC0017F
ED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A38584A31A
80AD1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE0
01FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>68
D<B56C933807FFFC6E5EA20001F1FE0026006FE0EE1BF8A3D967F01633A2D963F81663A3
D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C
1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F
6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C143ED80FFFEF0FFEB5
00F0011C0107B512FCA34E447BC359>77 D<B712FCEEFFC017F800019039C0000FFC6C6C
48EB01FF9338007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA21703
18FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3
AA3801FFE0B612C0A338447CC342>80 D<B712E016FF17C000019039C0003FF86C6C48EB
03FCEE00FF717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D5A4DC8FC
EE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE03FC707E160083717E
A2717EA784A71A6084171FA21AE0716C13C02601FFE002071301B600C01680943801FC03
943900FE0700CBEA3FFEF007F843467CC348>82 D<B60107B500F890380FFFFEA3000301
E0D9001F90C813F06C0180DA0FFCED3FC091C86C48ED1F006C871C0E6D6C6E7E1C0CA26D
6C6F5DA36EDA06FF1538011F1A30A26E020E6D1470010FDB0C7F1560A26E021C7F0107DB
183F5DA2856D6CDA301F4A5AA36D6C4A6C6C49C7FCA36D6C4A6C6C1306A3DB80016E130E
027FDA8003140CA2DBC00380023FDA00015CA203E081021F01066D5CA36E6C486E6C5AA3
6E6C486E6C5AA36F48EC1FE1020360A2DBFE7015F302010160020F90C8FCA2DBFFE015FB
6E49EC07FEA36F486E5AA36FC86C5AA3031E6F5AA4030C16605F467EC364>87
D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<167FED3FFFA315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D
5AD803F87F48487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA200
0F5D7F6C6C5B00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803
FFE09026007F0013002F467DC436>100 D<EA01E0EA07F8A2487EA46C5AA2EA01E0C8FC
ADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>105
D<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>108
D<3901FC01FE00FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FD
C07F5C01FF147F91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>110
D<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D
7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600
A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC9038
1FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC03FC00FF90380FFF8091383C07
E091387001F83A07FDE000FE00030180137FD801FFEC3F8091C7EA1FC04915E049140F17
F0160717F8160317FCA3EE01FEABEE03FCA3EE07F8A217F0160F6D15E0EE1FC06D143F17
806EEB7E00D9FDC05B9039FCF003F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487E
B512F8A32F3F7DAB36>I<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C0
00015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>114
D<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A415
0CAA017E131C017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F
001E3E7EBC26>116 D<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E12
00160C017F5CA280013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FC
A26E5A01011306A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC
2E2C7EAA33>118 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fy cmsy10 12 1
/Fy 1 4 df<147014F8A81470007815F0007C1401B4EC07F8D87F80EB0FF0D83FE0EB3F
E0D80FF0EB7F80D803F8EBFE003900FE73F890383F77E090380FFF80D903FEC7FCEB00F8
EB03FE90380FFF8090383F77E09038FE73F83903F870FED80FF0EB7F80D83FE0EB3FE0D8
7F80EB0FF0D8FF00EB07F8007CEC01F000781400C7140014F8A81470252B7AAD32>3
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fz cmbx12 17.28 20
/Fz 20 120 df<B812C0AD2A0D7EA636>45 D<16F04B7E1507151F153FEC01FF1407147F
010FB5FCB7FCA41487EBF007C7FCB3B3B3B3007FB91280A6395E74DD51>49
D<BB12F0F2FF801BF81BFEF3FFC088D800010280C7000114F8DF003F7F080F13FF748074
80867480757FA2757FA28987A289A965A26365A2515BA298B55A505C505C5091C7FC505B
505B087F13F00703B512C096B6C8FC93B812F81BC01BF8F3FF801CE00480C8001F13F808
0713FE08016D7E7480757F757F757F89757F89871E80871EC0A41EE087A663A21EC0A363
1E80A2511400A2515B515B6398B55A505C08075C081F5C97B6C7FCBD5A1CF81CE099C8FC
1BF898C9FC63627AE173>66 D<BB12E0F2FF801BF01BFE757E1CF0D800010280C7000780
DF007F13FE080F6D7E0801807480093F7F090F13FC757F757F877580767F8A88767F8A88
8AA2767FA28A881F80A37614C0A41FE0A5881FF0B05214E0A51FC0A4521480A31F006466
A2525BA2525BA2525B666499B55A515C5191C7FC515B515B515B097F5B50B512C008075C
083F91C8FC0707B512FCBD12F01CC051C9FC1BF81B8008E0CAFC6C627AE17C>68
D<4DB5ED03C0057F02F014070407B600FE140F047FDBFFC0131F4BB800F0133F030F05FC
137F033F9127F8007FFE13FF92B6C73807FF814A02F0020113C3020702C09138007FE74A
91C9001FB5FC023F01FC16074A01F08291B54882490280824991CB7E4949844949844949
8449865D49498490B5FC484A84A2484A84A24891CD127FA25A4A1A3F5AA348491A1FA448
99C8FCA25CA3B5FCB07E071FB812F880A37EA296C70001ECC000A26C7FA37E807EA26C80
A26C80A26C807F6D7F816D7F7F6D7F6D6D5F6D14C06D6E5E6E7F6E01FC5E020F01FF5E6E
02C0ED7FEF020102F8EDFFC76E02FF02071383033F02FC013F1301030F91B638FC007F03
014D131F6F6C04E01307040704801301DC007F02F8CAFC050191CBFC6D6677E37F>71
D<001FBEFCA64849C79126E0000F148002E0180091C8171F498601F81A0349864986A249
1B7FA2491B3F007F1DC090C9181FA4007E1C0FA600FE1DE0481C07A5CA95C7FCB3B3B3A3
021FBAFCA663617AE070>84 D<913803FFFE027FEBFFF00103B612FE010F6F7E4916E090
273FFE001F7FD97FE001077FD9FFF801017F486D6D7F717E486D6E7F85717FA2717FA36C
496E7FA26C5B6D5AEB1FC090C9FCA74BB6FC157F0207B7FC147F49B61207010F14C0013F
EBFE004913F048B512C04891C7FC485B4813F85A5C485B5A5CA2B55AA45FA25F806C5E80
6C047D7F6EEB01F96C6DD903F1EBFF806C01FED90FE114FF6C9027FFC07FC01580000191
B5487E6C6C4B7E011F02FC130F010302F001011400D9001F90CBFC49437CC14E>97
D<F17FF8050FB5FCA6EF000F8484B3A892380FFF804AB512F8020F14FE023FECFF8391B7
12E301039138807FF3499039F8000FFB011F01E00103B5FC494913004990C87E49488148
498148834A815A485BA2485BA25AA3485BA4B5FCAE7EA46C7FA37EA26C7FA26C5F806C5F
6C6D5D6C6D5D017F93B5FC6D6C6C0103806D6D49806D01F0D91FF7EBFFFE6D9039FE01FF
E7010190B612876D6CECFE07021F14F8020314E09127003FFE00ECC0004F657BE35A>
100 D<92380FFFC04AB512FC020FECFF80023F15E091B712F80103D9FE037F499039F000
7FFF011F01C0011F7F49496D7F4990C76C7F49486E7F48498048844A804884485B727E5A
5C48717EA35A5C721380A2B5FCA391B9FCA41A0002C0CBFCA67EA380A27EA27E6E160FF1
1F806C183F6C7FF17F006C7F6C6D16FE6C17016D6C4B5A6D6D4A5A6D01E04A5A6D6DEC3F
E0010301FC49B45A6D9026FFC01F90C7FC6D6C90B55A021F15F8020715E0020092C8FC03
0713F041437CC14A>I<F107F8DB7FFEEC3FFE020FB5D8F001B5FC027FDAFE03148049B7
128F49DCDFFD13C0010FD9F00FEBFFC149D9800114014990C7EBFC0349486E6C7E4948EC
3FFF48496E018113800780130048F0C03E97C7FC48496E7FA34884A96C60A36C6D4A5BA2
6C60A26C6D4A90C8FC6D6C4A5A6D6C4A5A6D6D485BDBF00F5B4990B612C060D97C7F4AC9
FCD9FC0F14F09126007FFECAFC92CCFC1201A47FA27F8014F091B77E18FE6CEFFFC019F0
6D17FC19FF6D846D846D846D84013F8490BAFC0003854801E0C712014890C9000F7F4848
16014848EE007F4848717E8512FF5B85A56D5F007F616D173F003F616D177F6C6C4D5A6C
01C003035B6C6D4B5B6C01F8031F5BC601FF92B5C7FC6D01F8011F5B011F90B712F80107
17E0010094C8FC020F15F0DA003F01FCC9FC4A607CC151>103 D<903807FF80B6FCA6C6
FC7F7FB3A8EF1FFF94B512F0040714FC041F14FF4C8193267FE07F7F922781FE001F7FDB
83F86D7FDB87F07FDB8FC0814C7F039FC78015BE03BC8003FC825DA25DA25DA45DB3B2B7
D8F007B71280A651647BE35A>I<EB0FE0EB3FF8497E48B5FCA24880A24880A76C5CA26C
91C7FCA238007FFC6D5AEB0FE090C9FCAF903807FF80007FB5FCA6C6FC7F7FB3B3AEB712
C0A622657BE42C>I<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB712E0A623647BE32C>
108 D<902607FF80D91FFFEEFFF8B691B500F00207EBFF80040702FC023F14E0041F02FF
91B612F84C6F488193267FE07F6D4801037F922781FE001F9027E00FF0007FC6DA83F86D
9026F01FC06D7F6DD987F06D4A487F6DD98FC0DBF87EC7804C6D027C80039FC76E488203
BEEEFDF003BC6E4A8003FC04FF834B5FA24B5FA24B94C8FCA44B5EB3B2B7D8F007B7D880
3FB612FCA67E417BC087>I<902607FF80EB1FFFB691B512F0040714FC041F14FF4C8193
267FE07F7F922781FE001F7FC6DA83F86D7F6DD987F07F6DD98FC0814C7F039FC78015BE
03BC8003FC825DA25DA25DA45DB3B2B7D8F007B71280A651417BC05A>I<923807FFE092
B6FC020715E0021F15F8027F15FE494848C66C6C7E010701F0010F13E04901C001037F49
496D7F4990C87F49486F7E49486F7E48496F13804819C04A814819E048496F13F0A24819
F8A348496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8A26C6D4B13F0A2
6C19E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D495B010701F001
0F13E06D01FE017F5B010090B7C7FC023F15FC020715E0020092C8FC030713E048437CC1
51>I<902607FF80EBFFF8B6010FEBFF80047F14F00381B612FC038715FF038F010114C0
9227BFF0003F7FC6DAFFC0010F7F6D91C76C7F6D496E7F03F86E7F4B6E7F4B17804B6F13
C0A27313E0A27313F0A21BF885A21BFCA3851BFEAE4F13FCA41BF861A21BF0611BE0611B
C06F92B512801B006F5C6F4A5B6F4A5B03FF4A5B70495B04E0017F13C09226CFFC03B55A
03C7B648C7FC03C115F803C015E0041F91C8FC040313E093CBFCB3A3B712F0A64F5D7BC0
5A>I<D90FFFEB0FFCB690383FFF8093B512E04B14F04B14F8923907FC7FFC92390FE0FF
FEC6EC1F806DD93F0113FF6D133E157E157C15F8A215F07013FEA24BEB7FFCEF3FF8EF0F
E04B90C7FCA55DB3B0B712F8A638417BC042>114 D<913A3FFF8007800107B5EAF81F01
1FECFE7F017F91B5FC48B8FC48EBE0014890C7121FD80FFC1407D81FF0801600485A007F
167F49153FA212FF171FA27F7F7F6D92C7FC13FF14E014FF6C14F8EDFFC06C15FC16FF6C
16C06C16F06C826C826C826C82013F1680010F16C01303D9007F15E0020315F0EC001F15
00041F13F81607007C150100FC81177F6C163FA2171F7EA26D16F0A27F173F6D16E06D15
7F6D16C001FEEDFF806D0203130002C0EB0FFE02FCEB7FFC01DFB65A010F5DD8FE0315C0
26F8007F49C7FC48010F13E035437BC140>I<B70081B600FC0103B512FCA6C66C0180C7
01FCC8381FFE006F6FED03F86D047F5F856F6E16076D646F70140F6D705F866F6E161F6D
646F4A6D143F6D99C7FC4E7F6F616D1B7E6F4A6D14FE6D6395B57E7001FC15016E62DCC0
016E13036EDBF87F5D05038004E0496C14076E62DCF007ED800F6E4B6C5D050F15C004F8
496C141F6E62DCFC1FEDE03F6E4B6C92C8FC053F15F004FE496C5C6E197E7048EDF8FE6E
027E6D5C05FE15FC4D6D13FD6F601BFF6F496E5BA24D806F60A26F496E5BA24D806F60A2
6F496E90C9FCA294C87E6F5FA26F486F5A047C6F5A6E417DBF75>119
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize

%%EndSetup
%%Page: 1 1
1 0 bop 934 677 a Fz(Three-Dimensional)53 b(1-Bend)1288
896 y(Graph)g(Dra)l(wings)2474 844 y Fy(\003)1156 1160
y Fx(P)m(at)33 b(Morin)341 b(Da)m(vid)32 b(R.)g(W)-8
b(o)s(o)s(d)1578 1362 y(April)31 b(27,)h(2004)1711 1762
y Fw(Abstract)550 1911 y Fv(W)-6 b(e)26 b(consider)h(three-dimensional)
g(grid-dra)n(wings)h(of)g(graphs)f(with)g(at)g(most)f(one)h(b)r(end)f
(p)r(er)434 2020 y(edge.)33 b(Under)19 b(the)h(additional)g(requiremen)
n(t)f(that)g(the)h(v)n(ertices)g(b)r(e)f(collinear,)24
b(w)n(e)c(pro)n(v)n(e)f(that)h(the)434 2130 y(minim)n(um)k(v)n(olume)h
(of)i(suc)n(h)f(a)h(dra)n(wing)g(is)g(\002\()p Fu(cn)p
Fv(\),)g(where)g Fu(n)g Fv(is)g(the)f(n)n(um)n(b)r(er)e(of)j(v)n
(ertices)g(and)f Fu(c)434 2240 y Fv(is)g(the)f(cut)n(width)g(of)h(the)g
(graph.)34 b(W)-6 b(e)25 b(then)g(pro)n(v)n(e)g(that)g(ev)n(ery)g
(graph)g(has)h(a)g(three-dimensional)434 2349 y(grid-dra)n(wing)35
b(with)f Ft(O)r Fv(\()p Fu(n)1215 2317 y Fs(3)1250 2349
y Fu(=)13 b Fv(log)1400 2317 y Fs(2)1448 2349 y Fu(n)p
Fv(\))34 b(v)n(olume)e(and)i(one)g(b)r(end)f(p)r(er)h(edge.)59
b(The)34 b(b)r(est)g(previous)434 2459 y(b)r(ound)25
b(w)n(as)i Ft(O)r Fv(\()p Fu(n)958 2427 y Fs(3)993 2459
y Fv(\).)227 2763 y Fr(1)135 b(In)l(tro)t(duction)227
2965 y Fq(W)-7 b(e)21 b(consider)e(undirected,)j(\014nite,)h(and)d
(simple)h(graphs)e Fp(G)i Fq(with)g(v)n(ertex)e(set)i
Fp(V)e Fq(\()p Fp(G)p Fq(\))i(and)f(edge)g(set)h Fp(E)5
b Fq(\()p Fp(G)p Fq(\).)227 3085 y(The)32 b(n)n(um)n(b)r(er)h(of)f(v)n
(ertices)g(and)g(edges)g(of)h Fp(G)g Fq(are)e(resp)r(ectiv)n(ely)h
(denoted)h(b)n(y)f Fp(n)f Fq(=)g Fo(j)p Fp(V)19 b Fq(\()p
Fp(G)p Fq(\))p Fo(j)34 b Fq(and)e Fp(m)f Fq(=)227 3204
y Fo(j)p Fp(E)5 b Fq(\()p Fp(G)p Fq(\))p Fo(j)p Fq(.)49
b(A)32 b Fn(thr)l(e)l(e-dimensional)j(p)l(olyline)g(grid-dr)l(awing)41
b Fq(of)31 b(a)g(graph,)h(henceforth)f(called)g(a)g Fn(p)l(olyline)227
3324 y(dr)l(awing)p Fq(,)g(represen)n(ts)c(the)j(v)n(ertices)e(b)n(y)h
(distinct)h(p)r(oin)n(ts)f(in)h Fm(Z)2230 3294 y Fl(3)2291
3324 y Fq(\(called)f Fn(gridp)l(oints)7 b Fq(\),)31 b(and)e(represen)n
(ts)227 3443 y(eac)n(h)i(edge)g(as)g(a)g(p)r(olyline)h(b)r(et)n(w)n
(een)g(its)g(endp)r(oin)n(ts)g(with)g(b)r(ends)g(\(if)h(an)n(y\))e
(also)g(at)g(gridp)r(oin)n(ts,)h(suc)n(h)227 3563 y(that)37
b(distinct)h(edges)e(only)g(in)n(tersect)h(at)g(common)f(endp)r(oin)n
(ts,)j(and)e(eac)n(h)f(edge)h(only)f(in)n(tersects)g(a)227
3682 y(v)n(ertex)27 b(that)i(is)f(an)g(endp)r(oin)n(t)g(of)h(that)f
(edge.)39 b(A)28 b(p)r(olyline)h(dra)n(wing)d(with)j(at)f(most)h
Fp(b)f Fq(b)r(ends)g(p)r(er)g(edge)227 3802 y(is)f(called)g(a)h
Fp(b)p Fn(-b)l(end)h(dr)l(awing)p Fq(.)38 b(A)28 b(0-b)r(end)f(dra)n
(wing)g(is)g(called)g(a)g Fn(str)l(aight-line)k(dr)l(awing)p
Fq(.)351 3921 y(A)d(folklore)e(result)h(states)g(that)h(ev)n(ery)e
(graph)h(has)f(a)h(straigh)n(t-line)g(dra)n(wing.)35
b(Th)n(us)27 b(w)n(e)g(are)g(in)n(ter-)227 4041 y(ested)c(in)g
(optimising)f(certain)g(measures)g(of)h(the)g(aesthetic)g(qualit)n(y)f
(of)h(suc)n(h)f(dra)n(wings.)34 b(The)22 b Fn(b)l(ounding)227
4161 y(b)l(ox)41 b Fq(of)31 b(a)g(p)r(olyline)g(dra)n(wing)e(is)i(the)h
(minim)n(um)g(axis-aligned)d(b)r(o)n(x)i(con)n(taining)f(the)h(dra)n
(wing.)46 b(If)32 b(the)227 4280 y(b)r(ounding)21 b(b)r(o)n(x)g(has)g
(side)g(lengths)g Fp(X)12 b Fo(\000)6 b Fq(1,)22 b Fp(Y)j
Fo(\000)6 b Fq(1)20 b(and)h Fp(Z)12 b Fo(\000)6 b Fq(1,)21
b(then)h(w)n(e)f(sp)r(eak)g(of)g(an)g Fp(X)12 b Fo(\002)6
b Fp(Y)24 b Fo(\002)6 b Fp(Z)27 b Fq(p)r(olyline)227
4400 y(dra)n(wing)k(with)i Fn(volume)39 b Fp(X)28 b Fo(\001)22
b Fp(Y)40 b Fo(\001)22 b Fp(Z)6 b Fq(.)52 b(That)32 b(is,)i(the)f(v)n
(olume)f(of)g(a)g(p)r(olyline)h(dra)n(wing)e(is)h(the)h(n)n(um)n(b)r
(er)227 4519 y(of)h(gridp)r(oin)n(ts)f(in)i(the)f(b)r(ounding)g(b)r(o)n
(x.)56 b(This)35 b(de\014nition)f(is)g(form)n(ulated)g(so)f(that)i(t)n
(w)n(o-dimensional)227 4639 y(dra)n(wings)f(ha)n(v)n(e)h(p)r(ositiv)n
(e)h(v)n(olume.)63 b(This)36 b(pap)r(er)g(con)n(tin)n(ues)f(the)i
(study)f(of)h(upp)r(er)f(b)r(ounds)h(on)f(the)227 4758
y(v)n(olume)e(and)h(n)n(um)n(b)r(er)g(of)g(b)r(ends)g(p)r(er)g(edge)f
(in)i(p)r(olyline)f(dra)n(wings.)57 b(The)35 b(v)n(olume)f(of)h
(straigh)n(t-line)227 4878 y(dra)n(wings)f(has)h(b)r(een)h(widely)g
(studied)g([1)o({5)o(,)i(8,)g(9)o(,)g(11)o(,)g(12)o(,)g(15)o(,)g(17)o
(,)g(19)o(,)f(20)o(].)62 b(Only)35 b(recen)n(tly)g(ha)n(v)n(e)227
4997 y(\(non-orthogonal\))28 b(p)r(olyline)j(dra)n(wings)e(b)r(een)j
(considered)d([10)o(,)j(14)o(].)47 b(T)-7 b(able)30 b(1)h(summarises)e
(the)i(b)r(est)227 5117 y(kno)n(wn)c(upp)r(er)g(b)r(ounds)h(on)f(the)h
(v)n(olume)f(and)h(b)r(ends)g(p)r(er)f(edge)g(in)h(p)r(olyline)g(dra)n
(wings.)p 227 5186 1323 4 v 318 5251 a Fk(\003)354 5274
y Fj(Sc)n(ho)r(ol)106 b(of)e(Computer)h(Science,)127
b(Carleton)105 b(Univ)n(ersit)n(y)-6 b(,)125 b(Otta)n(w)n(a,)h(Canada.)
277 b(Email:)227 5369 y Fi(f)p Fh(morin,davidw)p Fi(g)p
Fh(@scs.carle)q(ton.)q(ca)p Fj(.)37 b(Researc)n(h)25
b(supp)r(orted)f(b)n(y)g(NSER)n(C.)1860 5707 y Fq(1)p
eop
%%Page: 2 2
2 1 bop 336 349 a Fq(T)-7 b(able)27 b(1:)37 b(V)-7 b(olume)27
b(of)h(3D)g(p)r(olyline)f(dra)n(wings)f(of)i(graphs)e(with)i
Fp(n)g Fq(v)n(ertices)e(and)h Fp(m)c Fo(\025)g Fp(n)28
b Fq(edges.)p 291 412 3152 4 v 338 496 a(graph)f(family)472
b(b)r(ends)28 b(p)r(er)g(edge)94 b(v)n(olume)319 b(reference)p
291 535 V 338 619 a(arbitrary)938 b(0)266 b Fo(O)r Fq(\()p
Fp(n)2062 589 y Fl(3)2099 619 y Fq(\))359 b(Cohen)27
b Fn(et)i(al.)g Fq([3])338 739 y(arbitrary)938 b(0)266
b Fo(O)r Fq(\()p Fp(m)2085 708 y Fl(4)p Fg(=)p Fl(3)2189
739 y Fp(n)p Fq(\))219 b(Dujmo)n(vi)n(\023)-39 b(c)26
b(and)i(W)-7 b(o)r(o)r(d)28 b([12)o(])338 858 y(maxim)n(um)g(degree)e
(\001)551 b(0)266 b Fo(O)r Fq(\(\001)p Fp(mn)p Fq(\))254
b(Dujmo)n(vi)n(\023)-39 b(c)26 b(and)i(W)-7 b(o)r(o)r(d)28
b([12)o(])338 978 y(b)r(ounded)g(c)n(hromatic)f(n)n(um)n(b)r(er)266
b(0)g Fo(O)r Fq(\()p Fp(n)2062 948 y Fl(2)2099 978 y
Fq(\))359 b(P)n(ac)n(h)26 b Fn(et)j(al.)g Fq([19)o(])338
1097 y(b)r(ounded)f(c)n(hromatic)f(n)n(um)n(b)r(er)266
b(0)g Fo(O)r Fq(\()p Fp(m)2085 1067 y Fl(2)p Fg(=)p Fl(3)2189
1097 y Fp(n)p Fq(\))219 b(Dujmo)n(vi)n(\023)-39 b(c)26
b(and)i(W)-7 b(o)r(o)r(d)28 b([12)o(])338 1217 y(b)r(ounded)g(maxim)n
(um)g(degree)307 b(0)266 b Fo(O)r Fq(\()p Fp(n)2062 1187
y Fl(3)p Fg(=)p Fl(2)2166 1217 y Fq(\))292 b(Dujmo)n(vi)n(\023)-39
b(c)26 b(and)i(W)-7 b(o)r(o)r(d)28 b([12)o(])338 1336
y Fp(H)7 b Fq(-minor)27 b(free)g(\()p Fp(H)35 b Fq(\014xed\))422
b(0)266 b Fo(O)r Fq(\()p Fp(n)2062 1306 y Fl(3)p Fg(=)p
Fl(2)2166 1336 y Fq(\))292 b(Dujmo)n(vi)n(\023)-39 b(c)26
b(and)i(W)-7 b(o)r(o)r(d)28 b([12)o(])338 1456 y(b)r(ounded)g
(tree-width)553 b(0)266 b Fo(O)r Fq(\()p Fp(n)p Fq(\))396
b(Dujmo)n(vi)n(\023)-39 b(c)26 b Fn(et)k(al.)f Fq([8)o(,)f(11)o(])338
1575 y Fp(k)s Fq(-colourable)e Fp(q)s Fq(-queue)517 b(1)266
b Fo(O)r Fq(\()p Fp(k)s(q)s(m)p Fq(\))287 b(Dujmo)n(vi)n(\023)-39
b(c)26 b(and)i(W)-7 b(o)r(o)r(d)28 b([10)o(])338 1695
y(arbitrary)938 b(1)266 b Fo(O)r Fq(\()p Fp(nm)p Fq(\))323
b(Dujmo)n(vi)n(\023)-39 b(c)26 b(and)i(W)-7 b(o)r(o)r(d)28
b([10)o(])338 1815 y(cut)n(width)g Fp(c)882 b Fq(1)266
b Fo(O)r Fq(\()p Fp(cn)p Fq(\))360 b(Theorem)26 b(1)338
1934 y(arbitrary)938 b(1)266 b Fo(O)r Fq(\()p Fp(n)2062
1904 y Fl(3)2099 1934 y Fp(=)14 b Fq(log)2262 1897 y
Fl(2)2313 1934 y Fp(n)p Fq(\))95 b(Theorem)26 b(2)338
2054 y Fp(q)s Fq(-queue)988 b(2)266 b Fo(O)r Fq(\()p
Fp(q)s(n)p Fq(\))356 b(Dujmo)n(vi)n(\023)-39 b(c)26 b(and)i(W)-7
b(o)r(o)r(d)28 b([10)o(])338 2173 y Fp(q)s Fq(-queue)f(\(constan)n(t)h
Fp(\017)22 b(>)h Fq(0\))308 b Fo(O)r Fq(\(1\))201 b Fo(O)r
Fq(\()p Fp(mq)2125 2143 y Fg(\017)2157 2173 y Fq(\))301
b(Dujmo)n(vi)n(\023)-39 b(c)26 b(and)i(W)-7 b(o)r(o)r(d)28
b([10)o(])338 2293 y Fp(q)s Fq(-queue)861 b Fo(O)r Fq(\(log)15
b Fp(q)s Fq(\))141 b Fo(O)r Fq(\()p Fp(m)14 b Fq(log)g
Fp(q)s Fq(\))198 b(Dujmo)n(vi)n(\023)-39 b(c)26 b(and)i(W)-7
b(o)r(o)r(d)28 b([10)o(])p 291 2332 V 351 2618 a(Cohen)k
Fn(et)i(al.)f Fq([3)o(])g(pro)n(v)n(ed)d(that)i(the)h(complete)f(graph)
f Fp(K)2227 2630 y Fg(n)2303 2618 y Fq(\(and)h(hence)h(ev)n(ery)d
Fp(n)p Fq(-v)n(ertex)h(graph\))227 2737 y(has)23 b(a)h(straigh)n
(t-line)f(dra)n(wing)g(with)h Fo(O)r Fq(\()p Fp(n)1546
2707 y Fl(3)1584 2737 y Fq(\))h(v)n(olume,)f(and)g(that)h(\012\()p
Fp(n)2424 2707 y Fl(3)2461 2737 y Fq(\))f(v)n(olume)g(w)n(as)f
(necessary)-7 b(.)34 b(Dyc)n(k)227 2857 y Fn(et)i(al.)f
Fq([14)o(])g(recen)n(tly)f(pro)n(v)n(ed)f(that)i Fp(K)1472
2869 y Fg(n)1551 2857 y Fq(has)f(a)g(2-b)r(end)g(dra)n(wing)f(with)i
Fo(O)r Fq(\()p Fp(n)2732 2827 y Fl(2)2770 2857 y Fq(\))g(v)n(olume.)57
b(The)35 b(same)227 2976 y(conclusion)25 b(can)h(b)r(e)g(reac)n(hed)f
(from)h(the)h Fo(O)r Fq(\()p Fp(q)s(n)p Fq(\))g(v)n(olume)e(b)r(ound)i
(of)f(Dujmo)n(vi)n(\023)-39 b(c)25 b(and)h(W)-7 b(o)r(o)r(d)26
b([10)o(],)h(since)227 3096 y(trivially)38 b(ev)n(ery)f(graph)h(has)g
(a)h(\()p Fp(n)26 b Fo(\000)f Fq(1\)-queue)38 b(la)n(y)n(out.)70
b(Dyc)n(k)38 b Fn(et)i(al.)g Fq([14)o(])f(ask)n(ed)e(the)j(in)n
(teresting)227 3215 y(question:)c(what)27 b(is)f(the)h(minim)n(um)h(v)n
(olume)e(in)h(a)f(1-b)r(end)h(dra)n(wing)e(of)i Fp(K)2594
3227 y Fg(n)2639 3215 y Fq(?)37 b(The)26 b(b)r(est)i(kno)n(wn)e(upp)r
(er)227 3335 y(b)r(ound)j(at)g(the)h(time)f(w)n(as)f
Fo(O)r Fq(\()p Fp(n)1233 3305 y Fl(3)1271 3335 y Fq(\),)i(while)f
(\012\()p Fp(n)1716 3305 y Fl(2)1754 3335 y Fq(\))g(is)g(the)h(b)r(est)
f(kno)n(wn)f(lo)n(w)n(er)g(b)r(ound.)42 b(\(Bose)28 b
Fn(et)j(al.)f Fq([1])227 3454 y(pro)n(v)n(ed)c(that)i(all)f(p)r
(olyline)h(dra)n(wings)e(ha)n(v)n(e)g(\012\()p Fp(n)19
b Fq(+)f Fp(m)p Fq(\))27 b(v)n(olume.\))351 3574 y(In)37
b(this)f(pap)r(er)g(w)n(e)g(pro)n(v)n(e)f(t)n(w)n(o)g(results.)62
b(The)37 b(\014rst)f(concerns)f Fn(c)l(ol)t(line)l(ar)47
b Fq(p)r(olyline)36 b(dra)n(wings)f(in)227 3694 y(whic)n(h)29
b(all)h(the)g(v)n(ertices)e(are)h(in)h(a)f(single)g(line.)43
b(Let)30 b Fp(G)g Fq(b)r(e)g(a)f(graph,)g(and)h(let)g
Fp(\033)j Fq(b)r(e)d(a)f(linear)g(order)f(of)227 3813
y Fp(V)19 b Fq(\()p Fp(G)p Fq(\).)37 b(Let)26 b Fp(L)687
3825 y Fg(\033)732 3813 y Fq(\()p Fp(e)p Fq(\))g(and)g
Fp(R)1084 3825 y Fg(\033)1129 3813 y Fq(\()p Fp(e)p Fq(\))h(denote)f
(the)h(endp)r(oin)n(ts)f(of)g(eac)n(h)g(edge)f Fp(e)h
Fq(suc)n(h)g(that)h Fp(L)2997 3825 y Fg(\033)3041 3813
y Fq(\()p Fp(e)p Fq(\))c Fp(<)3232 3825 y Fg(\033)3300
3813 y Fp(R)3363 3825 y Fg(\033)3408 3813 y Fq(\()p Fp(e)p
Fq(\).)227 3933 y(F)-7 b(or)30 b(eac)n(h)g(v)n(ertex)g
Fp(v)i Fo(2)d Fp(V)19 b Fq(\()p Fp(G)p Fq(\),)33 b(the)e(set)g
Fo(f)p Fp(e)d Fo(2)g Fp(E)5 b Fq(\()p Fp(G)p Fq(\))30
b(:)f Fp(L)2037 3945 y Fg(\033)2081 3933 y Fq(\()p Fp(e)p
Fq(\))g Fo(\024)2278 3945 y Fg(\033)2351 3933 y Fp(v)i(<)2487
3945 y Fg(\033)2560 3933 y Fp(R)2623 3945 y Fg(\033)2668
3933 y Fq(\()p Fp(e)p Fq(\))p Fo(g)g Fq(is)g(called)f(the)h
Fn(cut)39 b Fq(in)227 4052 y Fp(\033)e Fq(at)d Fp(v)s
Fq(.)57 b(The)35 b Fn(cutwidth)41 b Fq(of)34 b Fp(\033)j
Fq(is)d(the)h(maxim)n(um)f(size)g(of)g(a)g(cut)g(in)h
Fp(\033)s Fq(.)57 b(The)34 b Fn(cutwidth)41 b Fq(of)34
b Fp(G)h Fq(is)f(the)227 4172 y(minim)n(um)24 b(cut)n(width)g(of)f(a)g
(linear)g(order)f(of)h Fp(V)c Fq(\()p Fp(G)p Fq(\).)37
b(Cut)n(width)24 b(is)f(a)g(widely)g(studied)h(graph)e(parameter)227
4291 y(\(see)27 b([6]\).)227 4467 y Ff(Theorem)j(1.)40
b Fn(L)l(et)29 b Fp(G)g Fn(b)l(e)g(a)h(gr)l(aph)g(with)g
Fp(n)f Fn(vertic)l(es)h(and)g(cutwidth)f Fp(c)p Fn(.)39
b(The)30 b(minimum)f(volume)g(for)h(a)227 4586 y Fq(1)p
Fn(-b)l(end)f(c)l(ol)t(line)l(ar)i(dr)l(awing)g(of)g
Fp(G)f Fn(is)g Fq(\002\()p Fp(cn)p Fq(\))p Fn(.)351 4762
y Fq(Theorem)h(1)g(represen)n(ts)g(a)g(qualitativ)n(e)g(impro)n(v)n
(emen)n(t)f(o)n(v)n(er)g(the)i Fo(O)r Fq(\()p Fp(nm)p
Fq(\))g(v)n(olume)f(b)r(ound)i(for)e(1-)227 4881 y(b)r(end)j(dra)n
(wings)f(b)n(y)h(Dujmo)n(vi)n(\023)-39 b(c)33 b(and)h(W)-7
b(o)r(o)r(d)34 b([10)o(].)57 b(Our)33 b(second)g(result)h(impro)n(v)n
(es)f(the)h(b)r(est)h(kno)n(wn)227 5001 y(upp)r(er)28
b(b)r(ound)g(for)f(1-b)r(end)g(dra)n(wings)f(of)i Fp(K)1637
5013 y Fg(n)1681 5001 y Fq(.)227 5176 y Ff(Theorem)46
b(2.)j Fn(Every)44 b(c)l(omplete)f(gr)l(aph)h Fp(K)1687
5188 y Fg(n)1731 5176 y Fn(,)i(and)d(henc)l(e)g(every)g
Fp(n)p Fn(-vertex)f(gr)l(aph,)47 b(has)d(a)e Fq(1)p Fn(-b)l(end)227
5296 y Fo(O)r Fq(\(log)15 b Fp(n)p Fq(\))j Fo(\002)g(O)r
Fq(\()p Fp(n)p Fq(\))h Fo(\002)f(O)r Fq(\()p Fp(n)1066
5265 y Fl(2)1104 5296 y Fp(=)c Fq(log)1267 5258 y Fl(3)1318
5296 y Fp(n)p Fq(\))30 b Fn(dr)l(awing)g(with)h Fo(O)r
Fq(\()p Fp(n)2071 5265 y Fl(3)2109 5296 y Fp(=)14 b Fq(log)2271
5258 y Fl(2)2322 5296 y Fp(n)p Fq(\))30 b Fn(volume.)351
5471 y Fq(It)f(is)g(not)g(straigh)n(tforw)n(ard)d(to)j(compare)e(the)i
(v)n(olume)g(b)r(ound)g(in)g(Theorem)f(2)h(with)g(the)g
Fo(O)r Fq(\()p Fp(k)s(q)s(m)p Fq(\))1860 5707 y(2)p eop
%%Page: 3 3
3 2 bop 227 291 a Fq(b)r(ound)26 b(b)n(y)f(Dujmo)n(vi)n(\023)-39
b(c)24 b(and)i(W)-7 b(o)r(o)r(d)25 b([10)o(])h(for)f
Fp(k)s Fq(-colourable)e Fp(q)s Fq(-queue)i(graphs)f(\(see)i(T)-7
b(able)25 b(1\).)36 b(Ho)n(w)n(ev)n(er,)227 411 y(since)25
b Fp(k)h Fo(\024)d Fq(4)p Fp(q)29 b Fq(and)c Fp(m)e Fo(\024)g
Fq(2)p Fp(q)s(n)i Fq(\(see)h([13)o(]\),)h(w)n(e)e(ha)n(v)n(e)g(that)h
Fo(O)r Fq(\()p Fp(k)s(q)s(m)p Fq(\))e Fo(2)g(O)r Fq(\()p
Fp(q)2591 381 y Fl(3)2629 411 y Fp(n)p Fq(\),)i(and)g(th)n(us)g(the)g
Fo(O)r Fq(\()p Fp(k)s(q)s(m)p Fq(\))227 530 y(b)r(ound)i(b)n(y)g(Dujmo)
n(vi)n(\023)-39 b(c)27 b(and)h(W)-7 b(o)r(o)r(d)28 b([10)o(])h(is)e(no)
h(more)f(than)i(the)f(b)r(ound)g(in)h(Theorem)e(2)h(whenev)n(er)f(the)
227 650 y(graph)h(has)g(a)h Fo(O)r Fq(\(\()p Fp(n=)14
b Fq(log)g Fp(n)p Fq(\))1125 620 y Fl(2)p Fg(=)p Fl(3)1229
650 y Fq(\)-queue)29 b(la)n(y)n(out.)40 b(On)29 b(the)g(other)f(hand,)i
Fp(k)s(q)s(m)25 b Fo(\025)f Fp(m)2897 620 y Fl(2)2935
650 y Fp(=n)p Fq(.)40 b(So)29 b(for)f(dense)227 770 y(graphs)21
b(with)j(\012\()p Fp(n)817 739 y Fl(2)854 770 y Fq(\))f(edges)g(the)g
Fo(O)r Fq(\()p Fp(k)s(q)s(m)p Fq(\))h(b)r(ound)f(b)n(y)f(Dujmo)n(vi)n
(\023)-39 b(c)23 b(and)f(W)-7 b(o)r(o)r(d)23 b([10])g(is)f(cubic)i
(\(in)f Fp(n)p Fq(\),)h(and)227 889 y(the)k(b)r(ound)h(in)f(Theorem)f
(2)h(is)g(necessarily)e(smaller.)38 b(In)28 b(particular,)f(Theorem)g
(2)h(pro)n(vides)e(a)i(partial)227 1009 y(solution)j(to)h(the)g(ab)r(o)
n(v)n(e-men)n(tioned)e(op)r(en)h(problem)g(of)h(Dyc)n(k)g
Fn(et)h(al.)g Fq([14)o(])f(regarding)d(the)j(minim)n(um)227
1128 y(v)n(olume)27 b(of)g(a)g(1-b)r(end)h(dra)n(wing)e(of)i
Fp(K)1433 1140 y Fg(n)1477 1128 y Fq(.)227 1433 y Fr(2)135
b(Pro)t(of)44 b(of)i(Theorem)f(1)227 1634 y Fq(First)27
b(w)n(e)g(pro)n(v)n(e)f(the)i(lo)n(w)n(er)e(b)r(ound)i(in)g(Theorem)f
(1.)227 1820 y Ff(Lemma)33 b(1.)43 b Fn(L)l(et)32 b Fp(G)i
Fn(b)l(e)e(a)i(gr)l(aph)g(with)f Fp(n)g Fn(vertic)l(es)g(and)h
(cutwidth)f Fp(c)p Fn(.)48 b(Then)33 b(every)h Fq(1)p
Fn(-b)l(end)e(c)l(ol)t(line)l(ar)227 1940 y(dr)l(awing)f(of)f
Fp(G)g Fn(has)h(at)e(le)l(ast)h Fp(cn=)p Fq(2)f Fn(volume.)227
2126 y(Pr)l(o)l(of.)43 b Fq(Consider)26 b(a)h(1-b)r(end)h(collinear)e
(dra)n(wing)g(of)h Fp(G)h Fq(in)g(an)f Fp(X)e Fo(\002)17
b Fp(Y)37 b Fo(\002)18 b Fp(Z)33 b Fq(b)r(ounding)28
b(b)r(o)n(x.)36 b(Let)27 b Fp(L)h Fq(b)r(e)227 2245 y(the)e(line)g(con)
n(taining)f(the)i(v)n(ertices.)35 b(If)27 b Fp(L)e Fq(is)h(not)g(con)n
(tained)g(in)g(a)g(grid-plane,)f(then)h Fp(X)r(;)14 b(Y)5
b(;)14 b(Z)28 b Fo(\025)23 b Fp(n)p Fq(,)j(and)227 2365
y(the)i(v)n(olume)f(is)g(at)h(least)f Fp(n)1085 2335
y Fl(3)1145 2365 y Fo(\025)c Fp(cn)p Fq(.)351 2485 y(No)n(w)30
b(assume,)h(without)g(loss)f(of)h(generalit)n(y)-7 b(,)30
b(that)h Fp(L)f Fq(is)h(con)n(tained)f(in)h(the)g Fp(Z)j
Fq(=)27 b(0)k(plane.)46 b(Let)30 b Fp(\033)227 2604 y
Fq(b)r(e)e(a)g(linear)f(order)f(of)i(the)g(v)n(ertices)f(determined)h
(b)n(y)g Fp(L)p Fq(.)37 b(Let)28 b Fp(B)k Fq(b)r(e)d(the)f(set)g(of)g
(b)r(ends)g(corresp)r(onding)227 2724 y(to)h(the)g(edges)g(in)g(the)h
(largest)d(cut)j(in)f Fp(\033)s Fq(.)42 b(Then)30 b Fo(j)p
Fp(B)t Fo(j)c(\025)f Fp(c)p Fq(.)41 b(F)-7 b(or)29 b(ev)n(ery)f(line)h
Fp(L)2703 2693 y Fe(0)2755 2724 y Fq(parallel)f(to)h
Fp(L)p Fq(,)g(there)g(is)227 2843 y(at)e(most)h(one)f(b)r(end)h(in)g
Fp(B)k Fq(on)27 b Fp(L)1253 2813 y Fe(0)1276 2843 y Fq(,)h(as)f
(otherwise)f(there)i(is)f(a)g(crossing.)351 2963 y(First)j(supp)r(ose)f
(that)h Fp(L)f Fq(is)g(axis-parallel.)40 b(Without)30
b(loss)f(of)g(generalit)n(y)-7 b(,)29 b Fp(L)g Fq(is)g(the)h
Fp(X)7 b Fq(-axis.)41 b(Then)227 3082 y Fp(X)29 b Fo(\025)23
b Fp(n)p Fq(.)36 b(The)25 b(gridp)r(oin)n(ts)f(in)h(the)g(b)r(ounding)g
(b)r(o)n(x)g(can)g(b)r(e)g(co)n(v)n(ered)e(b)n(y)i Fp(Y)18
b(Z)31 b Fq(lines)25 b(parallel)f(to)h Fp(L)p Fq(.)35
b(Th)n(us)227 3202 y Fp(Y)18 b(Z)29 b Fo(\025)23 b(j)p
Fp(B)t Fo(j)g(\025)g Fp(c)p Fq(,)k(and)h(the)g(v)n(olume)f
Fp(X)7 b(Y)18 b(Z)28 b Fo(\025)23 b Fp(cn)p Fq(.)351
3321 y(No)n(w)k(supp)r(ose)f(that)i Fp(L)e Fq(is)h(not)g
(axis-parallel.)34 b(Th)n(us)27 b Fp(X)i Fo(\025)23 b
Fp(n)k Fq(and)f Fp(Y)42 b Fo(\025)23 b Fp(n)p Fq(.)36
b(The)27 b(gridp)r(oin)n(ts)f(in)i(the)227 3441 y(b)r(ounding)h(b)r(o)n
(x)f(can)g(b)r(e)h(co)n(v)n(ered)e(b)n(y)i Fp(Z)6 b Fq(\()p
Fp(X)25 b Fq(+)19 b Fp(Y)g Fq(\))29 b(lines)g(parallel)e(to)i
Fp(L)p Fq(.)40 b(Th)n(us)28 b Fp(Z)6 b Fq(\()p Fp(X)26
b Fq(+)18 b Fp(Y)h Fq(\))25 b Fo(\025)g(j)p Fp(B)t Fo(j)g(\025)g
Fp(c)p Fq(,)227 3560 y(and)i(the)h(v)n(olume)f Fp(X)7
b(Y)18 b(Z)29 b Fo(\025)22 b Fp(X)7 b(Y)32 b(c=)p Fq(\()p
Fp(X)25 b Fq(+)18 b Fp(Y)g Fq(\))24 b Fo(\025)e Fp(cn=)p
Fq(2.)p 3473 3560 4 57 v 3477 3508 50 4 v 3477 3560 V
3526 3560 4 57 v 351 3746 a(T)-7 b(o)31 b(pro)n(v)n(e)f(the)i(upp)r(er)
g(b)r(ound)g(in)f(Theorem)g(1)g(w)n(e)g(will)h(need)g(the)g(follo)n
(wing)e(lemma,)j(whic)n(h)e(is)g(a)227 3866 y(sligh)n(t)e
(generalisation)e(of)j(a)f(w)n(ell)g(kno)n(wn)g(result.)43
b(\(F)-7 b(or)29 b(example,)h(P)n(ac)n(h)e Fn(et)j(al.)g
Fq([19)o(])f(pro)n(v)n(ed)e(the)i(case)227 3986 y Fp(X)f
Fq(=)23 b Fp(Y)18 b Fq(\).)37 b(W)-7 b(e)27 b(sa)n(y)e(t)n(w)n(o)h
(gridp)r(oin)n(ts)f Fp(v)30 b Fq(and)c Fp(w)j Fq(in)e(the)f(plane)h
(are)e Fn(visible)34 b Fq(if)27 b(the)g(segmen)n(t)f
Fp(v)s(w)j Fq(con)n(tains)227 4105 y(no)e(other)g(gridp)r(oin)n(t.)227
4291 y Ff(Lemma)j(2.)41 b Fn(The)31 b(numb)l(er)e(of)i(gridp)l(oints)h
Fo(f)p Fq(\()p Fp(x;)14 b(y)s Fq(\))24 b(:)f(1)h Fo(\024)f
Fp(x)h Fo(\024)g Fp(X)r(;)14 b Fq(1)23 b Fo(\024)g Fp(y)j
Fo(\024)e Fp(Y)18 b Fo(g)30 b Fn(that)g(ar)l(e)h(visible)g(fr)l(om)227
4411 y(the)f(origin)h(is)f(at)f(le)l(ast)h Fq(3)p Fp(X)7
b(Y)i(=)p Fq(2)p Fp(\031)1294 4380 y Fl(2)1330 4411 y
Fn(.)227 4597 y(Pr)l(o)l(of.)43 b Fq(Without)30 b(loss)e(of)h
(generalit)n(y)f Fp(X)k Fo(\024)25 b Fp(Y)19 b Fq(.)41
b(Let)29 b Fp(N)38 b Fq(b)r(e)30 b(the)f(desired)g(n)n(um)n(b)r(er)g
(of)g(gridp)r(oin)n(ts.)41 b(F)-7 b(or)227 4716 y(eac)n(h)27
b(1)d Fo(\024)g Fp(x)h Fo(\024)f Fp(X)7 b Fq(,)28 b(let)h
Fp(N)1045 4728 y Fg(x)1114 4716 y Fq(b)r(e)g(the)g(n)n(um)n(b)r(er)f
(of)g(gridp)r(oin)n(ts)g(\()p Fp(x;)14 b(y)s Fq(\))29
b(that)g(are)e(visible)h(from)g(the)h(origin,)227 4836
y(suc)n(h)e(that)h(1)23 b Fo(\024)h Fp(y)i Fo(\024)d
Fp(Y)c Fq(.)37 b(A)28 b(gridp)r(oin)n(t)g(\()p Fp(x;)14
b(y)s Fq(\))28 b(is)g(visible)g(from)f(the)i(origin)d(if)j(and)e(only)h
(if)g Fp(x)h Fq(and)e Fp(y)k Fq(are)227 4955 y(coprime.)47
b(Let)31 b Fp(\036)p Fq(\()p Fp(x)p Fq(\))i(b)r(e)e(the)h(n)n(um)n(b)r
(er)f(of)g(p)r(ositiv)n(e)g(in)n(tegers)f(less)h(than)g
Fp(x)h Fq(that)f(are)f(coprime)h(with)g Fp(x)227 5075
y Fq(\(Euler's)c Fp(\036)h Fq(function\).)38 b(Th)n(us)27
b Fp(N)1282 5087 y Fg(x)1346 5075 y Fo(\025)c Fp(\036)p
Fq(\()p Fp(x)p Fq(\),)29 b(and)1217 5339 y Fp(N)55 b
Fq(=)1481 5235 y Fg(X)1451 5260 y Fd(X)1450 5436 y Fg(x)p
Fl(=1)1586 5339 y Fp(N)1653 5351 y Fg(x)1740 5339 y Fo(\025)1882
5235 y Fg(X)1852 5260 y Fd(X)1851 5436 y Fg(x)p Fl(=1)1986
5339 y Fp(\036)p Fq(\()p Fp(x)p Fq(\))48 b Fo(\031)2315
5283 y Fq(3)p Fp(X)2433 5252 y Fl(2)p 2315 5320 155 4
v 2348 5396 a Fp(\031)2398 5372 y Fl(2)2520 5339 y Fp(:)1860
5707 y Fq(3)p eop
%%Page: 4 4
4 3 bop 227 291 a Fq(\(See)29 b([16)o(])g(for)f(a)g(pro)r(of)g(that)
1163 229 y Fd(P)1251 250 y Fg(X)1251 316 y(x)p Fl(=1)1390
291 y Fp(\036)p Fq(\()p Fp(x)p Fq(\))f Fo(\031)d Fq(3)p
Fp(X)1784 261 y Fl(2)1820 291 y Fp(=\031)1912 261 y Fl(2)1949
291 y Fq(.\))29 b(If)h Fp(X)h Fo(\025)24 b Fp(Y)9 b(=)p
Fq(2,)29 b(then)g Fp(N)k Fo(\025)25 b Fq(3)p Fp(X)7 b(Y)i(=)p
Fq(2)p Fp(\031)3189 261 y Fl(2)3225 291 y Fq(,)29 b(and)f(w)n(e)227
411 y(are)d(done.)36 b(No)n(w)25 b(assume)g(that)i Fp(Y)41
b Fo(\025)23 b Fq(2)p Fp(X)7 b Fq(.)35 b(If)27 b Fp(x)f
Fq(and)g Fp(y)i Fq(are)d(coprime,)h(then)g Fp(x)h Fq(and)f
Fp(y)18 b Fq(+)c Fp(x)27 b Fq(are)e(coprime.)227 530
y(Th)n(us)i Fp(N)504 542 y Fg(x)569 530 y Fo(\025)22
b(b)p Fp(Y)9 b(=x)p Fo(c)19 b(\001)f Fp(\036)p Fq(\()p
Fp(x)p Fq(\).)39 b(Th)n(us,)586 794 y Fp(N)55 b Fo(\025)850
691 y Fg(X)820 715 y Fd(X)819 891 y Fg(x)p Fl(=1)954
677 y Fd(\026)1013 738 y Fp(Y)p 1013 775 67 4 v 1023
851 a(x)1089 677 y Fd(\027)1156 794 y Fo(\001)19 b Fp(\036)p
Fq(\()p Fp(x)p Fq(\))47 b Fo(\025)1516 677 y Fd(\022)1587
738 y Fp(Y)37 b Fo(\000)18 b Fp(X)p 1587 775 244 4 v
1671 851 a(X)1841 677 y Fd(\023)1947 691 y Fg(X)1916
715 y Fd(X)1916 891 y Fg(x)p Fl(=1)2051 794 y Fp(\036)p
Fq(\()p Fp(x)p Fq(\))48 b Fo(\031)2379 738 y Fq(3\()p
Fp(Y)37 b Fo(\000)18 b Fp(X)7 b Fq(\))p Fp(X)p 2379 775
425 4 v 2548 851 a(\031)2598 827 y Fl(2)2860 794 y Fo(\025)2981
738 y Fq(3)p Fp(X)g(Y)p 2981 775 184 4 v 3008 851 a Fq(2)p
Fp(\031)3100 827 y Fl(2)p 3473 1047 4 57 v 3477 994 50
4 v 3477 1047 V 3526 1047 4 57 v 351 1233 a Fq(No)n(w)27
b(w)n(e)h(pro)n(v)n(e)e(the)i(follo)n(wing)e(strengthening)h(of)h(the)g
(upp)r(er)f(b)r(ound)h(in)g(Theorem)f(1.)227 1419 y Ff(Lemma)h(3.)40
b Fn(L)l(et)28 b Fp(G)h Fn(b)l(e)g(a)g(gr)l(aph)h(with)f
Fp(n)f Fn(vertic)l(es)i(and)f(cutwidth)g Fp(c)p Fn(.)38
b(F)-6 b(or)29 b(al)t(l)h(inte)l(gers)e Fp(X)i Fo(\025)22
b Fq(1)p Fn(,)29 b Fp(G)g Fn(has)227 1538 y(a)h Fq(1)p
Fn(-b)l(end)f(c)l(ol)t(line)l(ar)i Fp(X)25 b Fo(\002)18
b(O)r Fq(\()p Fp(c=X)7 b Fq(\))18 b Fo(\002)g Fp(n)29
b Fn(dr)l(awing)i(with)g(the)e(vertic)l(es)i(on)e(the)h
Fp(Z)6 b Fn(-axis.)39 b(The)30 b(volume)g(is)227 1658
y Fo(O)r Fq(\()p Fp(cn)p Fq(\))p Fn(.)227 1844 y(Pr)l(o)l(of.)43
b Fq(Let)34 b Fp(\033)j Fq(b)r(e)d(a)f(v)n(ertex)g(ordering)f(of)h
Fp(G)h Fq(with)g(cut)n(width)h Fp(c)p Fq(.)54 b(F)-7
b(or)33 b(all)h(pairs)e(of)i(distinct)g(edges)f Fp(e)227
1963 y Fq(and)c Fp(f)9 b Fq(,)29 b(sa)n(y)e Fp(e)e Fo(\036)g
Fp(f)38 b Fq(whenev)n(er)28 b Fp(R)1298 1975 y Fg(\033)1343
1963 y Fq(\()p Fp(e)p Fq(\))d Fo(\024)1536 1975 y Fg(\033)1606
1963 y Fp(L)1663 1975 y Fg(\033)1707 1963 y Fq(\()p Fp(f)9
b Fq(\).)41 b(Then)29 b Fo(\026)g Fq(is)g(a)f(partial)g(order)g(on)g
Fp(E)5 b Fq(\()p Fp(G)p Fq(\),)31 b(where)d(an)227 2083
y(an)n(tic)n(hain)i(in)h Fo(\026)f Fq(is)h(a)f(cut)h(in)g
Fp(\033)s Fq(.)47 b(By)30 b(Dilw)n(orth's)g(Theorem)g([7],)h(there)g
(is)f(a)h(partition)f(of)g Fp(E)5 b Fq(\()p Fp(G)p Fq(\))32
b(in)n(to)227 2203 y(c)n(hains)f Fp(E)544 2215 y Fl(1)582
2203 y Fp(;)14 b(E)680 2215 y Fl(2)717 2203 y Fp(;)g(:)g(:)g(:)g(;)g(E)
963 2215 y Fg(c)997 2203 y Fq(,)33 b(suc)n(h)f(that)h(eac)n(h)e
Fp(E)1682 2215 y Fg(i)1741 2203 y Fq(=)g(\()p Fp(e)1908
2215 y Fg(i;)p Fl(1)1988 2203 y Fp(;)14 b(e)2064 2215
y Fg(i;)p Fl(2)2144 2203 y Fp(;)g(:)g(:)g(:)g(;)g(e)2368
2215 y Fg(i;k)2446 2223 y Fc(i)2476 2203 y Fq(\))33 b(and)f
Fp(R)2770 2215 y Fg(\033)2815 2203 y Fq(\()p Fp(e)2886
2215 y Fg(i;j)2964 2203 y Fq(\))f Fo(\024)3092 2215 y
Fg(\033)3167 2203 y Fp(L)3224 2215 y Fg(\033)3268 2203
y Fq(\()p Fp(e)3339 2215 y Fg(i;j)s Fl(+1)3502 2203 y
Fq(\))227 2322 y(for)c(all)g(1)c Fo(\024)f Fp(j)28 b
Fo(\024)23 b Fp(k)814 2334 y Fg(i)860 2322 y Fo(\000)18
b Fq(1.)351 2442 y(By)33 b(Lemma)g(2)g(with)h Fp(Y)51
b Fq(=)32 b Fo(d)p Fq(4)p Fp(\031)1384 2412 y Fl(2)1421
2442 y Fp(c=)p Fq(3)p Fp(X)7 b Fo(e)p Fq(,)33 b(there)h(is)f(a)g(set)g
Fp(S)k Fq(=)32 b Fo(f)p Fq(\()p Fp(x)2534 2454 y Fg(i)2562
2442 y Fp(;)14 b(y)2640 2454 y Fg(i)2667 2442 y Fq(\))33
b(:)g(1)f Fo(\024)g Fp(i)g Fo(\024)h Fp(c;)14 b Fq(1)31
b Fo(\024)i Fp(x)3409 2454 y Fg(i)3469 2442 y Fo(\024)227
2561 y Fp(X)r(;)14 b Fq(1)33 b Fo(\024)g Fp(y)549 2573
y Fg(i)611 2561 y Fo(\024)g Fp(Y)19 b Fo(g)34 b Fq(of)g(gridp)r(oin)n
(ts)f(that)i(are)e(visible)h(from)g(the)g(origin.)56
b(P)n(osition)33 b(the)h Fp(i)p Fq(th)g(v)n(ertex)g(in)227
2681 y Fp(\033)f Fq(at)d(\(0)p Fp(;)14 b Fq(0)p Fp(;)g(i)p
Fq(\))29 b(on)g(the)h Fp(Z)6 b Fq(-axis,)29 b(and)h(p)r(osition)g(the)g
(b)r(end)g(for)g(eac)n(h)f(edge)g Fp(e)2622 2693 y Fg(i;j)2730
2681 y Fq(at)h(\()p Fp(x)2913 2693 y Fg(i)2941 2681 y
Fp(;)14 b(y)3019 2693 y Fg(i)3046 2681 y Fp(;)g(j)5 b
Fq(\).)44 b(Edges)29 b(in)227 2800 y(distinct)e(c)n(hains)g(are)e(con)n
(tained)i(in)g(distinct)g(planes)g(that)g(only)g(in)n(tersect)f(in)h
(the)g Fp(Z)6 b Fq(-axis.)36 b(Th)n(us)26 b(suc)n(h)227
2920 y(edges)k(do)h(not)h(cross.)46 b(Edges)31 b(within)h(eac)n(h)e(c)n
(hain)h Fp(E)1952 2932 y Fg(i)2011 2920 y Fq(do)g(not)h(cross)e(since)h
(no)g(t)n(w)n(o)f(edges)h(in)h Fp(E)3364 2932 y Fg(i)3423
2920 y Fq(are)227 3039 y(nested)e(or)f(crossing)f(in)i
Fp(\033)s Fq(,)h(and)e(the)i Fp(Z)6 b Fq(-co)r(ordinates)27
b(of)j(the)g(b)r(ends)g(of)g(the)g(edges)g(in)g Fp(E)3063
3051 y Fg(i)3120 3039 y Fq(agrees)e(with)227 3159 y(the)h(order)e(of)i
(their)g(endp)r(oin)n(ts)g(on)g(the)g Fp(Z)6 b Fq(-axis,)28
b(as)g(illustrated)g(in)h(Figure)g(1.)40 b(The)29 b(b)r(ounding)g(b)r
(o)n(x)f(is)227 3279 y Fp(X)d Fo(\002)18 b(d)p Fq(4)p
Fp(\031)533 3248 y Fl(2)569 3279 y Fp(c=)p Fq(3)p Fp(X)7
b Fo(e)17 b(\002)h Fp(n)p Fq(,)28 b(since)f(the)h(n)n(um)n(b)r(er)f(of)
h(edges)f(in)h(a)f(single)g(c)n(hain)g(is)h(at)f(most)g
Fp(n)19 b Fo(\000)f Fq(1.)p 3473 3279 V 3477 3226 50
4 v 3477 3279 V 3526 3279 4 57 v 351 3464 a(The)28 b(constan)n(ts)f(in)
g(Lemma)h(3)f(can)g(b)r(e)h(t)n(w)n(eak)n(ed)e(as)h(follo)n(ws.)227
3650 y Ff(Lemma)f(4.)39 b Fn(L)l(et)27 b Fp(G)h Fn(b)l(e)f(a)h(gr)l
(aph)h(with)f Fp(n)f Fn(vertic)l(es)h(and)g(cutwidth)g
Fp(c)p Fn(.)38 b(Then)28 b Fp(G)f Fn(has)i(a)e Fq(1)p
Fn(-b)l(end)g(c)l(ol)t(line)l(ar)227 3770 y Fq(3)18 b
Fo(\002)g(d)p Fq(\()p Fp(c)g Fo(\000)g Fq(2\))p Fp(=)p
Fq(2)p Fo(e)g(\002)g Fp(n)29 b Fn(dr)l(awing.)40 b(The)31
b(volume)f(is)g(at)g(most)f Fq(3\()p Fp(c)18 b Fo(\000)g
Fq(1\))p Fp(n=)p Fq(2)p Fn(.)227 3956 y(Pr)l(o)l(of.)43
b Fq(Let)35 b Fp(S)41 b Fq(=)35 b Fo(f)p Fq(\()p Fo(\000)p
Fq(1)p Fp(;)14 b Fq(0\))p Fp(;)g Fq(\(1)p Fp(;)g Fq(0\))p
Fo(g)21 b([)j(f)p Fq(\()p Fp(x;)14 b(y)s Fq(\))35 b(:)h
Fp(y)i Fo(2)f(f\000)p Fq(1)p Fp(;)14 b Fq(1)p Fo(g)p
Fp(;)g Fo(\000)p Fq(1)32 b Fo(\024)j Fp(x)h Fo(\024)f(d)p
Fq(\()p Fp(c)24 b Fo(\000)f Fq(6\))p Fp(=)p Fq(2)p Fo(eg)p
Fq(.)58 b(Then)35 b Fp(S)227 4076 y Fq(consists)26 b(of)g(at)h(least)f
Fp(c)h Fq(gridp)r(oin)n(ts)f(that)h(are)f(visible)g(from)h(the)g
(origin.)35 b(The)27 b(result)f(follo)n(ws)g(from)h(the)227
4195 y(pro)r(of)g(of)g(Lemma)h(3.)p 3473 4195 V 3477
4142 50 4 v 3477 4195 V 3526 4195 4 57 v 351 4381 a(Since)g(the)g(cut)n
(width)g(of)g Fp(K)1225 4393 y Fg(n)1297 4381 y Fq(is)g
Fp(n)1431 4351 y Fl(2)1468 4381 y Fp(=)p Fq(4)e(w)n(e)i(ha)n(v)n(e:)227
4567 y Ff(Corollary)38 b(1.)43 b Fn(The)35 b(minimum)e(volume)h(for)h
(a)f Fq(1)p Fn(-b)l(end)f(c)l(ol)t(line)l(ar)i(dr)l(awing)g(of)f(the)g
(c)l(omplete)h(gr)l(aph)227 4687 y Fp(K)298 4699 y Fg(n)371
4687 y Fn(is)29 b Fq(\002\()p Fp(n)606 4656 y Fl(3)643
4687 y Fq(\))p Fn(.)39 b(F)-6 b(or)29 b(al)t(l)h Fp(X)f
Fo(\025)23 b Fq(1)p Fn(,)28 b Fp(K)1363 4699 y Fg(n)1437
4687 y Fn(has)h(a)g Fq(1)p Fn(-b)l(end)g(c)l(ol)t(line)l(ar)h
Fp(X)22 b Fo(\002)16 b(O)r Fq(\()p Fp(n)2574 4656 y Fl(2)2612
4687 y Fp(=X)7 b Fq(\))15 b Fo(\002)h Fp(n)29 b Fn(dr)l(awing)g(with)h
(the)227 4806 y(vertic)l(es)e(on)f(the)h Fp(Z)6 b Fn(-axis.)37
b(F)-6 b(urthermor)l(e,)29 b Fp(K)1647 4818 y Fg(n)1719
4806 y Fn(has)f(a)g Fq(1)p Fn(-b)l(end)f(c)l(ol)t(line)l(ar)i
Fq(3)14 b Fo(\002)g(d)p Fp(n)2751 4776 y Fl(2)2786 4806
y Fp(=)p Fq(8)p Fo(e)g(\002)g Fp(n)25 b Fn(dr)l(awing)j(with)227
4926 y(volume)i(at)g(most)f Fq(3)p Fp(n)902 4896 y Fl(3)939
4926 y Fp(=)p Fq(8)p Fn(.)p 3472 4926 4 58 v 3476 4872
51 4 v 3476 4926 V 3526 4926 4 58 v 1860 5707 a Fq(4)p
eop
%%Page: 5 5
5 4 bop 443 2586 a @beginspecial 71 @llx 440 @lly 416
@urx 721 @ury 3450 @rwi @setspecial
%%BeginDocument: CutwidthConstruction.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: CutwidthConstruction.dvi
%%BoundingBox: 71 440 416 721
%%DocumentFonts: CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf -E -o CutwidthConstruction.eps
%+ CutwidthConstruction.dvi
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2004.04.26:1744
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro
%!
% PostScript prologue for pst-grad.tex.
% Version 97, 93/05/12
% For distribution, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.
%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).
%
% Syntax:
%   R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill

/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBlue ED
  /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
  /FirstRed ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
  LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
  setrgbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
  } if
  MidLine NumLines lt
  {
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat
  } if
} def
/GradientLoop {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Red Green Blue setrgbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Blue Blue BlueIncrement add def
  /Green Green GreenIncrement add def
  /Red Red RedIncrement add def
} def

end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro
%!
% PostScript prologue for pst-coil.tex.
% Version 97 patch 1, 98/06/02
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { /t ED t sin AspectSin mul t 180 div AspectCos mul add t cos
lineto } def
/Coil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /ArmB ED /ArmA ED
/h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED x0 y0 translate y1 y0 sub x1 x0
sub 2 copy Pyth /TotalLength ED Atan rotate /BeginAngle ArmA AspectCos
Div w h mul Div 360 mul def /EndAngle TotalLength ArmB sub AspectCos Div
w h mul Div 360 mul def 1 0 0 0 ArrowA ArmA 0 lineto /mtrx CM def w h
mul 2 Div w 2 Div scale BeginAngle Inc EndAngle { CoilLoop } for
EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
TotalLength 0 ArrowB lineto
pop pop pop pop } def
% DG/SR modification end
/AltCoil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /h ED /w ED
/EndAngle ED /BeginAngle ED /mtrx CM def w h mul 2 Div w 2 Div scale
BeginAngle sin AspectSin mul BeginAngle 180 div AspectCos mul add
BeginAngle cos /lineto load stopped { moveto } if BeginAngle Inc
EndAngle { CoilLoop } for EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { /ArmB ED /ArmA ED 2 div /w ED w mul /h ED /y1 ED /x1 ED /y0 ED
/x0 ED x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth /TotalLength ED
Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
sub 2 div dup ArmA add /ArmA ED ArmB add /ArmB ED /x ArmB h 2 div add
def mark 0 0 ArmB 0 n { x w /w w neg def /x x h add def } repeat
TotalLength ArmA sub 0 TotalLength 0 } def
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro
%!
% PostScript header file pst-text.pro
% Version 97, 94/04/20
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc
{
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow
{ /String exch def
  /CharCount 0 def
  String length
  { String CharCount 1 getinterval ShowChar
    /CharCount CharCount 1 add def
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar
{ /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
    currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def

end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667094CD8DC214A666D7D12CB23EC030318B42E3091E5A867D072CEE3D
BE9E98C9B0C54ABC81B4D207D46C48B062DBE9F0CD5E25E7F3C5447C8B33EF86
26F04E095D54F911643F8593AF49FF7B1669C41BB5076092C883F93E682FBBD5
3ACE18C5CAE357DB53344A9BC9FA4FB31FA464FAFE4F5D56052F19F2A32BC638
5FE231A386391AB66D9B1912E2C3E7AED17BE4C10CDA2955A9D532BA9A64D02B
83AE20EA16A8AD77A06AB5BA89BFA820541DEFBAEE72C59F70706BDCB62C881F
0A2C95AFE1240870849C0EF5AE45A7FCE3B3942C6A67E04FB8EE3434195106B0
88087800EBA49F9E6D728DDDDA0516031C745DE8336CDB2E0DA253486ED48766
7A7314FFD6919392EF8D622C1EC38B6BAA68BEA8992F568FBD558F0D6BAAFE31
ED963F0E22A0146BDC785CC9ADD2CDC429C9FD105CA75F7CF16BCDF74ED3194D
0F40DF7D8383053902ABE5039E2852FC9F2DC8B30C1FC55E3234BBBB92C38996
0A8E2251B1528B628C6A1720C68E0095426BD002C3FC62EA940B2B95ACD4B3F2
F45AF3E4BB0ACCE7B76998945F25E2D6D8B9D8BB94530B1DC6700137FA6189A4
3FF8D815BF6C546181BFB5C9AC0CB2C2FE2A346FBE404694C8CD7CBF69B33AC0
5031DA15D8A06B49B50F53D6306E90A947C93D1A94417971863503AC15DC83D1
E440EA1FA7138439B91DDB77AABFF9A31E23CE92DBCCC96C6EF89AD615694AD1
63EE701D07305F8FE1470B28DFD788C4313BA7A5036E00F532E35E53F32D9852
43DFFFD866D73DC523A766F7F8A111C7669839B79DCE87D9004AB4DB73E55161
2A445891B51A590B654213C254E7EFC1D19852CB2F402423120823E937096F4D
CCAFE83466DDCAEF080BDAC121218A83CB9F36CA971748E5734423B6647E9A95
379B4D8434929BFAE47F22040F501A62C701D9A0772B8AEF88635B93696810A5
D36359C4E3F708BC77BFC1246559059027F0919D5015D710313380CEA6B79008
2A55CA4B0F4C51B06CE6738CDF8A88ACC6F8B4D46EDB6950B4677C5C1C55D8A5
131135808AE6444699889B9A29BD7199919FBECD82D08A9C1631E5DC4D59F573
B882A106BEA3BCEF171F1DBAC4DC29E3D2B628B8BEF7252CEA2635B00958882B
C0DA5934FB69CB338EAF4CE8993986E013BFEEDECD3CBDC4043C601E3B9CFBD0
B233A038C8F653F506AE56219F5D77F45E431883D60F11A70A692315E72E787A
DB5B321BE1F08ABCDFE92064AA974F9B1121D5D0BF3A26F3C042233EE48D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 8000 8000
(CutwidthConstruction.dvi) @start /Fa 165[756 643 917
88[{}3 1106.96 /CMMI10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin

%%EndSetup
1 0 bop 0 30992 a
 tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 30992 a 0 30992 38165 30993 v 38165
30992 a
 currentpoint grestore moveto
 38165 30992 a 1260 30488 a
 tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 22.76219 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 45.52438 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 68.28658 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 91.04877 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 113.81096 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 136.57315 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 159.33534 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 182.09753 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 91.04877 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 182.09753 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 22.76219 22.76219 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 182.09753 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 45.52438 45.52438 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 182.09753 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 68.28658 68.28658 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 182.09753 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 91.04877 91.04877 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 182.09753 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 273.1463 91.04877 91.04877  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 182.09753 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 91.04877 273.1463 0.0 182.09753  /Lineto /lineto
load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 68.28658 45.52438 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .75  setgray 5.0 3.0 0 0 add DashLine
 grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 68.28658 227.62192 68.28658 45.52438  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 5.0 3.0 0 0 add DashLine
 grestore gsave grestore end
 
@endspecial 1260 30488 a
 tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1260
30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 22.76219 68.28658 91.04877 0.0 0.0  /Lineto
/lineto load def false Line  gsave 0.8 SLW 1 0 0  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 1260 30488
a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 0.0 22.76219 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 22.76219 68.28658 91.04877 0.0 0.0  /Lineto
/lineto load def false Line  gsave 0.8 SLW 1 0 0  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 0.0 45.52438 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 22.76219 68.28658 91.04877 0.0 0.0  /Lineto
/lineto load def false Line  gsave 0.8 SLW 1 0 0  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 0.0 68.28658 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 22.76219 68.28658 91.04877 0.0 0.0  /Lineto
/lineto load def false Line  gsave 0.8 SLW 1 0 0  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 0.0 91.04877 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 22.76219 68.28658 91.04877 0.0 0.0  /Lineto
/lineto load def false Line  gsave 0.8 SLW 1 0 0  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 0.0 113.81096 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 22.76219 68.28658 91.04877 0.0 0.0  /Lineto
/lineto load def false Line  gsave 0.8 SLW 1 0 0  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 0.0 136.57315 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1 0 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 22.76219 68.28658 91.04877 0.0 0.0  /Lineto
/lineto load def false Line  gsave 0.8 SLW 1 0 0  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 113.81096 45.52438 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .75  setgray 5.0 3.0 0 0 add DashLine
 grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 113.81096 227.62192 113.81096 45.52438  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 5.0 3.0 0 0 add DashLine
 grestore gsave grestore end
 
@endspecial 1260 30488 a
 tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 1260
30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 45.52438 113.81096 79.66766 0.0 0.0  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 1 0  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 1260 30488
a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 0.0 45.52438 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 45.52438 113.81096 79.66766 0.0 0.0  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 1 0  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 0.0 91.04877 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 45.52438 113.81096 79.66766 0.0 0.0  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 1 0  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial
1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 0.0 136.57315 } PutCoor PutBegin  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 45.52438 113.81096 79.66766 0.0 0.0  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 1 0  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 204.85973 45.52438 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .75  setgray 5.0 3.0 0 0 add DashLine
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 204.85973 45.52438 204.85973 227.62192  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 5.0 3.0 0 0 add DashLine
 grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 0.0 136.57315 204.85973 159.33534 0.0 68.28658
204.85973 102.42986 0.0 0.0  /Lineto /lineto load def false Line  gsave
1.0 2 mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 0
1  setrgbcolor 0 setlinecap stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 182.09753 182.09753 182.09753 0.0  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 273.1463 273.1463 182.09753 182.09753  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 182.09753 182.09753 0.0 182.09753  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 273.1463 273.1463 91.04877 273.1463  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 273.1463 91.04877 273.1463 273.1463  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
1260 30488 a
 tx@Dict begin { -56.90547 0.0 } PutCoor PutBegin  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ 375.57616 0.0 341.43288 0.0  /Lineto /lineto load def false
Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ 341.43288 34.14328 341.43288 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ 364.19507 22.76219 341.43288 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 1260 30488 a
 tx@Dict begin { 380.12852 0.0 } PutCoor PutBegin  end
 1260 30488 a 758
30866 a Fa(X)1260 30488 y
 tx@Dict begin PutEnd  end
 1260 30488 a 1260 30488 a
 tx@Dict begin { 341.43288 38.69565 } PutCoor PutBegin  end
 1260
30488 a 843 30866 a Fa(Z)1260 30488 y
 tx@Dict begin PutEnd  end
 1260 30488 a 1260
30488 a
 tx@Dict begin { 368.74744 27.31456 } PutCoor PutBegin  end
 1260 30488 a 816 30866 a Fa(Y)1260 30488 y
 tx@Dict begin PutEnd  end
 1260
30488 a 1260 30488 a
 tx@Dict begin PutEnd  end
 1260 30488 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 0.0 2.27635 .5 CLW
mul sub 0 360 arc closepath gsave .75  setgray fill grestore gsave
0.5 SLW 0  setgray 0 setlinecap stroke  grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 22.76219 2.27635
.5 CLW mul sub 0 360 arc closepath gsave .75  setgray fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 45.52438 2.27635
.5 CLW mul sub 0 360 arc closepath gsave .75  setgray fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 68.28658 2.27635
.5 CLW mul sub 0 360 arc closepath gsave .75  setgray fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 91.04877 2.27635
.5 CLW mul sub 0 360 arc closepath gsave .75  setgray fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 113.81096 2.27635
.5 CLW mul sub 0 360 arc closepath gsave .75  setgray fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 136.57315 2.27635
.5 CLW mul sub 0 360 arc closepath gsave .75  setgray fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 159.33534 2.27635
.5 CLW mul sub 0 360 arc closepath gsave .75  setgray fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 182.09753 2.27635
.5 CLW mul sub 0 360 arc closepath gsave .75  setgray fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 712 2764 a Fq(Figure)27 b(1:)36 b(Construction)27
b(of)g(collinear)g(1-b)r(end)g(dra)n(wing)f(in)i(Lemma)g(3.)227
3029 y Fr(3)135 b(Pro)t(of)44 b(of)i(Theorem)f(2)227
3231 y Fq(Let)30 b Fp(P)39 b Fq(=)26 b Fo(d)608 3198
y Fl(1)p 608 3212 34 4 v 608 3260 a(2)665 3231 y Fq(log)772
3251 y Fl(4)823 3231 y Fp(n)p Fo(e)k Fq(and)g Fp(Q)c
Fq(=)h Fo(d)p Fp(n=P)12 b Fo(e)p Fq(.)43 b(Let)30 b Fp(V)19
b Fq(\()p Fp(K)1906 3243 y Fg(n)1951 3231 y Fq(\))27
b(=)f Fo(f)p Fp(v)2183 3243 y Fg(a;i)2293 3231 y Fq(:)h(1)g
Fo(\024)f Fp(a)h Fo(\024)g Fp(P)r(;)14 b Fq(1)27 b Fo(\024)f
Fp(i)h Fo(\024)f Fp(Q)p Fo(g)p Fq(.)43 b(P)n(osition)227
3351 y(eac)n(h)27 b(v)n(ertex)f Fp(v)705 3363 y Fg(a;i)816
3351 y Fq(at)1582 3470 y(\(2)p Fp(a;)h(aQ)18 b Fq(+)g
Fp(i;)28 b Fq(0\))41 b Fp(:)227 3640 y Fq(F)-7 b(or)31
b(eac)n(h)g(1)e Fo(\024)h Fp(a)g Fo(\024)f Fp(P)12 b
Fq(,)33 b(the)f(set)g(of)g(v)n(ertices)e Fo(f)p Fp(v)1792
3652 y Fg(a;i)1905 3640 y Fq(:)g(1)g Fo(\024)f Fp(i)h
Fo(\024)f Fp(Q)p Fo(g)i Fq(induces)h(a)g(complete)f(graph)g
Fp(K)3455 3652 y Fg(Q)3511 3640 y Fq(,)227 3759 y(whic)n(h)c(is)h(dra)n
(wn)e(using)i(Corollary)d(1)i(\(with)h(the)g(dimensions)g(p)r(erm)n
(uted\))g(in)g(the)g(b)r(o)n(x)986 3962 y([2)p Fp(a;)14
b Fq(2)p Fp(a)j Fq(+)h Fp(P)12 b Fq(])19 b Fo(\002)f
Fq([)p Fp(aQ)g Fq(+)g(1)p Fp(;)c Fq(\()p Fp(a)k Fq(+)g(1\))p
Fp(Q)p Fq(])g Fo(\002)g Fq([0)p Fp(;)c Fo(\000)p Fp(c)g(Q)2545
3927 y Fl(2)2580 3962 y Fp(=P)e Fq(])41 b Fp(;)227 4164
y Fq(for)30 b(some)h(constan)n(t)f Fp(c)p Fq(.)47 b(F)-7
b(or)31 b(all)f(1)f Fo(\024)f Fp(a)g(<)h(b)f Fo(\024)h
Fp(P)12 b Fq(,)31 b(orien)n(t)g(eac)n(h)f(edge)g Fp(e)f
Fq(=)f(\()p Fp(v)2748 4176 y Fg(a;i)2832 4164 y Fp(;)14
b(v)2909 4176 y Fg(b;j)2993 4164 y Fq(\),)32 b(and)f(p)r(osition)227
4284 y(the)d(b)r(end)g(for)f Fp(e)g Fq(at)1220 4403 y
Fp(r)1257 4415 y Fg(e)1339 4403 y Fq(=)46 b(\(2)p Fp(a)18
b Fq(+)g(1)p Fp(;)27 b(bQ)18 b Fq(+)g Fp(j;)28 b Fq(4)2091
4369 y Fg(P)9 b Fe(\000)p Fg(a)2248 4403 y Fp(Q)18 b
Fo(\000)g Fp(i)p Fq(\))41 b Fp(;)227 4573 y Fq(as)34
b(illustrated)h(in)g(Figure)g(2.)58 b(W)-7 b(e)36 b(sa)n(y)e
Fp(v)1580 4585 y Fg(a;i)1663 4573 y Fp(r)1700 4585 y
Fg(e)1771 4573 y Fq(is)h(an)g Fn(outgoing)43 b Fq(segmen)n(t)35
b(at)f Fp(v)2810 4585 y Fg(a;i)2894 4573 y Fq(,)j(and)e
Fp(r)3160 4585 y Fg(e)3196 4573 y Fp(v)3236 4585 y Fg(b;j)3355
4573 y Fq(is)g(an)227 4692 y Fn(inc)l(oming)h Fq(segmen)n(t)27
b(at)g Fp(v)1051 4704 y Fg(b;j)1135 4692 y Fq(.)351 4812
y(Th)n(us)g(the)h(b)r(ounding)f(b)r(o)n(x)f(is)h Fo(O)r
Fq(\()p Fp(P)12 b Fq(\))19 b Fo(\002)e(O)r Fq(\()p Fp(n)p
Fq(\))h Fo(\002)f(O)r Fq(\(4)2033 4782 y Fg(P)2089 4812
y Fp(Q)g Fq(+)g Fp(Q)2320 4782 y Fl(2)2357 4812 y Fp(=P)12
b Fq(\),)27 b(whic)n(h)g(is)g Fo(O)r Fq(\(log)14 b Fp(n)p
Fq(\))k Fo(\002)f(O)r Fq(\()p Fp(n)p Fq(\))h Fo(\002)227
4931 y(O)r Fq(\()p Fp(n)377 4901 y Fl(3)p Fg(=)p Fl(2)482
4931 y Fp(=)c Fq(log)f Fp(n)30 b Fq(+)f Fp(n)882 4901
y Fl(2)919 4931 y Fp(=)14 b Fq(log)1082 4894 y Fl(3)1133
4931 y Fp(n)p Fq(\),)27 b(whic)n(h)f(is)g Fo(O)r Fq(\(log)15
b Fp(n)p Fq(\))h Fo(\002)g(O)r Fq(\()p Fp(n)p Fq(\))g
Fo(\002)g(O)r Fq(\()p Fp(n)2413 4901 y Fl(2)2451 4931
y Fp(=)e Fq(log)2613 4894 y Fl(3)2664 4931 y Fp(n)p Fq(\).)37
b(Hence)27 b(the)f(v)n(olume)g(is)227 5051 y Fo(O)r Fq(\()p
Fp(n)377 5021 y Fl(3)415 5051 y Fp(=)14 b Fq(log)577
5014 y Fl(2)628 5051 y Fp(n)p Fq(\).)36 b(It)24 b(remains)f(to)h(pro)n
(v)n(e)e(that)i(there)f(are)g(no)g(edge)h(crossings.)33
b(By)24 b(Corollary)d(1)i(all)h(edges)227 5170 y(b)r(elo)n(w)j(the)h
Fp(Z)h Fq(=)22 b(0)27 b(plane)h(do)f(not)h(cross.)35
b(W)-7 b(e)28 b(no)n(w)f(only)g(consider)g(edges)g(ab)r(o)n(v)n(e)f
(the)i Fp(Z)h Fq(=)22 b(0)27 b(plane.)351 5290 y(Eac)n(h)34
b(p)r(oin)n(t)h(in)h(an)e(outgoing)g(segmen)n(t)g(at)h
Fp(v)1842 5302 y Fg(a;i)1961 5290 y Fq(has)g(an)f Fp(X)7
b Fq(-co)r(ordinate)33 b(in)i([2)p Fp(a;)14 b Fq(2)p
Fp(a)22 b Fq(+)h(1].)59 b(Th)n(us)227 5410 y(an)29 b(outgoing)f(segmen)
n(t)g(at)h(some)g(v)n(ertex)f Fp(v)1615 5422 y Fg(a)1651
5430 y Fb(1)1684 5422 y Fg(;i)1727 5430 y Fb(1)1793 5410
y Fq(do)r(es)h(not)g(in)n(tersect)g(an)g(outgoing)f(segmen)n(t)g(at)i
(some)1860 5707 y(5)p eop
%%Page: 6 6
6 5 bop 351 3294 a @beginspecial 66 @llx 355 @lly 433
@urx 721 @ury 3670 @rwi @setspecial
%%BeginDocument: VertexLayout.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Creator: dvips(k) 5.86e Copyright 2001 Radical Eye Software
%%Title: VertexLayout.dvi
%%BoundingBox: 66 355 433 721
%%DocumentFonts: CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf -E -o VertexLayout.eps VertexLayout.dvi
%DVIPSParameters: dpi=8000, compressed
%DVIPSSource:  TeX output 2004.04.26:1748
%%BeginProcSet: tex.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Version 97 patch 3, 98/06/01
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
% DG/SR modification end
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
% def
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
pop pop } def
% DG/SR modification end
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro
%!
% PostScript prologue for pst-grad.tex.
% Version 97, 93/05/12
% For distribution, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.
%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).
%
% Syntax:
%   R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill

/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBlue ED
  /LastGreen ED
  /LastRed ED
  /FirstBlue ED
  /FirstGreen ED
  /FirstRed ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastRed FirstRed add 2 div
  LastGreen FirstGreen add 2 div
  LastBlue FirstBlue add 2 div
  setrgbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
    MidLine { GradientLoop } repeat
  } if
  MidLine NumLines lt
  {
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoop } repeat
  } if
} def
/GradientLoop {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Red Green Blue setrgbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Blue Blue BlueIncrement add def
  /Green Green GreenIncrement add def
  /Red Red RedIncrement add def
} def

end
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: pst-coil.pro
%!
% PostScript prologue for pst-coil.tex.
% Version 97 patch 1, 98/06/02
% For distribution, see pstricks.tex.
%
/tx@CoilDict 40 dict def tx@CoilDict begin
/CoilLoop { /t ED t sin AspectSin mul t 180 div AspectCos mul add t cos
lineto } def
/Coil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /ArmB ED /ArmA ED
/h ED /w ED /y1 ED /x1 ED /y0 ED /x0 ED x0 y0 translate y1 y0 sub x1 x0
sub 2 copy Pyth /TotalLength ED Atan rotate /BeginAngle ArmA AspectCos
Div w h mul Div 360 mul def /EndAngle TotalLength ArmB sub AspectCos Div
w h mul Div 360 mul def 1 0 0 0 ArrowA ArmA 0 lineto /mtrx CM def w h
mul 2 Div w 2 Div scale BeginAngle Inc EndAngle { CoilLoop } for
EndAngle CoilLoop mtrx setmatrix TotalLength ArmB sub 0 lineto CP
% DG/SR modification begin - Jun.  2, 1998 - Patch 1 (from Michael Vulis)
% TotalLength 0 ArrowB lineto } def
TotalLength 0 ArrowB lineto
pop pop pop pop } def
% DG/SR modification end
/AltCoil { /Inc ED dup sin /AspectSin ED cos /AspectCos ED /h ED /w ED
/EndAngle ED /BeginAngle ED /mtrx CM def w h mul 2 Div w 2 Div scale
BeginAngle sin AspectSin mul BeginAngle 180 div AspectCos mul add
BeginAngle cos /lineto load stopped { moveto } if BeginAngle Inc
EndAngle { CoilLoop } for EndAngle CoilLoop mtrx setmatrix } def
/ZigZag { /ArmB ED /ArmA ED 2 div /w ED w mul /h ED /y1 ED /x1 ED /y0 ED
/x0 ED x1 y1 translate y0 y1 sub x0 x1 sub 2 copy Pyth /TotalLength ED
Atan rotate TotalLength ArmA sub ArmB sub dup h div cvi /n ED n h mul
sub 2 div dup ArmA add /ArmA ED ArmB add /ArmB ED /x ArmB h 2 div add
def mark 0 0 ArmB 0 n { x w /w w neg def /x x h add def } repeat
TotalLength ArmA sub 0 TotalLength 0 } def
end
% END pst-coil.pro

%%EndProcSet
%%BeginProcSet: pst-text.pro
%!
% PostScript header file pst-text.pro
% Version 97, 94/04/20
% For distribution, see pstricks.tex.

/tx@TextPathDict 40 dict def
tx@TextPathDict begin

% Syntax:  <dist> PathPosition -
% Function: Searches for position of currentpath distance <dist> from
%           beginning. Sets (X,Y)=position, and Angle=tangent.
/PathPosition
{ /targetdist exch def
  /pathdist 0 def
  /continue true def
  /X { newx } def /Y { newy } def /Angle 0 def
  gsave
    flattenpath
    { movetoproc }  { linetoproc } { } { firstx firsty linetoproc }
    /pathforall load stopped { pop pop pop pop /X 0 def /Y 0 def } if
  grestore
} def

/movetoproc { continue { @movetoproc } { pop pop } ifelse } def

/@movetoproc
{ /newy exch def /newx exch def
  /firstx newx def /firsty newy def
} def

/linetoproc { continue { @linetoproc } { pop pop } ifelse } def

/@linetoproc
{
  /oldx newx def /oldy newy def
  /newy exch def /newx exch def
  /dx newx oldx sub def
  /dy newy oldy sub def
  /dist dx dup mul dy dup mul add sqrt def
  /pathdist pathdist dist add def
  pathdist targetdist ge
  { pathdist targetdist sub dist div dup
    dy mul neg newy add /Y exch def
    dx mul neg newx add /X exch def
    /Angle dy dx atan def
    /continue false def
  } if
} def

/TextPathShow
{ /String exch def
  /CharCount 0 def
  String length
  { String CharCount 1 getinterval ShowChar
    /CharCount CharCount 1 add def
  } repeat
} def

% Syntax: <pathlength> <position> InitTextPath -
/InitTextPath
{ gsave
    currentpoint /Y exch def /X exch def
    exch X Hoffset sub sub mul
    Voffset Hoffset sub add
    neg X add /Hoffset exch def
    /Voffset Y def
  grestore
} def

/Transform
{ PathPosition
  dup
  Angle cos mul Y add exch
  Angle sin mul neg X add exch
  translate
  Angle rotate
} def

/ShowChar
{ /Char exch def
  gsave
    Char end stringwidth
    tx@TextPathDict begin
    2 div /Sy exch def 2 div /Sx exch def
    currentpoint
    Voffset sub Sy add exch
    Hoffset sub Sx add
    Transform
    Sx neg Sy neg moveto
    Char end tx@TextPathSavedShow
    tx@TextPathDict begin
  grestore
  Sx 2 mul Sy 2 mul rmoveto
} def

end
% END pst-text.pro

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /X put
dup 89 /Y put
dup 90 /Z put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
956017667094CD8DC214A666D7D12CB23EC030318B42E3091E5A867D072CEE3D
BE9E98C9B0C54ABC81B4D207D46C48B062DBE9F0CD5E25E7F3C5447C8B33EF86
26F04E095D54F911643F8593AF49FF7B1669C41BB5076092C883F93E682FBBD5
3ACE18C5CAE357DB53344A9BC9FA4FB31FA464FAFE4F5D56052F19F2A32BC638
5FE231A386391AB66D9B1912E2C3E7AED17BE4C10CDA2955A9D532BA9A64D02B
83AE20EA16A8AD77A06AB5BA89BFA820541DEFBAEE72C59F70706BDCB62C881F
0A2C95AFE1240870849C0EF5AE45A7FCE3B3942C6A67E04FB8EE3434195106B0
88087800EBA49F9E6D728DDDDA0516031C745DE8336CDB2E0DA253486ED48766
7A7314FFD6919392EF8D622C1EC38B6BAA68BEA8992F568FBD558F0D6BAAFE31
ED963F0E22A0146BDC785CC9ADD2CDC429C9FD105CA75F7CF16BCDF74ED3194D
0F40DF7D8383053902ABE5039E2852FC9F2DC8B30C1FC55E3234BBBB92C38996
0A8E2251B1528B628C6A1720C68E0095426BD002C3FC62EA940B2B95ACD4B3F2
F45AF3E4BB0ACCE7B76998945F25E2D6D8B9D8BB94530B1DC6700137FA6189A4
3FF8D815BF6C546181BFB5C9AC0CB2C2FE2A346FBE404694C8CD7CBF69B33AC0
5031DA15D8A06B49B50F53D6306E90A947C93D1A94417971863503AC15DC83D1
E440EA1FA7138439B91DDB77AABFF9A31E23CE92DBCCC96C6EF89AD615694AD1
63EE701D07305F8FE1470B28DFD788C4313BA7A5036E00F532E35E53F32D9852
43DFFFD866D73DC523A766F7F8A111C7669839B79DCE87D9004AB4DB73E55161
2A445891B51A590B654213C254E7EFC1D19852CB2F402423120823E937096F4D
CCAFE83466DDCAEF080BDAC121218A83CB9F36CA971748E5734423B6647E9A95
379B4D8434929BFAE47F22040F501A62C701D9A0772B8AEF88635B93696810A5
D36359C4E3F708BC77BFC1246559059027F0919D5015D710313380CEA6B79008
2A55CA4B0F4C51B06CE6738CDF8A88ACC6F8B4D46EDB6950B4677C5C1C55D8A5
131135808AE6444699889B9A29BD7199919FBECD82D08A9C1631E5DC4D59F573
B882A106BEA3BCEF171F1DBAC4DC29E3D2B628B8BEF7252CEA2635B00958882B
C0DA5934FB69CB338EAF4CE8993986E013BFEEDECD3CBDC4043C601E3B9CFBD0
B233A038C8F653F506AE56219F5D77F45E431883D60F11A70A692315E72E787A
DB5B321BE1F08ABCDFE92064AA974F9B1121D5D0BF3A26F3C042233EE48D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258437 52099154 1000 8000 8000 (VertexLayout.dvi)
@start /Fa 165[756 643 917 88[{}3 1106.96 /CMMI10 rf
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin

%%EndSetup
1 0 bop 0 40394 a
 tx@Dict begin gsave CM STV CP newpath moveto 3.0 neg 0 rmoveto clip
setmatrix end
 0 40394 a 0 40394 40055 40394 v 40055
40394 a
 currentpoint grestore moveto
 40055 40394 a 0 26220 a
 tx@Dict begin { 256.07465 -42.67911 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 101.36287 16.00465  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 144.04198 101.36287 144.04198  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 16.00465 144.04198  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 16.00465 16.00465  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 85.35822 128.03732  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 128.03732 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 85.35822 128.03732  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 192.05598 -64.01866 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 101.36287 16.00465  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 144.04198 101.36287 144.04198  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 16.00465 144.04198  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 16.00465 16.00465  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 85.35822 128.03732  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 128.03732 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 85.35822 128.03732  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 128.03732 -85.35822 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 101.36287 16.00465  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 144.04198 101.36287 144.04198  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 16.00465 144.04198  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 16.00465 16.00465  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 85.35822 128.03732  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 128.03732 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 85.35822 128.03732  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 64.01866 -106.69777 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 101.36287 16.00465  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 144.04198 101.36287 144.04198  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 16.00465 144.04198  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 16.00465 16.00465  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 85.35822 128.03732  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 128.03732 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 85.35822 128.03732  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 0.0 -128.03732 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 101.36287 16.00465  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 144.04198 101.36287 144.04198  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 16.00465 144.04198  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 16.00465 16.00465 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 16.00465 16.00465  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 85.35822 128.03732  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 85.35822 128.03732 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 16.00465 85.35822 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 101.36287 144.04198 85.35822 128.03732  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 106.69777 234.73509  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
0 26220 a
 tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 21.33955 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220
a
 tx@Dict begin { 42.67911 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 0
26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 64.01866 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end


@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 85.35822 0.0 } PutCoor PutBegin  end
 0 26220 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220
a 0 26220 a
 tx@Dict begin { 106.69777 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 128.03732 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220
a
 tx@Dict begin { 149.37688 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 0
26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 170.71643 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 106.69777 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke
 grestore end


@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 26220 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 170.71643 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220
a 0 26220 a
 tx@Dict begin { 21.33955 21.33955 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 170.71643 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 42.67911 42.67911 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 170.71643 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220
a
 tx@Dict begin { 64.01866 64.01866 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 170.71643 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 0
26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 85.35822 85.35822 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 170.71643 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end


@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 106.69777 106.69777 } PutCoor PutBegin  end
 0 26220 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .25  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 170.71643 0.0 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .25  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 122.70242 229.40019 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 117.36754 224.0653 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 112.03265 218.73042 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 106.69777 213.39554 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 101.36287 208.06064 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 96.02798 202.72575 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 90.6931 197.39087 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 85.35822 192.05598 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 80.02332 186.72108 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 74.68843 181.3862 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 69.35355 176.05132 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 64.01866 170.71643 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 58.68376 165.38153 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 53.34888 160.04665 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 48.01399 154.71176 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 42.67911 149.37688 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 122.70242 176.05132 16.00465 16.00465
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 272.0793 101.36287 122.70242 176.05132
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 117.36754 170.71643 16.00465 16.00465
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 266.74442 97.09503 117.36754 170.71643
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 112.03265 165.38153 16.00465 16.00465
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 261.40953 92.82718 112.03265 165.38153
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 106.69777 160.04665 16.00465 16.00465
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 256.07465 88.55934 106.69777 160.04665
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 101.36287 154.71176 16.00465 16.00465
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 208.06064 80.02332 101.36287 154.71176
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 96.02798 149.37688 16.00465 16.00465
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 202.72575 75.75548 96.02798 149.37688
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 90.6931 144.04198 16.00465 16.00465
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 197.39087 71.48763 90.6931 144.04198
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 85.35822 138.70709 16.00465 16.00465
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 192.05598 67.21979 85.35822 138.70709
 /Lineto /lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1
 setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor 0 setlinecap
stroke  grestore gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 144.04198 58.68376 80.02332 133.37221
16.00465 16.00465  /Lineto /lineto load def false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor
0 setlinecap stroke  grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 138.70709 54.41592 74.68843 128.03732
16.00465 16.00465  /Lineto /lineto load def false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor
0 setlinecap stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 133.37221 50.14807 69.35355 122.70242
16.00465 16.00465  /Lineto /lineto load def false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor
0 setlinecap stroke  grestore gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 128.03732 45.88023 64.01866 117.36754
16.00465 16.00465  /Lineto /lineto load def false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor
0 setlinecap stroke  grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 80.02332 37.34421 58.68376 112.03265
16.00465 16.00465  /Lineto /lineto load def false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor
0 setlinecap stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 74.68843 33.07637 53.34888 106.69777
16.00465 16.00465  /Lineto /lineto load def false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor
0 setlinecap stroke  grestore gsave grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 69.35355 28.80852 48.01399 101.36287
16.00465 16.00465  /Lineto /lineto load def false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor
0 setlinecap stroke  grestore gsave grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 1 0 0  setcmykcolor  /ArrowA {
moveto } def /ArrowB { } def [ 64.01866 24.54068 42.67911 96.02798
16.00465 16.00465  /Lineto /lineto load def false Line  gsave 1.0 2
mul CLW add SLW 1  setgray stroke grestore gsave 0.8 SLW 0 1 0 0  setcmykcolor
0 setlinecap stroke  grestore gsave grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 272.0793 101.36287 122.70242 229.40019  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 122.70242 229.40019 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -2.13408 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 266.74442 97.09503 117.36754 224.0653  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 117.36754 224.0653 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -2.13408 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 261.40953 92.82718 112.03265 218.73042  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 112.03265 218.73042 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -2.13408 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 256.07465 88.55934 106.69777 213.39554  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 106.69777 213.39554 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -2.13408 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 208.06064 80.02332 101.36287 208.06064  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 101.36287 208.06064 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.7072 -4.26784 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 202.72575 75.75548 96.02798 202.72575  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 96.02798 202.72575 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.7072 -4.26784 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 197.39087 71.48763 90.6931 197.39087  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 90.6931 197.39087 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.7072 -4.26784 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 192.05598 67.21979 85.35822 192.05598  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 85.35822 192.05598 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.7072 -4.26784 0.0 0.0  /Lineto /lineto load
def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 144.04198 58.68376 80.02332 186.72108  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 80.02332 186.72108 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.44052 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 138.70709 54.41592 74.68843 181.3862  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 74.68843 181.3862 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.44052 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 133.37221 50.14807 69.35355 176.05132  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 69.35355 176.05132 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.44052 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 128.03732 45.88023 64.01866 170.71643  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 64.01866 170.71643 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.44052 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 80.02332 37.34421 58.68376 165.38153  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 58.68376 165.38153 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.06703 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 74.68843 33.07637 53.34888 160.04665  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 53.34888 160.04665 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.06703 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 69.35355 28.80852 48.01399 154.71176  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 48.01399 154.71176 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.06703 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ 64.01866 24.54068 42.67911 149.37688  /Lineto
/lineto load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray
stroke grestore gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap stroke
 grestore gsave grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 42.67911 149.37688 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0 0 1  setrgbcolor  /ArrowA { moveto
} def /ArrowB { } def [ -1.06703 -4.26784 0.0 0.0  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0 0 1  setrgbcolor 0 setlinecap
stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 277.4142 106.69777 277.4142 234.73509  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 277.4142 234.73509 170.71643 128.03732  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 0.0 128.03732 0.0 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 106.69777 234.73509 0.0 128.03732  /Lineto /lineto
load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap stroke
 grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 277.4142 234.73509 106.69777 234.73509  /Lineto
/lineto load def false Line  gsave 0.8 SLW .75  setgray 0 setlinecap
stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 170.71643 128.03732 170.71643 0.0  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW .75  setgray  /ArrowA { moveto }
def /ArrowB { } def [ 170.71643 128.03732 0.0 128.03732  /Lineto /lineto
load def false Line  gsave 1.0 2 mul CLW add SLW 1  setgray stroke
grestore gsave 0.8 SLW .75  setgray 0 setlinecap stroke  grestore gsave
grestore end
 
@endspecial 0 26220 a
 tx@Dict begin { 0.0 0.0 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 0.0 2.13408 .5 CLW
mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  5.33488 5.33488 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  10.66977 10.66977 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  16.00465 16.00465 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220
a
 tx@Dict begin { 64.01866 21.33955 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 0.0 2.13408 .5 CLW
mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  5.33488 5.33488 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  10.66977 10.66977 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  16.00465 16.00465 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220
a 0 26220 a
 tx@Dict begin { 128.03732 42.67911 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 0.0 2.13408 .5 CLW
mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  5.33488 5.33488 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  10.66977 10.66977 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  16.00465 16.00465 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 192.05598 64.01866 } PutCoor PutBegin  end
 0 26220 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 0.0 2.13408 .5 CLW
mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  5.33488 5.33488 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  10.66977 10.66977 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  16.00465 16.00465 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220
a
 tx@Dict begin { 256.07465 85.35822 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  0.0 0.0 2.13408 .5 CLW
mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill grestore
gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  5.33488 5.33488 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  10.66977 10.66977 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.5 SLW 0  setgray  16.00465 16.00465 2.13408
.5 CLW mul sub 0 360 arc closepath gsave 0.6 1 0.6  setrgbcolor fill
grestore gsave 0.5 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220
a 0 26220 a
 tx@Dict begin { 106.69777 -121.63539 } PutCoor PutBegin  end
 0 26220 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ 202.72575 0.0 170.71643 0.0  /Lineto /lineto load def false
Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ 170.71643 32.00932 170.71643 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { BeginArrow 1.  1.  scale false 0.4 1.4 1.5 2. Arrow  EndArrow
 } def [ 192.05598 21.33955 170.71643 0.0  /Lineto /lineto load def
false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial 0 26220 a
 tx@Dict begin { 206.9936 0.0 } PutCoor PutBegin  end
 0 26220 a -502 26599
a Fa(X)0 26220 y
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 170.71643 36.27718 } PutCoor PutBegin  end
 0 26220 a -417 26599
a Fa(Z)0 26220 y
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin { 196.32382 25.60739 } PutCoor PutBegin  end
 0 26220 a -444 26599
a Fa(Y)0 26220 y
 tx@Dict begin PutEnd  end
 0 26220 a 0 26220 a
 tx@Dict begin PutEnd  end
 0 26220 a eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF

%%EndDocument
 @endspecial 732 3472 a Fq(Figure)27 b(2:)36 b(Construction)27
b(of)g(1-b)r(end)h(dra)n(wing)e(of)i Fp(K)2445 3484 y
Fg(n)2517 3472 y Fq(in)g(Theorem)f(2.)227 3738 y(v)n(ertex)j
Fp(v)522 3750 y Fg(a)558 3758 y Fb(2)590 3750 y Fg(;i)633
3758 y Fb(2)701 3738 y Fq(whenev)n(er)g Fp(a)1113 3750
y Fl(1)1179 3738 y Fo(6)p Fq(=)e Fp(a)1316 3750 y Fl(2)1353
3738 y Fq(.)47 b(Clearly)30 b(an)h(outgoing)e(segmen)n(t)i(at)f
Fp(v)2647 3750 y Fg(a;i)2726 3758 y Fb(1)2794 3738 y
Fq(is)h(not)g(coplanar)e(with)227 3857 y(an)d(outgoing)g(segmen)n(t)g
(at)g Fp(v)1142 3869 y Fg(a;i)1221 3877 y Fb(2)1285 3857
y Fq(whenev)n(er)g Fp(i)1678 3869 y Fl(1)1737 3857 y
Fo(6)p Fq(=)d Fp(i)1854 3869 y Fl(2)1891 3857 y Fq(,)k(and)f(th)n(us)h
(these)g(segmen)n(ts)f(do)g(not)h(cross.)35 b(Since)227
3977 y(eac)n(h)23 b(b)r(end)h(is)g(assigned)f(a)g(unique)h(gridp)r(oin)
n(t,)g(an)n(y)f(t)n(w)n(o)h(outgoing)e(segmen)n(ts)h(at)h(the)g(same)f
(v)n(ertex)g Fp(v)3450 3989 y Fg(a;i)227 4096 y Fq(do)k(not)h(cross.)35
b(Th)n(us)27 b(no)h(t)n(w)n(o)f(outgoing)f(segmen)n(ts)h(cross.)351
4216 y(Eac)n(h)e(p)r(oin)n(t)g(in)h(an)f(incoming)g(segmen)n(t)g(at)h
Fp(v)1790 4228 y Fg(b;j)1899 4216 y Fq(has)f(a)g Fp(Y)19
b Fq(-co)r(ordinate)24 b(of)i Fp(bQ)13 b Fq(+)h Fp(j)5
b Fq(.)36 b(Th)n(us)25 b(incoming)227 4335 y(segmen)n(ts)k(at)h
(distinct)g(v)n(ertices)f(do)h(not)f(cross.)43 b(Since)30
b(eac)n(h)f(b)r(end)h(is)g(assigned)f(a)g(unique)h(gridp)r(oin)n(t,)227
4455 y(an)n(y)21 b(t)n(w)n(o)g(incoming)g(segmen)n(ts)g(at)h(the)g
(same)f(v)n(ertex)g(do)h(not)g(cross.)33 b(Th)n(us)22
b(no)f(t)n(w)n(o)g(incoming)h(segmen)n(ts)227 4574 y(cross.)351
4694 y(T)-7 b(o)30 b(pro)n(v)n(e)e(that)i(an)f(incoming)g(segmen)n(t)g
(do)r(es)h(not)f(cross)f(an)i(outgoing)e(segmen)n(t,)i(w)n(e)f(claim)h
(that)227 4814 y(in)g(the)g(pro)5 b(jection)29 b(of)h(the)g(edges)g(on)
f(the)i Fp(Y)45 b Fq(=)27 b(0)i(plane,)i(an)e(incoming)h(segmen)n(t)f
(do)r(es)h(not)g(cross)e(an)227 4933 y(outgoing)23 b(segmen)n(t.)36
b(In)24 b(the)i(remainder)d(of)i(the)g(pro)r(of)f(w)n(e)g(w)n(ork)g
(solely)g(in)h(the)g Fp(Y)41 b Fq(=)23 b(0)h(plane,)i(and)e(use)227
5053 y(\()p Fp(X)r(;)14 b(Z)6 b Fq(\))27 b(co)r(ordinates.)351
5172 y(The)d(pro)5 b(jection)24 b(in)g(the)g Fp(Y)42
b Fq(=)23 b(0)g(plane)h(of)g(an)g(outgoing)f(segmen)n(t)h(at)f(a)h(v)n
(ertex)f Fp(v)2913 5184 y Fg(a;i)3021 5172 y Fq(is)h(the)h(segmen)n(t)
1214 5375 y Fp(s)1253 5387 y Fl(1)1313 5375 y Fq(=)e(\(2)p
Fp(a;)14 b Fq(0\))22 b Fo(!)h Fq(\(2)p Fp(a)18 b Fq(+)g(1)p
Fp(;)c Fq(4)2098 5341 y Fg(P)9 b Fe(\000)p Fg(a)2254
5375 y Fp(Q)18 b Fo(\000)g Fp(i)p Fq(\))42 b Fp(:)1860
5707 y Fq(6)p eop
%%Page: 7 7
7 6 bop 227 291 a Fq(The)35 b(pro)5 b(jection)34 b(in)h(the)h
Fp(Y)54 b Fq(=)35 b(0)f(plane)h(of)g(the)h(incoming)e(segmen)n(t)h(of)g
(an)g(edge)f(\()p Fp(v)3006 303 y Fg(c;k)3097 291 y Fp(;)14
b(v)3174 303 y Fg(d;`)3260 291 y Fq(\))36 b(is)f(the)227
411 y(segmen)n(t)1233 530 y Fp(s)1272 542 y Fl(2)1333
530 y Fq(=)22 b(\(2)p Fp(c)c Fq(+)g(1)p Fp(;)c Fq(4)1752
496 y Fg(P)9 b Fe(\000)p Fg(c)1902 530 y Fp(Q)18 b Fo(\000)g
Fp(k)s Fq(\))23 b Fo(!)g Fq(\(2)p Fp(d;)14 b Fq(0\))p
Fp(:)351 699 y Fq(F)-7 b(or)32 b(there)h(to)f(b)r(e)h(a)f(crossing)f
(clearly)h(w)n(e)g(m)n(ust)h(ha)n(v)n(e)e Fp(c)h(<)f(a)g(<)g(d)p
Fq(.)52 b(T)-7 b(o)32 b(pro)n(v)n(e)f(that)i(there)g(is)f(no)227
819 y(crossing)c(it)i(su\016ces)f(to)h(sho)n(w)f(that)h(the)g
Fp(Z)6 b Fq(-co)r(ordinate)28 b(of)i Fp(s)2189 831 y
Fl(2)2256 819 y Fq(is)f(greater)f(than)i(the)g Fp(Z)6
b Fq(-co)r(ordinate)28 b(of)227 938 y Fp(s)266 950 y
Fl(1)331 938 y Fq(when)f Fp(X)j Fq(=)22 b(2)p Fp(a)c
Fq(+)g(1.)37 b(No)n(w)27 b Fp(s)1250 950 y Fl(2)1315
938 y Fq(is)g(con)n(tained)g(in)h(the)g(line)1385 1168
y Fp(Z)h Fq(=)1569 1111 y(4)1611 1081 y Fg(P)9 b Fe(\000)p
Fg(c)1761 1111 y Fp(Q)18 b Fo(\000)g Fp(k)p 1568 1148
407 4 v 1568 1224 a Fq(2)p Fp(c)g Fq(+)g(1)g Fo(\000)g
Fq(2)p Fp(d)1985 1168 y Fq(\()p Fp(X)25 b Fo(\000)18
b Fq(2)p Fp(d)p Fq(\))41 b Fp(:)227 1380 y Fq(Th)n(us)27
b(the)h Fp(Z)6 b Fq(-co)r(ordinate)26 b(of)h Fp(s)1212
1392 y Fl(2)1277 1380 y Fq(at)h Fp(X)h Fq(=)23 b(2)p
Fp(a)17 b Fq(+)i(1)27 b(is)g(at)h(least)1396 1553 y(4)1438
1522 y Fg(P)9 b Fe(\000)p Fg(c)1588 1553 y Fp(Q)18 b
Fo(\000)g Fp(Q)p 1396 1590 426 4 v 1405 1666 a Fq(2)p
Fp(c)g Fq(+)g(1)g Fo(\000)g Fq(2)p Fp(d)1831 1609 y Fq(\(2)p
Fp(a)g Fq(+)g(1)g Fo(\000)g Fq(2)p Fp(d)p Fq(\))42 b
Fp(:)227 1821 y Fq(Th)n(us)27 b(it)h(su\016ces)f(to)h(pro)n(v)n(e)e
(that)1185 1997 y(4)1227 1967 y Fg(P)9 b Fe(\000)p Fg(c)1378
1997 y Fp(Q)18 b Fo(\000)g Fp(Q)p 1185 2034 V 1194 2111
a Fq(2)p Fp(c)h Fq(+)f(1)f Fo(\000)i Fq(2)p Fp(d)1620
2054 y Fq(\(2)p Fp(a)g Fq(+)f(1)g Fo(\000)g Fq(2)p Fp(d)p
Fq(\))46 b Fp(>)f Fq(4)2298 2019 y Fg(P)9 b Fe(\000)p
Fg(a)2455 2054 y Fp(Q)41 b(:)843 b Fq(\(1\))227 2270
y(Clearly)28 b(\(1\))h(is)f(implied)h(if)g(it)g(is)f(pro)n(v)n(ed)f
(with)i Fp(a)24 b Fq(=)g Fp(c)19 b Fq(+)f(1)28 b(and)g
Fp(d)d Fq(=)f Fp(c)19 b Fq(+)f(2.)39 b(In)29 b(this)f(case,)g(\(1\))h
(reduces)227 2390 y(to)1477 2468 y(4)1519 2438 y Fg(P)9
b Fe(\000)p Fg(c)1674 2468 y Fo(\000)18 b Fq(1)p 1477
2505 322 4 v 1617 2581 a(3)1855 2524 y Fp(>)45 b Fq(4)2007
2490 y Fg(P)9 b Fe(\000)p Fg(c)p Fe(\000)p Fl(1)2270
2524 y Fp(:)227 2709 y Fq(That)27 b(is,)h(4)583 2678
y Fg(P)9 b Fe(\000)p Fg(c)p Fe(\000)p Fl(1)827 2709 y
Fp(>)23 b Fq(1,)k(whic)n(h)h(is)f(true)h(since)f Fp(c)c
Fo(\024)g Fp(P)30 b Fo(\000)18 b Fq(2.)37 b(This)27 b(completes)g(the)h
(pro)r(of.)227 3013 y Fr(References)268 3215 y Fq([1])41
b Fa(P.)35 b(Bose,)i(J.)e(Czyzo)n(wicz,)h(P.)f(Morin,)h(and)g(D.)f(R.)g
(W)n(ood)p Fq(,)d(The)g(maxim)n(um)f(n)n(um)n(b)r(er)h(of)397
3334 y(edges)27 b(in)h(a)f(three-dimensional)g(grid-dra)n(wing.)e
Fn(J.)30 b(Gr)l(aph)h(A)n(lgorithms)f(Appl.)p Fq(,)f(to)f(app)r(ear.)
268 3520 y([2])41 b Fa(T.)24 b(Calamoneri)f(and)g(A.)f(Sterbini)p
Fq(,)g(3D)e(straigh)n(t-line)f(grid)g(dra)n(wing)g(of)h(4-colorable)d
(graphs.)397 3639 y Fn(Inform.)31 b(Pr)l(o)l(c)l(ess.)g(L)l(ett.)p
Fq(,)c Ff(63\(2\))p Fq(:97{102,)d(1997.)268 3825 y([3])41
b Fa(R.)26 b(F.)e(Cohen,)i(P.)f(Eades,)g(T.)g(Lin,)h(and)f(F.)g(R)n
(uskey)p Fq(,)d(Three-dimensional)f(graph)f(dra)n(wing.)397
3945 y Fn(A)n(lgorithmic)l(a)p Fq(,)30 b Ff(17\(2\))p
Fq(:199{208,)24 b(1996.)268 4130 y([4])41 b Fa(E.)30
b(Di)f(Gia)n(como)p Fq(,)e(Dra)n(wing)e(series-parallel)e(graphs)i(on)h
(restricted)g(in)n(teger)f(3D)i(grids.)e(In)i([18)o(],)397
4250 y(pp.)h(238{246.)268 4436 y([5])41 b Fa(E.)28 b(Di)g(Gia)n(como)f
(and)h(H.)f(Meijer)p Fq(,)f(T)-7 b(rac)n(k)24 b(dra)n(wings)e(of)j
(graphs)e(with)i(constan)n(t)f(queue)g(n)n(um-)397 4555
y(b)r(er.)k(In)g([18)o(],)g(pp.)g(214{225.)268 4741 y([6])41
b Fa(J.)25 b(D)555 4734 y(\023)565 4741 y(\020az,)h(J.)f(Petit,)i(and)e
(M.)g(Serna)p Fq(,)e(A)f(surv)n(ey)f(of)h(graph)f(la)n(y)n(out)g
(problems.)g Fn(A)n(CM)k(Comput.)397 4860 y(Surveys)p
Fq(,)j Ff(34\(3\))p Fq(:313{356,)c(2002.)268 5046 y([7])41
b Fa(R.)34 b(P.)e(Dil)-7 b(w)n(or)h(th)p Fq(,)30 b(A)g(decomp)r
(osition)f(theorem)g(for)g(partially)f(ordered)g(sets.)h
Fn(A)n(nn.)i(of)i(Math.)397 5166 y(\(2\))p Fq(,)28 b
Ff(51)p Fq(:161{166,)c(1950.)268 5351 y([8])41 b Fa(V.)35
b(Dujmo)n(vi)873 5344 y(\023)871 5351 y(c,)g(P.)g(Morin,)g(and)g(D.)f
(R.)h(W)n(ood)p Fq(,)c(La)n(y)n(out)f(of)h(graphs)f(with)i(b)r(ounded)g
(tree-)397 5471 y(width,)d(2002,)c(submitted.)1860 5707
y(7)p eop
%%Page: 8 8
8 7 bop 268 291 a Fq([9])41 b Fa(V.)k(Dujmo)n(vi)883
284 y(\023)881 291 y(c,)j(P.)d(Morin,)j(and)d(D.)g(R.)g(W)n(ood)p
Fq(,)e(P)n(ath-width)d(and)h(three-dimensional)397 411
y(straigh)n(t-line)35 b(grid)f(dra)n(wings)g(of)i(graphs.)e(In)i
Fa(M.)j(T.)h(Goodrich)e(and)i(S.)f(G.)g(K)n(obour)n(o)n(v)p
Fq(,)397 530 y(eds.,)28 b Fn(Pr)l(o)l(c.)i(10th)g(International)f
(Symp.)h(on)g(Gr)l(aph)g(Dr)l(awing)g(\(GD)f('02\))p
Fq(,)f(v)n(ol.)f(2528)e(of)i Fn(L)l(e)l(ctur)l(e)397
650 y(Notes)j(in)g(Comput.)g(Sci.)p Fq(,)f(pp.)f(42{53,)d(Springer,)i
(2002.)227 836 y([10])40 b Fa(V.)c(Dujmo)n(vi)874 829
y(\023)872 836 y(c)g(and)f(D.)h(R.)g(W)n(ood)p Fq(,)c(Stac)n(ks,)h
(queues)e(and)h(trac)n(ks:)45 b(La)n(y)n(outs)30 b(of)i(graph)f(sub-)
397 955 y(divisions,)k(2003,)e(submitted.)i(See)f(T)-7
b(ec)n(h.)33 b(Rep.)h(TR-2003-08,)e(Sc)n(ho)r(ol)h(of)h(Computer)f
(Science,)397 1075 y(Carleton)27 b(Univ)n(ersit)n(y)-7
b(,)27 b(Otta)n(w)n(a,)f(Canada,)h(2003.)227 1261 y([11])40
b Fa(V.)28 b(Dujmo)n(vi)866 1254 y(\023)864 1261 y(c)g(and)g(D.)g(R.)g
(W)n(ood)p Fq(,)c(T)-7 b(ree-partitions)23 b(of)i Fp(k)s
Fq(-trees)e(with)i(applications)f(in)h(graph)397 1381
y(la)n(y)n(out.)e(In)h Fa(H.)j(Bodlaender)p Fq(,)d(ed.,)h
Fn(Pr)l(o)l(c.)j(29th)f(Workshop)h(on)e(Gr)l(aph)i(The)l(or)l(etic)g
(Conc)l(epts)f(in)397 1500 y(Computer)32 b(Scienc)l(e)g(\(WG'03\))p
Fq(,)f(v)n(ol.)e(2880)f(of)h Fn(L)l(e)l(ctur)l(e)i(Notes)g(in)g
(Comput.)i(Sci.)p Fq(,)d(pp.)g(205{217,)397 1620 y(Springer,)d(2003.)
227 1806 y([12])40 b Fa(V.)26 b(Dujmo)n(vi)864 1799 y(\023)862
1806 y(c)g(and)g(D.)f(R.)h(W)n(ood)p Fq(,)d(Three-dimensional)e(grid)h
(dra)n(wings)f(with)i(sub-quadratic)397 1925 y(v)n(olume.)k(In)h
Fa(J.)j(P)-7 b(a)n(ch)p Fq(,)27 b(ed.,)h Fn(T)-6 b(owar)l(ds)31
b(a)f(The)l(ory)h(of)g(Ge)l(ometric)f(Gr)l(aphs)p Fq(,)f(v)n(ol.)e(342)
f(of)i Fn(Contem-)397 2045 y(p)l(or)l(ary)j(Mathematics)p
Fq(,)f(pp.)e(55{66,)d(Amer.)i(Math.)h(So)r(c.,)g(2004.)227
2231 y([13])40 b Fa(V.)32 b(Dujmo)n(vi)870 2224 y(\023)868
2231 y(c)g(and)f(D.)h(R.)g(W)n(ood)p Fq(,)27 b(On)h(linear)f(la)n(y)n
(outs)g(of)h(graphs.)f Fn(Discr)l(ete)k(Math.)g(The)l(or.)397
2350 y(Comput.)g(Sci.)p Fq(,)d(to)g(app)r(ear.)227 2536
y([14])40 b Fa(B.)29 b(D)n(yck,)f(J.)h(Joevenazzo,)g(E.)f(Nickle,)h(J.)
f(Wilsdon,)h(and)g(S.)f(K.)h(Wisma)-6 b(th)p Fq(,)26
b(Dra)n(wing)397 2656 y Fp(K)468 2668 y Fg(n)536 2656
y Fq(in)c(three)g(dimensions)h(with)f(t)n(w)n(o)g(b)r(ends)h(p)r(er)f
(edge.)g(T)-7 b(ec)n(h.)22 b(Rep.)h(TR-CS-01-04,)e(Departmen)n(t)397
2775 y(of)28 b(Mathematics)f(and)h(Computer)f(Science,)h(Univ)n(ersit)n
(y)e(of)i(Leth)n(bridge,)f(2004.)227 2961 y([15])40 b
Fa(S.)22 b(Felsner,)i(G.)d(Liott)-6 b(a,)24 b(and)e(S.)f(Wisma)-6
b(th)p Fq(,)21 b(Straigh)n(t-line)d(dra)n(wings)f(on)i(restricted)f(in)
n(teger)397 3081 y(grids)23 b(in)h(t)n(w)n(o)f(and)g(three)h
(dimensions.)f(In)h Fa(P.)j(Mutzel,)g(M.)g(J)2422 3074
y(\177)2419 3081 y(unger,)h(and)f(S.)f(Leiper)-6 b(t)p
Fq(,)26 b(eds.,)397 3200 y Fn(Pr)l(o)l(c.)k(9th)g(International)f
(Symp.)h(on)g(Gr)l(aph)g(Dr)l(awing)f(\(GD)g('01\))p
Fq(,)g(v)n(ol.)d(2265)f(of)i Fn(L)l(e)l(ctur)l(e)h(Notes)397
3320 y(in)i(Comput.)h(Sci.)p Fq(,)d(pp.)g(328{342,)d(Springer,)h(2002.)
227 3506 y([16])40 b Fa(G.)28 b(H.)f(Hard)n(y)h(and)g(E.)f(M.)h(Wright)
p Fq(,)d Fn(A)n(n)i(intr)l(o)l(duction)g(to)f(the)i(the)l(ory)f(of)h
(numb)l(ers)p Fq(.)c(Claren-)397 3625 y(don,)k(\014fth)g(edn.,)g(1979.)
227 3811 y([17])40 b Fa(T.)32 b(Hasunuma)p Fq(,)26 b(La)n(ying)h(out)g
(iterated)h(line)f(digraphs)g(using)g(queues.)g(In)h([18)o(],)g(pp.)g
(202{213.)227 3997 y([18])40 b Fa(G.)27 b(Liott)-6 b(a)p
Fq(,)24 b(ed.,)h Fn(Pr)l(o)l(c.)i(11th)g(International)f(Symp.)h(on)f
(Gr)l(aph)h(Dr)l(awing)f(\(GD)g('03\))p Fq(,)g(v)n(ol.)d(2912)397
4117 y(of)28 b Fn(L)l(e)l(ctur)l(e)h(Notes)g(in)h(Comput.)h(Sci.)p
Fq(,)d(Springer,)f(2004.)227 4303 y([19])40 b Fa(J.)45
b(P)-7 b(a)n(ch,)47 b(T.)e(Thiele,)j(and)c(G.)h(T)1691
4296 y(\023)1688 4303 y(oth)p Fq(,)e(Three-dimensional)c(grid)h(dra)n
(wings)f(of)h(graphs.)397 4422 y(In)g Fa(B.)j(Chazelle,)i(J.)e(E.)g
(Goodman,)i(and)e(R.)g(Polla)n(ck)p Fq(,)e(eds.,)h Fn(A)l(dvanc)l(es)f
(in)f(discr)l(ete)397 4542 y(and)28 b(c)l(omputational)g(ge)l(ometry)p
Fq(,)e(v)n(ol.)e(223)f(of)i Fn(Contemp)l(ory)j(Mathematics)p
Fq(,)f(pp.)e(251{255,)d(Amer.)397 4662 y(Math.)28 b(So)r(c.,)g(1999.)
227 4848 y([20])40 b Fa(D.)i(R.)h(W)n(ood)p Fq(,)d(Queue)e(la)n(y)n
(outs,)h(tree-width,)i(and)d(three-dimensional)g(graph)f(dra)n(wing.)g
(In)397 4967 y Fa(M.)28 b(A)n(gra)-7 b(w)g(al)26 b(and)i(A.)f(Seth)p
Fq(,)e(eds.,)g Fn(Pr)l(o)l(c.)j(22nd)g(F)-6 b(oundations)27
b(of)h(Softwar)l(e)f(T)-6 b(e)l(chnolo)l(gy)28 b(and)397
5087 y(The)l(or)l(etic)l(al)34 b(Computer)f(Scienc)l(e)f(\(FST)g(TCS)h
('02\))p Fq(,)f(v)n(ol.)e(2556)e(of)i Fn(L)l(e)l(ctur)l(e)h(Notes)h(in)
g(Comput.)397 5206 y(Sci.)p Fq(,)d(pp.)f(348{359,)c(Springer,)j(2002.)
1860 5707 y(8)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
